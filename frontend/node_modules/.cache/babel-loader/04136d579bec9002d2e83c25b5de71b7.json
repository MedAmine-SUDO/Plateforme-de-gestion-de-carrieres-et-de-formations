{"ast":null,"code":"var _jsxFileName = \"/home/akrem/Desktop/frontend/src/containers/auth/SignUp.jsx\";\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport classnames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport { signUp } from \"../../actions/AuthActions\";\nimport { Redirect } from \"react-router-dom\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { useStyles, Copyright } from \"./Style\";\n\nconst SignUp = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const state = useSelector(state => state.auth);\n  const [username, setusername] = useState('');\n  const [email, setemail] = useState('');\n  const [password, setpassword] = useState('');\n  const [confPassword, setconfPassword] = useState('');\n  const [roles, setroles] = useState([\"candidat\"]);\n  const [nameErr, setnameErr] = useState('');\n  const [emailErr, setemailErr] = useState('');\n  const [passwordErr, setpasswordErr] = useState('');\n  const [confPasswordErr, setconfPasswordErr] = useState('');\n\n  const handleChange = (e, name) => {\n    const user = {};\n    const emailRegEx = RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n    user[name] = e.target.value; // validations\n\n    switch (name) {\n      case 'username':\n        setusername(user.username);\n        user.username.length < 3 ? setnameErr('Name must be at least 3 characters!') : setnameErr('');\n        break;\n\n      case 'email':\n        setemail(user.email);\n        !emailRegEx.test(user.email) ? setemailErr('Invalid Email!') : setemailErr('');\n        break;\n\n      case 'password':\n        setpassword(user.password);\n        user.password.length < 8 ? setpasswordErr('Password must be at least 8 characters!') : setpasswordErr('');\n        break;\n\n      case 'confPassword':\n        setconfPassword(user.confPassword);\n        user.confPassword !== password ? setconfPasswordErr('Passwords do not match!') : setconfPasswordErr('');\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSignUp = async e => {\n    e.preventDefault();\n\n    if (username && email && password && confPassword && !nameErr && !emailErr && !passwordErr && !confPasswordErr) {\n      dispatch(signUp({\n        username,\n        email,\n        password,\n        roles\n      }));\n    }\n  };\n\n  const authDetail = useSelector(state => state.auth);\n  if (authDetail.signUpSuccess) return /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }\n  });else return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"Sign up\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    onSubmit: handleSignUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    autoComplete: \"username\",\n    name: \"username\",\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"username\",\n    label: \"Username\",\n    autoFocus: true,\n    onChange: e => handleChange(e, 'username'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), nameErr && /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, nameErr), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 80\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email Address\",\n    name: \"email\",\n    autoComplete: \"email\",\n    onChange: e => handleChange(e, 'email'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }), emailErr && /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 26\n    }\n  }, emailErr)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    onChange: e => handleChange(e, 'password'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), passwordErr && /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, passwordErr)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"confPassword\",\n    label: \"Confirm Password\",\n    type: \"password\",\n    id: \"confPassword\",\n    autoComplete: \"current-password\",\n    onChange: e => handleChange(e, 'confPassword'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }), confPasswordErr && /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 33\n    }\n  }, confPasswordErr)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      value: \"allowExtraEmails\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 24\n      }\n    }),\n    label: \"I want to receive inspiration, marketing promotions and updates via email.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/signin\",\n    variant: \"body2\",\n    className: classes.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, \"Already have an account? Sign in\"))))), /*#__PURE__*/React.createElement(Box, {\n    mt: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Copyright, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }))) // <div>\n  //     <h2 className=\"text-center\">Create an Account</h2>\n  //     {state.signUpErr && <div className=\"alert alert-danger text-center\">\n  //       <span className=\"text-danger text-capitalize\">{state.signUpErr}</span>\n  //       </div>}\n  //     <form className=\"mt-4\" onSubmit={handleSignUp}>\n  //       <div className=\"form-group\">\n  //         <label htmlFor=\"name\">Enter Full username</label>\n  //         <input\n  //           type=\"text\"\n  //           name=\"username\"\n  //           className={classnames(\n  //             \"form-control\",\n  //             { 'is-invalid': nameErr, 'is-valid': !nameErr && username.length }\n  //           )}\n  //           id=\"username\"\n  //           placeholder=\"Full username\"\n  //           onChange={(e) => handleChange(e, 'username')}\n  //         />\n  //         {nameErr && <small className=\"text-danger\">{nameErr}</small>}\n  //       </div>\n  //       <div className=\"form-group\">\n  //         <label htmlFor=\"email\">Enter Email Address</label>\n  //         <input\n  //           type=\"email\"\n  //           name=\"email\"\n  //           className={classnames(\n  //             \"form-control\",\n  //             { 'is-invalid': emailErr, 'is-valid': !emailErr && email.length }\n  //           )}\n  //           id=\"email\"\n  //           placeholder=\"Email Address\"\n  //           onChange={(e) => handleChange(e, 'email')}\n  //         />\n  //         {emailErr && <small className=\"text-danger\">{emailErr}</small>}\n  //       </div>\n  //       <div className=\"form-group\">\n  //         <label htmlFor=\"password\">Enter Password</label>\n  //         <input\n  //           type=\"password\"\n  //           name=\"password\"\n  //           className={classnames(\n  //             \"form-control\",\n  //             { 'is-invalid': passwordErr, 'is-valid': !passwordErr && password.length }\n  //           )}\n  //           id=\"password\"\n  //           placeholder=\"Password\"\n  //           onChange={(e) => handleChange(e, 'password')}\n  //         />\n  //         {passwordErr && <small className=\"text-danger\">{passwordErr}</small>}\n  //       </div>\n  //       <div className=\"form-group\">\n  //         <label htmlFor=\"Confirm Password\">Confirm Password</label>\n  //         <input\n  //           type=\"password\" \n  //           name=\"confPassword\"\n  //           className={classnames(\n  //             \"form-control\",\n  //             { 'is-invalid': confPasswordErr, 'is-valid': !confPasswordErr && confPassword.length }\n  //           )}\n  //           id=\"confPassword\"\n  //           placeholder=\"confPassword\"\n  //           onChange={(e) => handleChange(e, 'confPassword')}\n  //         />\n  //         {confPasswordErr && <small className=\"text-danger\">{confPasswordErr}</small>}\n  //       </div>\n  //       <input type=\"submit\" className=\"btn btn-primary\" value=\"Sign Up\"/>\n  //     </form>\n  //     <p className=\"float-left\">\n  //       Already have an account? <NavLink to=\"signin\">Sign In</NavLink>\n  //     </p>\n  //   </div>\n  ;\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/home/akrem/Desktop/frontend/src/containers/auth/SignUp.jsx"],"names":["React","useState","useSelector","useDispatch","classnames","NavLink","signUp","Redirect","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","Container","useStyles","Copyright","SignUp","classes","dispatch","state","auth","username","setusername","email","setemail","password","setpassword","confPassword","setconfPassword","roles","setroles","nameErr","setnameErr","emailErr","setemailErr","passwordErr","setpasswordErr","confPasswordErr","setconfPasswordErr","handleChange","e","name","user","emailRegEx","RegExp","target","value","length","test","handleSignUp","preventDefault","authDetail","signUpSuccess","paper","avatar","form","errorText","submit","link"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport classnames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport { signUp } from \"../../actions/AuthActions\"\nimport { Redirect } from \"react-router-dom\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { useStyles, Copyright } from \"./Style\"\n\n\nconst SignUp = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state.auth);\n  const [username, setusername] = useState('');\n  const [email, setemail] = useState('');\n  const [password, setpassword] = useState('');\n  const [confPassword, setconfPassword] = useState('');\n  const [roles, setroles] = useState([\"candidat\"]);\n  const [nameErr, setnameErr] = useState('');\n  const [emailErr, setemailErr] = useState('');\n  const [passwordErr, setpasswordErr] = useState('');\n  const [confPasswordErr, setconfPasswordErr] = useState('');\n\n  const handleChange = (e, name) => {\n    const user = {};\n    const emailRegEx = RegExp(\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    );\n    user[name] = e.target.value;\n    // validations\n    switch (name) {\n      case 'username':\n        setusername(user.username);\n        user.username.length < 3 ? setnameErr('Name must be at least 3 characters!') : setnameErr('');\n        break;\n      case 'email':\n        setemail(user.email);\n        !emailRegEx.test(user.email) ? setemailErr('Invalid Email!') : setemailErr('');\n        break;\n      case 'password':\n        setpassword(user.password);\n        user.password.length < 8 ? setpasswordErr('Password must be at least 8 characters!') : setpasswordErr('');\n        break;\n      case 'confPassword':\n        setconfPassword(user.confPassword);\n        user.confPassword !== password ? setconfPasswordErr('Passwords do not match!') : setconfPasswordErr('');\n        break;\n      default:\n        break;\n    }\n  }\n\n  const handleSignUp = async (e) => {\n    e.preventDefault();\n    if (username && email && password && confPassword && !nameErr && !emailErr && !passwordErr && !confPasswordErr) {\n      dispatch(signUp({ username, email, password ,roles }));\n    }\n  }\n  const authDetail = useSelector((state) => state.auth);\n  if(authDetail.signUpSuccess)\n    return <Redirect to={\"/signin\"} />\n  else\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n    <CssBaseline />\n    <div className={classes.paper}>\n      <Avatar className={classes.avatar}>\n        <LockOutlinedIcon />\n      </Avatar>\n      <Typography component=\"h1\" variant=\"h5\">\n        Sign up\n      </Typography>\n      <form className={classes.form} noValidate onSubmit={handleSignUp}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              autoComplete=\"username\"\n              name=\"username\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Username\"\n              autoFocus\n              onChange={(e) => handleChange(e, 'username')}\n            />\n            {nameErr && <small className={classes.errorText}>{nameErr}</small>}<br></br>\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              onChange={(e) => handleChange(e, 'email')}\n            />\n            {emailErr && <small className={classes.errorText}>{emailErr}</small>}\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(e) => handleChange(e, 'password')}\n            />\n            {passwordErr && <small className={classes.errorText}>{passwordErr}</small>}\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              name=\"confPassword\"\n              label=\"Confirm Password\"\n              type=\"password\"\n              id=\"confPassword\"\n              autoComplete=\"current-password\"\n              onChange={(e) => handleChange(e, 'confPassword')}\n            />\n            {confPasswordErr && <small className={classes.errorText}>{confPasswordErr}</small>}\n          </Grid>\n          <Grid item xs={12}>\n            <FormControlLabel\n              control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n              label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n        >\n          Sign Up\n        </Button>\n        <Grid container justify=\"flex-end\">\n          <Grid item>\n            <NavLink to=\"/signin\" variant=\"body2\" className={classes.link}>\n              Already have an account? Sign in\n            </NavLink>\n          </Grid>\n        </Grid>\n      </form>\n    </div>\n    <Box mt={5}>\n      <Copyright />\n    </Box>\n  </Container>\n    // <div>\n    //     <h2 className=\"text-center\">Create an Account</h2>\n    //     {state.signUpErr && <div className=\"alert alert-danger text-center\">\n    //       <span className=\"text-danger text-capitalize\">{state.signUpErr}</span>\n    //       </div>}\n    //     <form className=\"mt-4\" onSubmit={handleSignUp}>\n    //       <div className=\"form-group\">\n    //         <label htmlFor=\"name\">Enter Full username</label>\n    //         <input\n    //           type=\"text\"\n    //           name=\"username\"\n    //           className={classnames(\n    //             \"form-control\",\n    //             { 'is-invalid': nameErr, 'is-valid': !nameErr && username.length }\n    //           )}\n    //           id=\"username\"\n    //           placeholder=\"Full username\"\n    //           onChange={(e) => handleChange(e, 'username')}\n    //         />\n    //         {nameErr && <small className=\"text-danger\">{nameErr}</small>}\n    //       </div>\n    //       <div className=\"form-group\">\n    //         <label htmlFor=\"email\">Enter Email Address</label>\n    //         <input\n    //           type=\"email\"\n    //           name=\"email\"\n    //           className={classnames(\n    //             \"form-control\",\n    //             { 'is-invalid': emailErr, 'is-valid': !emailErr && email.length }\n    //           )}\n    //           id=\"email\"\n    //           placeholder=\"Email Address\"\n    //           onChange={(e) => handleChange(e, 'email')}\n    //         />\n    //         {emailErr && <small className=\"text-danger\">{emailErr}</small>}\n    //       </div>\n    //       <div className=\"form-group\">\n    //         <label htmlFor=\"password\">Enter Password</label>\n    //         <input\n    //           type=\"password\"\n    //           name=\"password\"\n    //           className={classnames(\n    //             \"form-control\",\n    //             { 'is-invalid': passwordErr, 'is-valid': !passwordErr && password.length }\n    //           )}\n    //           id=\"password\"\n    //           placeholder=\"Password\"\n    //           onChange={(e) => handleChange(e, 'password')}\n    //         />\n    //         {passwordErr && <small className=\"text-danger\">{passwordErr}</small>}\n    //       </div>\n    //       <div className=\"form-group\">\n    //         <label htmlFor=\"Confirm Password\">Confirm Password</label>\n    //         <input\n    //           type=\"password\" \n    //           name=\"confPassword\"\n    //           className={classnames(\n    //             \"form-control\",\n    //             { 'is-invalid': confPasswordErr, 'is-valid': !confPasswordErr && confPassword.length }\n    //           )}\n    //           id=\"confPassword\"\n    //           placeholder=\"confPassword\"\n    //           onChange={(e) => handleChange(e, 'confPassword')}\n    //         />\n    //         {confPasswordErr && <small className=\"text-danger\">{confPasswordErr}</small>}\n    //       </div>\n    //       <input type=\"submit\" className=\"btn btn-primary\" value=\"Sign Up\"/>\n    //     </form>\n    //     <p className=\"float-left\">\n    //       Already have an account? <NavLink to=\"signin\">Sign In</NavLink>\n    //     </p>\n    //   </div>\n  )\n}\n\nexport default SignUp\n"]},"metadata":{},"sourceType":"module"}