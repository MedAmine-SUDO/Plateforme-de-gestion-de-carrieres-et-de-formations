{"ast":null,"code":"var _jsxFileName = \"/home/akrem/Desktop/Plateforme-de-gestion-de-carrieres-et-de-formations/frontend/src/containers/AdminDashboard/Content/UserList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAllUsers } from \"../../../actions/AuthActions\";\nimport MaterialTable from \"material-table\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { stylesContent } from \"../styles/Styles\";\nimport { tableIcons } from \"../../tableFeatures/tableIcons\";\nimport NavPills from \"../../../components/NavPills/NavPills.js\";\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Schedule from \"@material-ui/icons/Schedule\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SnackbarContent from \"../../../components/Snackbar/SnackbarContent.js\";\nimport { signUp } from \"../../../actions/AuthActions\";\n\nfunction UserList(props) {\n  const dispatch = useDispatch();\n  const authDetail = useSelector(state => state.auth);\n  const [alert, setAlert] = useState(null);\n  const [state, setState] = useState({\n    columns: [{\n      title: \"ID\",\n      field: \"id\"\n    }, {\n      title: \"Username\",\n      field: \"username\"\n    }, {\n      title: \"Role\",\n      field: \"roles[0].name\"\n    }, {\n      title: \"Email\",\n      field: \"email\"\n    }, {\n      title: \"Password\",\n      field: \"password\"\n    }],\n    data: []\n  });\n  useEffect(() => {\n    dispatch(getAllUsers()).then(res => {\n      console.log(res.data);\n      if (res) setState({\n        columns: state.columns,\n        data: res.data\n      });\n      setAlert(null);\n    }).catch(err => {\n      setAlert( /*#__PURE__*/React.createElement(SnackbarContent, {\n        message: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }\n        }, \"WARNING ALERT:\"), \" Could not reach data... Refresh Page...\"),\n        close: true,\n        color: \"warning\",\n        icon: Warning,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }));\n    });\n  }, [dispatch]);\n  if (authDetail.loading) return /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 34\n    }\n  });else return /*#__PURE__*/React.createElement(React.Fragment, null, alert, /*#__PURE__*/React.createElement(NavPills, {\n    color: \"adminDashboard\",\n    tabs: [{\n      tabButton: \"Users List\",\n      tabIcon: Dashboard,\n      tabContent: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MaterialTable, {\n        title: \"Users List\",\n        columns: state.columns,\n        data: state.data,\n        icons: tableIcons,\n        editable: {\n          onRowAdd: newData => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              setState(prevState => {\n                const data = [...prevState.data];\n                data.push(newData);\n                console.log(prevState);\n                return { ...prevState,\n                  data\n                };\n              });\n            }, 600);\n          }),\n          // onRowUpdate: (newData, oldData) =>\n          //   new Promise((resolve) => {\n          //     setTimeout(() => {\n          //       resolve();\n          //       if (oldData) {\n          //         setState((prevState) => {\n          //           const data = [...prevState.data];\n          //           data[data.indexOf(oldData)] = newData;\n          //           return { ...prevState, data };\n          //         });\n          //       }\n          //     }, 600);\n          //   }),\n          onRowDelete: oldData => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              setState(prevState => {\n                const data = [...prevState.data];\n                data.splice(data.indexOf(oldData), 1);\n                return { ...prevState,\n                  data\n                };\n              });\n            }, 600);\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }\n      }))\n    }, {\n      tabButton: \"Account Settings\",\n      tabIcon: Schedule,\n      tabContent: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 19\n        }\n      }, \"blabla\"))\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }));\n}\n\nUserList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(stylesContent)(UserList);","map":{"version":3,"sources":["/home/akrem/Desktop/Plateforme-de-gestion-de-carrieres-et-de-formations/frontend/src/containers/AdminDashboard/Content/UserList.js"],"names":["React","useState","useEffect","useSelector","useDispatch","getAllUsers","MaterialTable","PropTypes","withStyles","stylesContent","tableIcons","NavPills","Dashboard","Schedule","Warning","CircularProgress","SnackbarContent","signUp","UserList","props","dispatch","authDetail","state","auth","alert","setAlert","setState","columns","title","field","data","then","res","console","log","catch","err","loading","tabButton","tabIcon","tabContent","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowDelete","oldData","splice","indexOf","propTypes","classes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAllUsers } from \"../../../actions/AuthActions\";\nimport MaterialTable from \"material-table\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { stylesContent } from \"../styles/Styles\";\nimport { tableIcons } from \"../../tableFeatures/tableIcons\";\nimport NavPills from \"../../../components/NavPills/NavPills.js\";\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Schedule from \"@material-ui/icons/Schedule\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SnackbarContent from \"../../../components/Snackbar/SnackbarContent.js\";\nimport { signUp } from \"../../../actions/AuthActions\";\n\nfunction UserList(props) {\n  const dispatch = useDispatch();\n  const authDetail = useSelector((state) => state.auth);\n  const [alert, setAlert] = useState(null);\n  const [state, setState] = useState({\n    columns: [\n      { title: \"ID\", field: \"id\" },\n      { title: \"Username\", field: \"username\" },\n      { title: \"Role\", field: \"roles[0].name\" },\n      { title: \"Email\", field: \"email\" },\n      { title: \"Password\", field: \"password\" },\n    ],\n    data: [],\n  });\n  useEffect(() => {\n    dispatch(getAllUsers())\n      .then((res) => {\n        console.log(res.data);\n        if (res)\n          setState({\n            columns: state.columns,\n            data: res.data,\n          });\n          setAlert(null)\n      })\n      .catch((err) => {\n        setAlert(\n          <SnackbarContent\n            message={\n              <span>\n                <b>WARNING ALERT:</b> Could not reach data... Refresh Page...\n              </span>\n            }\n            close\n            color=\"warning\"\n            icon={Warning}\n          />\n        );\n      });\n  }, [dispatch]);\n  if (authDetail.loading) return <CircularProgress />;\n  else\n    return (\n      <>\n        {alert}\n        <NavPills\n          color=\"adminDashboard\"\n          tabs={[\n            {\n              tabButton: \"Users List\",\n              tabIcon: Dashboard,\n              tabContent: (\n                <>\n                  <MaterialTable\n                    title=\"Users List\"\n                    columns={state.columns}\n                    data={state.data}\n                    icons={tableIcons}\n                    editable={{\n                      onRowAdd: (newData) =>\n                        new Promise((resolve) => {\n                          setTimeout(() => {\n                            resolve();\n                            setState((prevState) => {\n                              const data = [...prevState.data];\n                              data.push(newData);\n                              console.log(prevState)\n                              return { ...prevState, data };\n                            });\n                          }, 600);\n                        }),\n                      // onRowUpdate: (newData, oldData) =>\n                      //   new Promise((resolve) => {\n                      //     setTimeout(() => {\n                      //       resolve();\n                      //       if (oldData) {\n                      //         setState((prevState) => {\n                      //           const data = [...prevState.data];\n                      //           data[data.indexOf(oldData)] = newData;\n                      //           return { ...prevState, data };\n                      //         });\n                      //       }\n                      //     }, 600);\n                      //   }),\n                      onRowDelete: (oldData) =>\n                        new Promise((resolve) => {\n                          setTimeout(() => {\n                            resolve();\n                            setState((prevState) => {\n                              const data = [...prevState.data];\n                              data.splice(data.indexOf(oldData), 1);\n                              return { ...prevState, data };\n                            });\n                          }, 600);\n                        }),\n                    }}\n                  />\n                </>\n              ),\n            },\n            {\n              tabButton: \"Account Settings\",\n              tabIcon: Schedule,\n              tabContent: (\n                <>\n                  <h1>blabla</h1>\n                </>\n              ),\n            },\n          ]}\n        />\n      </>\n    );\n}\n\nUserList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(stylesContent)(UserList);\n"]},"metadata":{},"sourceType":"module"}