{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getHours = getHours;\nexports.getMinutes = getMinutes;\nexports.getSeconds = getSeconds;\nvar hourOptionalSecondsRegExp = /^(([0-1])?[0-9]|2[0-3]):[0-5][0-9](:([0-5][0-9]))?$/;\nvar hourRegExp = /^(([0-1])?[0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9])$/;\n\nfunction getHours(date) {\n  if (date instanceof Date) {\n    return date.getHours();\n  }\n\n  if (typeof date === 'string' && hourOptionalSecondsRegExp.test(date)) {\n    var hourString = date.split(':')[0];\n    return parseInt(hourString, 10);\n  }\n\n  throw new Error(\"Failed to get hours from date: \".concat(date, \".\"));\n}\n\nfunction getMinutes(date) {\n  if (date instanceof Date) {\n    return date.getMinutes();\n  }\n\n  if (typeof date === 'string' && hourOptionalSecondsRegExp.test(date)) {\n    var minuteString = date.split(':')[1];\n    return parseInt(minuteString, 10);\n  }\n\n  throw new Error(\"Failed to get minutes from date: \".concat(date, \".\"));\n}\n\nfunction getSeconds(date) {\n  if (date instanceof Date) {\n    return date.getSeconds();\n  }\n\n  if (typeof date === 'string') {\n    if (hourRegExp.test(date)) {\n      var secondString = date.split(':')[2];\n      return parseInt(secondString, 10);\n    }\n\n    if (hourOptionalSecondsRegExp.test(date)) {\n      return 0;\n    }\n  }\n\n  throw new Error(\"Failed to get seconds from date: \".concat(date, \".\"));\n}","map":{"version":3,"sources":["/home/akrem/Desktop/Plateforme-de-gestion-de-carrieres-et-de-formations/frontend/node_modules/react-clock/dist/shared/dates.js"],"names":["Object","defineProperty","exports","value","getHours","getMinutes","getSeconds","hourOptionalSecondsRegExp","hourRegExp","date","Date","test","hourString","split","parseInt","Error","concat","minuteString","secondString"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,QAAR,GAAmBA,QAAnB;AACAF,OAAO,CAACG,UAAR,GAAqBA,UAArB;AACAH,OAAO,CAACI,UAAR,GAAqBA,UAArB;AACA,IAAIC,yBAAyB,GAAG,qDAAhC;AACA,IAAIC,UAAU,GAAG,kDAAjB;;AAEA,SAASJ,QAAT,CAAkBK,IAAlB,EAAwB;AACtB,MAAIA,IAAI,YAAYC,IAApB,EAA0B;AACxB,WAAOD,IAAI,CAACL,QAAL,EAAP;AACD;;AAED,MAAI,OAAOK,IAAP,KAAgB,QAAhB,IAA4BF,yBAAyB,CAACI,IAA1B,CAA+BF,IAA/B,CAAhC,EAAsE;AACpE,QAAIG,UAAU,GAAGH,IAAI,CAACI,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAjB;AACA,WAAOC,QAAQ,CAACF,UAAD,EAAa,EAAb,CAAf;AACD;;AAED,QAAM,IAAIG,KAAJ,CAAU,kCAAkCC,MAAlC,CAAyCP,IAAzC,EAA+C,GAA/C,CAAV,CAAN;AACD;;AAED,SAASJ,UAAT,CAAoBI,IAApB,EAA0B;AACxB,MAAIA,IAAI,YAAYC,IAApB,EAA0B;AACxB,WAAOD,IAAI,CAACJ,UAAL,EAAP;AACD;;AAED,MAAI,OAAOI,IAAP,KAAgB,QAAhB,IAA4BF,yBAAyB,CAACI,IAA1B,CAA+BF,IAA/B,CAAhC,EAAsE;AACpE,QAAIQ,YAAY,GAAGR,IAAI,CAACI,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAnB;AACA,WAAOC,QAAQ,CAACG,YAAD,EAAe,EAAf,CAAf;AACD;;AAED,QAAM,IAAIF,KAAJ,CAAU,oCAAoCC,MAApC,CAA2CP,IAA3C,EAAiD,GAAjD,CAAV,CAAN;AACD;;AAED,SAASH,UAAT,CAAoBG,IAApB,EAA0B;AACxB,MAAIA,IAAI,YAAYC,IAApB,EAA0B;AACxB,WAAOD,IAAI,CAACH,UAAL,EAAP;AACD;;AAED,MAAI,OAAOG,IAAP,KAAgB,QAApB,EAA8B;AAC5B,QAAID,UAAU,CAACG,IAAX,CAAgBF,IAAhB,CAAJ,EAA2B;AACzB,UAAIS,YAAY,GAAGT,IAAI,CAACI,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAnB;AACA,aAAOC,QAAQ,CAACI,YAAD,EAAe,EAAf,CAAf;AACD;;AAED,QAAIX,yBAAyB,CAACI,IAA1B,CAA+BF,IAA/B,CAAJ,EAA0C;AACxC,aAAO,CAAP;AACD;AACF;;AAED,QAAM,IAAIM,KAAJ,CAAU,oCAAoCC,MAApC,CAA2CP,IAA3C,EAAiD,GAAjD,CAAV,CAAN;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getHours = getHours;\nexports.getMinutes = getMinutes;\nexports.getSeconds = getSeconds;\nvar hourOptionalSecondsRegExp = /^(([0-1])?[0-9]|2[0-3]):[0-5][0-9](:([0-5][0-9]))?$/;\nvar hourRegExp = /^(([0-1])?[0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9])$/;\n\nfunction getHours(date) {\n  if (date instanceof Date) {\n    return date.getHours();\n  }\n\n  if (typeof date === 'string' && hourOptionalSecondsRegExp.test(date)) {\n    var hourString = date.split(':')[0];\n    return parseInt(hourString, 10);\n  }\n\n  throw new Error(\"Failed to get hours from date: \".concat(date, \".\"));\n}\n\nfunction getMinutes(date) {\n  if (date instanceof Date) {\n    return date.getMinutes();\n  }\n\n  if (typeof date === 'string' && hourOptionalSecondsRegExp.test(date)) {\n    var minuteString = date.split(':')[1];\n    return parseInt(minuteString, 10);\n  }\n\n  throw new Error(\"Failed to get minutes from date: \".concat(date, \".\"));\n}\n\nfunction getSeconds(date) {\n  if (date instanceof Date) {\n    return date.getSeconds();\n  }\n\n  if (typeof date === 'string') {\n    if (hourRegExp.test(date)) {\n      var secondString = date.split(':')[2];\n      return parseInt(secondString, 10);\n    }\n\n    if (hourOptionalSecondsRegExp.test(date)) {\n      return 0;\n    }\n  }\n\n  throw new Error(\"Failed to get seconds from date: \".concat(date, \".\"));\n}"]},"metadata":{},"sourceType":"script"}