{"ast":null,"code":"import apiCall from '../apiCall';\nimport Cookies from \"js-cookie\";\nimport jwtDecode from \"jwt-decode\";\nexport const signUp = user => async dispatch => {\n  try {\n    dispatch({\n      type: 'SIGNUP_USER_LOADING'\n    });\n    const res = await apiCall('/auth/signup', 'post', user);\n    dispatch({\n      type: 'SIGNUP_USER_SUCCESS',\n      payload: res.data\n    });\n    return res;\n  } catch (err) {\n    console.log(err.response);\n    return dispatch({\n      type: 'SIGNUP_USER_FAILURE',\n      payload: err.response.data\n    });\n  }\n};\nexport const setCurrentUser = (Cookies, jwtDecode) => async dispatch => {\n  try {\n    dispatch({\n      type: 'SET_CURRENT_USER_LOADING'\n    });\n    const payload = jwtDecode(Cookies.get('token'));\n    dispatch({\n      type: 'SET_CURRENT_USER_SUCCESS',\n      payload\n    });\n  } catch (err) {\n    dispatch({\n      type: 'SET_CURRENT_USER_FAILURE',\n      payload: err\n    });\n  }\n};\nexport const signIn = user => async dispatch => {\n  try {\n    dispatch({\n      type: 'SIGNIN_USER_LOADING'\n    });\n    const res = await apiCall('/auth/signin', 'post', user);\n    dispatch({\n      type: 'SIGNIN_USER_SUCCESS',\n      payload: res.data\n    });\n    Cookies.set('token', res.data.accessToken);\n    dispatch(setCurrentUser(Cookies, jwtDecode));\n    return res;\n  } catch (err) {\n    return dispatch({\n      type: 'SIGNIN_USER_FAILURE',\n      payload: err\n    });\n  }\n};\nexport const signUpDone = () => async dispatch => {\n  try {\n    dispatch({\n      type: 'SIGNUPDONE_USER_SUCCESS'\n    });\n  } catch (err) {\n    return dispatch({\n      type: 'SIGNUPDONE_USER_FAILURE',\n      payload: err\n    });\n  }\n};\nexport const logoutUser = () => async dispatch => {\n  try {\n    dispatch({\n      type: 'LOGOUT_USER_LOADING'\n    });\n    dispatch({\n      type: 'LOGOUT_USER_SUCCESS'\n    });\n  } catch (err) {\n    dispatch({\n      type: 'SET_CURRENT_USER_FAILURE',\n      payload: err\n    });\n  }\n};","map":{"version":3,"sources":["/home/akrem/Desktop/frontend/src/actions/AuthActions.js"],"names":["apiCall","Cookies","jwtDecode","signUp","user","dispatch","type","res","payload","data","err","console","log","response","setCurrentUser","get","signIn","set","accessToken","signUpDone","logoutUser"],"mappings":"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","sourcesContent":["import apiCall from '../apiCall';\nimport Cookies from \"js-cookie\";\nimport jwtDecode from \"jwt-decode\";\nexport const signUp = (user) => async (dispatch) => {  \n  try {\n    dispatch({ type: 'SIGNUP_USER_LOADING' });\n    const res = await apiCall('/auth/signup', 'post', user);\n    dispatch({ type: 'SIGNUP_USER_SUCCESS', payload: res.data });\n    return res;\n  } catch (err) {\n    console.log(err.response)\n    return dispatch({ type: 'SIGNUP_USER_FAILURE', payload: err.response.data });\n  }\n};\n\nexport const setCurrentUser = (Cookies, jwtDecode)=> async  (dispatch) => {\n  try {\n    dispatch({ type: 'SET_CURRENT_USER_LOADING' });\n    const payload = jwtDecode(Cookies.get('token'));\n    dispatch({ type: 'SET_CURRENT_USER_SUCCESS', payload });\n  } catch (err) {\n    dispatch({ type: 'SET_CURRENT_USER_FAILURE', payload: err })\n  }\n}\n\nexport const signIn = (user) => async (dispatch) => {\n  try {\n    dispatch({ type: 'SIGNIN_USER_LOADING' });\n    const res = await apiCall('/auth/signin', 'post', user);\n    dispatch({ type: 'SIGNIN_USER_SUCCESS', payload: res.data });\n    Cookies.set('token', res.data.accessToken);\n    dispatch(setCurrentUser(Cookies,jwtDecode))\n    return res;\n  } catch (err) {\n    return dispatch({ type: 'SIGNIN_USER_FAILURE', payload: err })\n  }\n};\nexport const signUpDone = () => async (dispatch ) =>{\n  try {\n    dispatch({ type: 'SIGNUPDONE_USER_SUCCESS'});\n  } catch (err) {\n    return dispatch({ type: 'SIGNUPDONE_USER_FAILURE', payload: err })\n  }\n}\nexport const logoutUser = ()=> async  (dispatch) => {\n  try {\n    dispatch({ type: 'LOGOUT_USER_LOADING' });\n    dispatch({ type: 'LOGOUT_USER_SUCCESS'});\n  } catch (err) {\n    dispatch({ type: 'SET_CURRENT_USER_FAILURE', payload: err })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}