{"ast":null,"code":"var _jsxFileName = \"/home/akrem/Desktop/frontend/src/containers/auth/SignUp.jsx\";\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { signUp, signUpDone } from \"../../actions/AuthActions\";\nimport { Redirect } from \"react-router-dom\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { useStyles, Copyright } from \"./Style\";\n\nconst SignUp = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const authDetail = useSelector(state => state.auth);\n  const [username, setusername] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [confPassword, setconfPassword] = useState(\"\");\n  const [roles, setroles] = useState([\"candidat\"]);\n  const [nameErr, setnameErr] = useState(\"\");\n  const [emailErr, setemailErr] = useState(\"\");\n  const [passwordErr, setpasswordErr] = useState(\"\");\n  const [confPasswordErr, setconfPasswordErr] = useState(\"\");\n\n  const handleChange = (e, name) => {\n    const user = {};\n    const emailRegEx = RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n    user[name] = e.target.value; // validations\n\n    switch (name) {\n      case \"username\":\n        setusername(user.username);\n        user.username.length < 3 ? setnameErr(\"Name must be at least 3 characters!\") : setnameErr(\"\");\n        break;\n\n      case \"email\":\n        setemail(user.email);\n        !emailRegEx.test(user.email) ? setemailErr(\"Invalid Email!\") : setemailErr(\"\");\n        break;\n\n      case \"password\":\n        setpassword(user.password);\n        user.password.length < 8 ? setpasswordErr(\"Password must be at least 8 characters!\") : setpasswordErr(\"\");\n        break;\n\n      case \"confPassword\":\n        setconfPassword(user.confPassword);\n        user.confPassword !== password ? setconfPasswordErr(\"Passwords do not match!\") : setconfPasswordErr(\"\");\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSignUp = async e => {\n    e.preventDefault();\n\n    if (username && email && password && confPassword && !nameErr && !emailErr && !passwordErr && !confPasswordErr) {\n      dispatch(signUp({\n        username,\n        email,\n        password,\n        roles\n      }));\n    }\n  };\n\n  if (authDetail.isAuthenticated) return /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 42\n    }\n  });else if (authDetail.signUpSuccess) {\n    {\n      dispatch(signUpDone());\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/signin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 12\n        }\n      });\n    }\n  } else return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"Sign up\"), authDetail.signUpErr && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-danger text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 36\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, authDetail.signUpErr)), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    onSubmit: handleSignUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    autoComplete: \"username\",\n    name: \"username\",\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"username\",\n    label: \"Username\",\n    autoFocus: true,\n    onChange: e => handleChange(e, \"username\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }), nameErr && /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  }, nameErr), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email Address\",\n    name: \"email\",\n    autoComplete: \"email\",\n    onChange: e => handleChange(e, \"email\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }), emailErr && /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, emailErr)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    onChange: e => handleChange(e, \"password\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }), passwordErr && /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  }, passwordErr)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"confPassword\",\n    label: \"Confirm Password\",\n    type: \"password\",\n    id: \"confPassword\",\n    autoComplete: \"current-password\",\n    onChange: e => handleChange(e, \"confPassword\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }), confPasswordErr && /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 19\n    }\n  }, confPasswordErr)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      value: \"allowExtraEmails\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }),\n    label: \"I want to receive inspiration, marketing promotions and updates via email.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/signin\",\n    variant: \"body2\",\n    className: classes.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, \"Already have an account? Sign in\"))))), /*#__PURE__*/React.createElement(Box, {\n    mt: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Copyright, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }))) // <div>\n  //     <h2 className=\"text-center\">Create an Account</h2>\n  //     {authDetail.signUpErr && <div className=\"alert alert-danger text-center\">\n  //       <span className=\"text-danger text-capitalize\">{authDetail.signUpErr}</span>\n  //       </div>}\n  //     <form className=\"mt-4\" onSubmit={handleSignUp}>\n  //       <div className=\"form-group\">\n  //         <label htmlFor=\"name\">Enter Full username</label>\n  //         <input\n  //           type=\"text\"\n  //           name=\"username\"\n  //           className={classnames(\n  //             \"form-control\",\n  //             { 'is-invalid': nameErr, 'is-valid': !nameErr && username.length }\n  //           )}\n  //           id=\"username\"\n  //           placeholder=\"Full username\"\n  //           onChange={(e) => handleChange(e, 'username')}\n  //         />\n  //         {nameErr && <small className=\"text-danger\">{nameErr}</small>}\n  //       </div>\n  //       <div className=\"form-group\">\n  //         <label htmlFor=\"email\">Enter Email Address</label>\n  //         <input\n  //           type=\"email\"\n  //           name=\"email\"\n  //           className={classnames(\n  //             \"form-control\",\n  //             { 'is-invalid': emailErr, 'is-valid': !emailErr && email.length }\n  //           )}\n  //           id=\"email\"\n  //           placeholder=\"Email Address\"\n  //           onChange={(e) => handleChange(e, 'email')}\n  //         />\n  //         {emailErr && <small className=\"text-danger\">{emailErr}</small>}\n  //       </div>\n  //       <div className=\"form-group\">\n  //         <label htmlFor=\"password\">Enter Password</label>\n  //         <input\n  //           type=\"password\"\n  //           name=\"password\"\n  //           className={classnames(\n  //             \"form-control\",\n  //             { 'is-invalid': passwordErr, 'is-valid': !passwordErr && password.length }\n  //           )}\n  //           id=\"password\"\n  //           placeholder=\"Password\"\n  //           onChange={(e) => handleChange(e, 'password')}\n  //         />\n  //         {passwordErr && <small className=\"text-danger\">{passwordErr}</small>}\n  //       </div>\n  //       <div className=\"form-group\">\n  //         <label htmlFor=\"Confirm Password\">Confirm Password</label>\n  //         <input\n  //           type=\"password\"\n  //           name=\"confPassword\"\n  //           className={classnames(\n  //             \"form-control\",\n  //             { 'is-invalid': confPasswordErr, 'is-valid': !confPasswordErr && confPassword.length }\n  //           )}\n  //           id=\"confPassword\"\n  //           placeholder=\"confPassword\"\n  //           onChange={(e) => handleChange(e, 'confPassword')}\n  //         />\n  //         {confPasswordErr && <small className=\"text-danger\">{confPasswordErr}</small>}\n  //       </div>\n  //       <input type=\"submit\" className=\"btn btn-primary\" value=\"Sign Up\"/>\n  //     </form>\n  //     <p className=\"float-left\">\n  //       Already have an account? <NavLink to=\"signin\">Sign In</NavLink>\n  //     </p>\n  //   </div>\n  ;\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/home/akrem/Desktop/frontend/src/containers/auth/SignUp.jsx"],"names":["React","useState","useSelector","useDispatch","NavLink","signUp","signUpDone","Redirect","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","Container","useStyles","Copyright","SignUp","classes","dispatch","authDetail","state","auth","username","setusername","email","setemail","password","setpassword","confPassword","setconfPassword","roles","setroles","nameErr","setnameErr","emailErr","setemailErr","passwordErr","setpasswordErr","confPasswordErr","setconfPasswordErr","handleChange","e","name","user","emailRegEx","RegExp","target","value","length","test","handleSignUp","preventDefault","isAuthenticated","signUpSuccess","paper","avatar","signUpErr","form","errorText","submit","link"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { signUp, signUpDone } from \"../../actions/AuthActions\";\nimport { Redirect } from \"react-router-dom\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { useStyles, Copyright } from \"./Style\";\n\nconst SignUp = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const authDetail = useSelector((state) => state.auth);\n  const [username, setusername] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [confPassword, setconfPassword] = useState(\"\");\n  const [roles, setroles] = useState([\"candidat\"]);\n  const [nameErr, setnameErr] = useState(\"\");\n  const [emailErr, setemailErr] = useState(\"\");\n  const [passwordErr, setpasswordErr] = useState(\"\");\n  const [confPasswordErr, setconfPasswordErr] = useState(\"\");\n\n  const handleChange = (e, name) => {\n    const user = {};\n    const emailRegEx = RegExp(\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    );\n    user[name] = e.target.value;\n    // validations\n    switch (name) {\n      case \"username\":\n        setusername(user.username);\n        user.username.length < 3\n          ? setnameErr(\"Name must be at least 3 characters!\")\n          : setnameErr(\"\");\n        break;\n      case \"email\":\n        setemail(user.email);\n        !emailRegEx.test(user.email)\n          ? setemailErr(\"Invalid Email!\")\n          : setemailErr(\"\");\n        break;\n      case \"password\":\n        setpassword(user.password);\n        user.password.length < 8\n          ? setpasswordErr(\"Password must be at least 8 characters!\")\n          : setpasswordErr(\"\");\n        break;\n      case \"confPassword\":\n        setconfPassword(user.confPassword);\n        user.confPassword !== password\n          ? setconfPasswordErr(\"Passwords do not match!\")\n          : setconfPasswordErr(\"\");\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSignUp = async (e) => {\n    e.preventDefault();\n    if (\n      username &&\n      email &&\n      password &&\n      confPassword &&\n      !nameErr &&\n      !emailErr &&\n      !passwordErr &&\n      !confPasswordErr\n    ) {\n      dispatch(signUp({ username, email, password, roles }));\n    }\n  };\n  if (authDetail.isAuthenticated) return <Redirect to={\"/\"} />;\n  else if (authDetail.signUpSuccess) {\n   { dispatch(signUpDone());\n    return <Redirect to={\"/signin\"} />;}\n  } else\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          {authDetail.signUpErr && <div className=\"alert alert-danger text-center\">\n          <span className=\"text-danger text-capitalize\">{authDetail.signUpErr}</span>\n          </div>}\n          <form className={classes.form} noValidate onSubmit={handleSignUp}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  autoComplete=\"username\"\n                  name=\"username\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"username\"\n                  label=\"Username\"\n                  autoFocus\n                  onChange={(e) => handleChange(e, \"username\")}\n                />\n                {nameErr && (\n                  <small className={classes.errorText}>{nameErr}</small>\n                )}\n                <br></br>\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  onChange={(e) => handleChange(e, \"email\")}\n                />\n                {emailErr && (\n                  <small className={classes.errorText}>{emailErr}</small>\n                )}\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  onChange={(e) => handleChange(e, \"password\")}\n                />\n                {passwordErr && (\n                  <small className={classes.errorText}>{passwordErr}</small>\n                )}\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"confPassword\"\n                  label=\"Confirm Password\"\n                  type=\"password\"\n                  id=\"confPassword\"\n                  autoComplete=\"current-password\"\n                  onChange={(e) => handleChange(e, \"confPassword\")}\n                />\n                {confPasswordErr && (\n                  <small className={classes.errorText}>{confPasswordErr}</small>\n                )}\n              </Grid>\n              <Grid item xs={12}>\n                <FormControlLabel\n                  control={\n                    <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\n                  }\n                  label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign Up\n            </Button>\n            <Grid container justify=\"flex-end\">\n              <Grid item>\n                <NavLink to=\"/signin\" variant=\"body2\" className={classes.link}>\n                  Already have an account? Sign in\n                </NavLink>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n        <Box mt={5}>\n          <Copyright />\n        </Box>\n      </Container>\n      // <div>\n      //     <h2 className=\"text-center\">Create an Account</h2>\n      //     {authDetail.signUpErr && <div className=\"alert alert-danger text-center\">\n      //       <span className=\"text-danger text-capitalize\">{authDetail.signUpErr}</span>\n      //       </div>}\n      //     <form className=\"mt-4\" onSubmit={handleSignUp}>\n      //       <div className=\"form-group\">\n      //         <label htmlFor=\"name\">Enter Full username</label>\n      //         <input\n      //           type=\"text\"\n      //           name=\"username\"\n      //           className={classnames(\n      //             \"form-control\",\n      //             { 'is-invalid': nameErr, 'is-valid': !nameErr && username.length }\n      //           )}\n      //           id=\"username\"\n      //           placeholder=\"Full username\"\n      //           onChange={(e) => handleChange(e, 'username')}\n      //         />\n      //         {nameErr && <small className=\"text-danger\">{nameErr}</small>}\n      //       </div>\n      //       <div className=\"form-group\">\n      //         <label htmlFor=\"email\">Enter Email Address</label>\n      //         <input\n      //           type=\"email\"\n      //           name=\"email\"\n      //           className={classnames(\n      //             \"form-control\",\n      //             { 'is-invalid': emailErr, 'is-valid': !emailErr && email.length }\n      //           )}\n      //           id=\"email\"\n      //           placeholder=\"Email Address\"\n      //           onChange={(e) => handleChange(e, 'email')}\n      //         />\n      //         {emailErr && <small className=\"text-danger\">{emailErr}</small>}\n      //       </div>\n      //       <div className=\"form-group\">\n      //         <label htmlFor=\"password\">Enter Password</label>\n      //         <input\n      //           type=\"password\"\n      //           name=\"password\"\n      //           className={classnames(\n      //             \"form-control\",\n      //             { 'is-invalid': passwordErr, 'is-valid': !passwordErr && password.length }\n      //           )}\n      //           id=\"password\"\n      //           placeholder=\"Password\"\n      //           onChange={(e) => handleChange(e, 'password')}\n      //         />\n      //         {passwordErr && <small className=\"text-danger\">{passwordErr}</small>}\n      //       </div>\n      //       <div className=\"form-group\">\n      //         <label htmlFor=\"Confirm Password\">Confirm Password</label>\n      //         <input\n      //           type=\"password\"\n      //           name=\"confPassword\"\n      //           className={classnames(\n      //             \"form-control\",\n      //             { 'is-invalid': confPasswordErr, 'is-valid': !confPasswordErr && confPassword.length }\n      //           )}\n      //           id=\"confPassword\"\n      //           placeholder=\"confPassword\"\n      //           onChange={(e) => handleChange(e, 'confPassword')}\n      //         />\n      //         {confPasswordErr && <small className=\"text-danger\">{confPasswordErr}</small>}\n      //       </div>\n      //       <input type=\"submit\" className=\"btn btn-primary\" value=\"Sign Up\"/>\n      //     </form>\n      //     <p className=\"float-left\">\n      //       Already have an account? <NavLink to=\"signin\">Sign In</NavLink>\n      //     </p>\n      //   </div>\n    );\n};\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}