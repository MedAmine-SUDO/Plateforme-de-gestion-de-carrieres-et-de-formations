{"ast":null,"code":"var _jsxFileName = \"/home/medamine/Desktop/Plateforme-de-gestion-de-carrieres-et-de-formations/frontend/src/containers/AdminDashboard/Navigator.js\";\nimport React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport DnsRoundedIcon from \"@material-ui/icons/DnsRounded\";\nimport PermMediaOutlinedIcon from \"@material-ui/icons/PhotoSizeSelectActual\";\nimport PublicIcon from \"@material-ui/icons/Public\";\nimport SettingsEthernetIcon from \"@material-ui/icons/SettingsEthernet\";\nimport SettingsInputComponentIcon from \"@material-ui/icons/SettingsInputComponent\";\nimport TimerIcon from \"@material-ui/icons/Timer\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport PhonelinkSetupIcon from \"@material-ui/icons/PhonelinkSetup\";\nimport { stylesNavigator } from \"./styles/Styles\";\nconst defaultCategories = [{\n  id: \"Develop\",\n  children: [{\n    id: \"Users List\",\n    icon: /*#__PURE__*/React.createElement(PeopleIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }),\n    link: \"/admin_dashboard/users\"\n  }, {\n    id: \"Tests\",\n    icon: /*#__PURE__*/React.createElement(DnsRoundedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }),\n    link: \"/admin_dashboard/tests\"\n  }, {\n    id: \"Storage\",\n    icon: /*#__PURE__*/React.createElement(PermMediaOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }),\n    link: \"/admin_dashboard\"\n  }, {\n    id: \"Hosting\",\n    icon: /*#__PURE__*/React.createElement(PublicIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 30\n      }\n    }),\n    link: \"/admin_dashboard\"\n  }, {\n    id: \"Functions\",\n    icon: /*#__PURE__*/React.createElement(SettingsEthernetIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }),\n    link: \"/admin_dashboard\"\n  }, {\n    id: \"ML Kit\",\n    icon: /*#__PURE__*/React.createElement(SettingsInputComponentIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }),\n    link: \"/admin_dashboard\"\n  }]\n}, {\n  id: \"Quality\",\n  children: [{\n    id: \"Analytics\",\n    icon: /*#__PURE__*/React.createElement(SettingsIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 32\n      }\n    }),\n    link: \"/admin_dashboard\"\n  }, {\n    id: \"Performance\",\n    icon: /*#__PURE__*/React.createElement(TimerIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 34\n      }\n    }),\n    link: \"/admin_dashboard\"\n  }, {\n    id: \"Test Lab\",\n    icon: /*#__PURE__*/React.createElement(PhonelinkSetupIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }),\n    link: \"/admin_dashboard\"\n  }]\n}];\n\nfunction Navigator(props) {\n  const [categories, setCategories] = useState([{\n    id: \"Develop\",\n    children: [{\n      id: \"Users List\",\n      icon: /*#__PURE__*/React.createElement(PeopleIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }),\n      link: \"/admin_dashboard/users\",\n      active: true\n    }, {\n      id: \"Tests\",\n      icon: /*#__PURE__*/React.createElement(DnsRoundedIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }),\n      link: \"/admin_dashboard/tests\"\n    }, {\n      id: \"Storage\",\n      icon: /*#__PURE__*/React.createElement(PermMediaOutlinedIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }),\n      link: \"/admin_dashboard\"\n    }, {\n      id: \"Hosting\",\n      icon: /*#__PURE__*/React.createElement(PublicIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 32\n        }\n      }),\n      link: \"/admin_dashboard\"\n    }, {\n      id: \"Functions\",\n      icon: /*#__PURE__*/React.createElement(SettingsEthernetIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }),\n      link: \"/admin_dashboard\"\n    }, {\n      id: \"ML Kit\",\n      icon: /*#__PURE__*/React.createElement(SettingsInputComponentIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }),\n      link: \"/admin_dashboard\"\n    }]\n  }, {\n    id: \"Quality\",\n    children: [{\n      id: \"Analytics\",\n      icon: /*#__PURE__*/React.createElement(SettingsIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 34\n        }\n      }),\n      link: \"/admin_dashboard\"\n    }, {\n      id: \"Performance\",\n      icon: /*#__PURE__*/React.createElement(TimerIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 36\n        }\n      }),\n      link: \"/admin_dashboard\"\n    }, {\n      id: \"Test Lab\",\n      icon: /*#__PURE__*/React.createElement(PhonelinkSetupIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }),\n      link: \"/admin_dashboard\"\n    }]\n  }]);\n  const {\n    classes,\n    ...other\n  } = props;\n\n  const handleNavigation = (id, childId) => {\n    let newCategories = defaultCategories;\n    setCategories(newCategories.map(item => {\n      if (item.id === id) {\n        return { ...item,\n          children: item.children.map(child => {\n            if (child.id === childId) return { ...child,\n              active: true\n            };else return { ...child\n            };\n          })\n        };\n      } else return { ...item\n      };\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(Drawer, Object.assign({\n    variant: \"permanent\"\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    disablePadding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    className: clsx(classes.firebase, classes.item, classes.itemCategory),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, \"Admin Dashboard\"), categories.map(({\n    id,\n    children\n  }) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.categoryHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    classes: {\n      primary: classes.categoryHeaderPrimary\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, id)), children.map(({\n    id: childId,\n    icon,\n    active,\n    link\n  }) => /*#__PURE__*/React.createElement(NavLink, {\n    to: link,\n    key: childId,\n    className: clsx(classes.link, active && classes.itemActiveItem),\n    onClick: () => handleNavigation(id, childId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    className: clsx(classes.item, active && classes.itemActiveItem),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    className: classes.itemIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }\n  }, icon), /*#__PURE__*/React.createElement(ListItemText, {\n    classes: {\n      primary: classes.itemPrimary\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 19\n    }\n  }, childId)))), /*#__PURE__*/React.createElement(Divider, {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  })))));\n}\n\nNavigator.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(stylesNavigator)(Navigator);","map":{"version":3,"sources":["/home/medamine/Desktop/Plateforme-de-gestion-de-carrieres-et-de-formations/frontend/src/containers/AdminDashboard/Navigator.js"],"names":["React","useState","NavLink","PropTypes","clsx","withStyles","Divider","Drawer","List","ListItem","ListItemIcon","ListItemText","PeopleIcon","DnsRoundedIcon","PermMediaOutlinedIcon","PublicIcon","SettingsEthernetIcon","SettingsInputComponentIcon","TimerIcon","SettingsIcon","PhonelinkSetupIcon","stylesNavigator","defaultCategories","id","children","icon","link","Navigator","props","categories","setCategories","active","classes","other","handleNavigation","childId","newCategories","map","item","child","firebase","itemCategory","categoryHeader","primary","categoryHeaderPrimary","itemActiveItem","itemIcon","itemPrimary","divider","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport DnsRoundedIcon from \"@material-ui/icons/DnsRounded\";\nimport PermMediaOutlinedIcon from \"@material-ui/icons/PhotoSizeSelectActual\";\nimport PublicIcon from \"@material-ui/icons/Public\";\nimport SettingsEthernetIcon from \"@material-ui/icons/SettingsEthernet\";\nimport SettingsInputComponentIcon from \"@material-ui/icons/SettingsInputComponent\";\nimport TimerIcon from \"@material-ui/icons/Timer\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport PhonelinkSetupIcon from \"@material-ui/icons/PhonelinkSetup\";\nimport { stylesNavigator } from \"./styles/Styles\";\n\nconst defaultCategories = [\n  {\n    id: \"Develop\",\n    children: [\n      {\n        id: \"Users List\",\n        icon: <PeopleIcon />,\n        link: \"/admin_dashboard/users\",\n      },\n      {\n        id: \"Tests\",\n        icon: <DnsRoundedIcon />,\n        link: \"/admin_dashboard/tests\",\n      },\n      {\n        id: \"Storage\",\n        icon: <PermMediaOutlinedIcon />,\n        link: \"/admin_dashboard\",\n      },\n      { id: \"Hosting\", icon: <PublicIcon />, link: \"/admin_dashboard\" },\n      {\n        id: \"Functions\",\n        icon: <SettingsEthernetIcon />,\n        link: \"/admin_dashboard\",\n      },\n      {\n        id: \"ML Kit\",\n        icon: <SettingsInputComponentIcon />,\n        link: \"/admin_dashboard\",\n      },\n    ],\n  },\n  {\n    id: \"Quality\",\n    children: [\n      { id: \"Analytics\", icon: <SettingsIcon />, link: \"/admin_dashboard\" },\n      { id: \"Performance\", icon: <TimerIcon />, link: \"/admin_dashboard\" },\n      {\n        id: \"Test Lab\",\n        icon: <PhonelinkSetupIcon />,\n        link: \"/admin_dashboard\",\n      },\n    ],\n  },\n];\nfunction Navigator(props) {\n  const [categories, setCategories] = useState([\n    {\n      id: \"Develop\",\n      children: [\n        {\n          id: \"Users List\",\n          icon: <PeopleIcon />,\n          link: \"/admin_dashboard/users\",\n          active:true\n        },\n        {\n          id: \"Tests\",\n          icon: <DnsRoundedIcon />,\n          link: \"/admin_dashboard/tests\",\n        },\n        {\n          id: \"Storage\",\n          icon: <PermMediaOutlinedIcon />,\n          link: \"/admin_dashboard\",\n        },\n        { id: \"Hosting\", icon: <PublicIcon />, link: \"/admin_dashboard\" },\n        {\n          id: \"Functions\",\n          icon: <SettingsEthernetIcon />,\n          link: \"/admin_dashboard\",\n        },\n        {\n          id: \"ML Kit\",\n          icon: <SettingsInputComponentIcon />,\n          link: \"/admin_dashboard\",\n        },\n      ],\n    },\n    {\n      id: \"Quality\",\n      children: [\n        { id: \"Analytics\", icon: <SettingsIcon />, link: \"/admin_dashboard\" },\n        { id: \"Performance\", icon: <TimerIcon />, link: \"/admin_dashboard\" },\n        {\n          id: \"Test Lab\",\n          icon: <PhonelinkSetupIcon />,\n          link: \"/admin_dashboard\",\n        },\n      ],\n    },\n  ]);\n  const { classes, ...other } = props;\n  const handleNavigation = (id, childId) => {\n    let newCategories = defaultCategories;\n    setCategories(\n      newCategories.map((item) => {\n        if (item.id === id) {\n          return {\n            ...item,\n            children: item.children.map((child) => {\n              if (child.id === childId) return { ...child, active: true };\n              else return { ...child };\n            }),\n          };\n        } else return { ...item };\n      })\n    );\n  };\n  return (\n    <Drawer variant=\"permanent\" {...other}>\n      <List disablePadding>\n        <ListItem\n          className={clsx(classes.firebase, classes.item, classes.itemCategory)}\n        >\n          Admin Dashboard\n        </ListItem>\n        {/* <ListItem className={clsx(classes.item, classes.itemCategory)}>\n          <ListItemIcon className={classes.itemIcon}>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText\n            classes={{\n              primary: classes.itemPrimary,\n            }}\n          >\n            Project Overview\n          </ListItemText>\n        </ListItem> */}\n        {categories.map(({ id, children }) => (\n          <React.Fragment key={id}>\n            <ListItem className={classes.categoryHeader}>\n              <ListItemText\n                classes={{\n                  primary: classes.categoryHeaderPrimary,\n                }}\n              >\n                {id}\n              </ListItemText>\n            </ListItem>\n            {children.map(({ id: childId, icon, active, link }) => (\n              <NavLink\n                to={link}\n                key={childId}\n                className={clsx(classes.link, active && classes.itemActiveItem)}\n                onClick={() => handleNavigation(id, childId)}\n              >\n                <ListItem className={clsx(classes.item, active && classes.itemActiveItem)}>\n                  <ListItemIcon className={classes.itemIcon}>\n                    {icon}\n                  </ListItemIcon>\n                  <ListItemText\n                    classes={{\n                      primary: classes.itemPrimary,\n                    }}\n                  >\n                    {childId}\n                  </ListItemText>\n                </ListItem>\n              </NavLink>\n            ))}\n\n            <Divider className={classes.divider} />\n          </React.Fragment>\n        ))}\n      </List>\n    </Drawer>\n  );\n}\n\nNavigator.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(stylesNavigator)(Navigator);\n"]},"metadata":{},"sourceType":"module"}