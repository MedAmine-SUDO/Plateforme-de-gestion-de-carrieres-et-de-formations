{"ast":null,"code":"import { REHYDRATE } from 'redux-persist/constants';\nconst initialState = {\n  user: null,\n  current_user: null,\n  isAuthenticated: false,\n  signUpErr: \"\",\n  signInErr: \"\"\n};\n\nconst auth = (state = initialState, action) => {\n  switch (action.type) {\n    case REHYDRATE:\n      if (action.payload && action.payload.user) {\n        return { ...state,\n          ...action.payload.user\n        };\n      }\n\n      return state;\n\n    case \"SIGNUP_USER_SUCCESS\":\n      return { ...state,\n        user: action.payload,\n        isAuthenticated: true\n      };\n\n    case \"SIGNUP_USER_FAILURE\":\n      return { ...state,\n        signUpErr: action.payload.error\n      };\n\n    case \"SET_CURRENT_USER_SUCCESS\":\n      return { ...state,\n        current_user: action.payload\n      };\n    // Sign in cases\n\n    case \"SIGNIN_USER_SUCCESS\":\n      return { ...state,\n        user: action.payload,\n        isAuthenticated: true\n      };\n\n    case \"SIGNIN_USER_FAILURE\":\n      return { ...state,\n        signInErr: action.payload.error\n      };\n\n    case \"LOGOUT_USER_SUCCESS\":\n      return {\n        user: null,\n        current_user: null,\n        isAuthenticated: false,\n        signUpErr: \"\",\n        signInErr: \"\"\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default auth;","map":{"version":3,"sources":["/home/akrem/Desktop/frontend/src/reducers/AuthReducer.js"],"names":["REHYDRATE","initialState","user","current_user","isAuthenticated","signUpErr","signInErr","auth","state","action","type","payload","error"],"mappings":"AAAA,SAASA,SAAT,QAA0B,yBAA1B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,IADa;AAEnBC,EAAAA,YAAY,EAAE,IAFK;AAGnBC,EAAAA,eAAe,EAAE,KAHE;AAInBC,EAAAA,SAAS,EAAE,EAJQ;AAKnBC,EAAAA,SAAS,EAAE;AALQ,CAArB;;AAQA,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,SAAL;AAAgB,UAAIS,MAAM,CAACE,OAAP,IAAkBF,MAAM,CAACE,OAAP,CAAeT,IAArC,EAA2C;AACzD,eAAO,EAAE,GAAGM,KAAL;AAAY,aAAGC,MAAM,CAACE,OAAP,CAAeT;AAA9B,SAAP;AACD;;AACD,aAAOM,KAAP;;AACA,SAAK,qBAAL;AACE,aAAO,EAAE,GAAGA,KAAL;AAAYN,QAAAA,IAAI,EAAEO,MAAM,CAACE,OAAzB;AAAkCP,QAAAA,eAAe,EAAE;AAAnD,OAAP;;AACF,SAAK,qBAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AAAYH,QAAAA,SAAS,EAAEI,MAAM,CAACE,OAAP,CAAeC;AAAtC,OAAP;;AACF,SAAK,0BAAL;AACE,aAAO,EAAE,GAAGJ,KAAL;AAAYL,QAAAA,YAAY,EAAEM,MAAM,CAACE;AAAjC,OAAP;AAEF;;AACA,SAAK,qBAAL;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYN,QAAAA,IAAI,EAAEO,MAAM,CAACE,OAAzB;AAAkCP,QAAAA,eAAe,EAAE;AAAnD,OAAP;;AACF,SAAK,qBAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AAAYF,QAAAA,SAAS,EAAEG,MAAM,CAACE,OAAP,CAAeC;AAAtC,OAAP;;AACF,SAAK,qBAAL;AACE,aAAO;AACLV,QAAAA,IAAI,EAAE,IADD;AAELC,QAAAA,YAAY,EAAE,IAFT;AAGLC,QAAAA,eAAe,EAAE,KAHZ;AAILC,QAAAA,SAAS,EAAE,EAJN;AAKLC,QAAAA,SAAS,EAAE;AALN,OAAP;;AAOF;AACE,aAAOE,KAAP;AA1BJ;AA4BD,CA7BD;;AA+BA,eAAeD,IAAf","sourcesContent":["import { REHYDRATE } from 'redux-persist/constants';\n\nconst initialState = {\n  user: null,\n  current_user: null,\n  isAuthenticated: false,\n  signUpErr: \"\",\n  signInErr: \"\",\n};\n\nconst auth = (state = initialState, action) => {\n  switch (action.type) {\n    case REHYDRATE: if (action.payload && action.payload.user) {\n      return { ...state, ...action.payload.user };\n    }\n    return state;\n    case \"SIGNUP_USER_SUCCESS\":\n      return { ...state, user: action.payload, isAuthenticated: true };\n    case \"SIGNUP_USER_FAILURE\":\n      return { ...state, signUpErr: action.payload.error };\n    case \"SET_CURRENT_USER_SUCCESS\":\n      return { ...state, current_user: action.payload };\n\n    // Sign in cases\n    case \"SIGNIN_USER_SUCCESS\":\n      return { ...state, user: action.payload, isAuthenticated: true };\n    case \"SIGNIN_USER_FAILURE\":\n      return { ...state, signInErr: action.payload.error };\n    case \"LOGOUT_USER_SUCCESS\":\n      return {\n        user: null,\n        current_user: null,\n        isAuthenticated: false,\n        signUpErr: \"\",\n        signInErr: \"\",\n      };\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n"]},"metadata":{},"sourceType":"module"}