{"ast":null,"code":"var _jsxFileName = \"/home/akrem/Desktop/Plateforme-de-gestion-de-carrieres-et-de-formations/frontend/src/containers/Pages/AccountPage/AccountPage.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { profileGetData, profileUpdateData, profilePostData } from \"../../../actions/ProfileActions\";\nimport classNames from \"classnames\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"../../../assets/jss/material-kit-react/views/accountPage.js\";\nimport GridContainer from \"../../../components/Grid/GridContainer.js\";\nimport GridItem from \"../../../components/Grid/GridItem.js\";\nimport Footer from \"../../../components/Footer/Footer.js\";\nimport NavPills from \"../../../components/NavPills/NavPills.js\";\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Schedule from \"@material-ui/icons/Schedule\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"../../../components/CustomButtons/Button.js\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport { CountryDropdown, RegionDropdown } from \"react-country-region-selector\";\nimport Input from \"@material-ui/core/Input\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nconst useStyles = makeStyles(styles);\n\nfunction AccountPage() {\n  const authDetail = useSelector(state => state.auth);\n  const profileData = useSelector(state => state.profile);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [id, setId] = useState(\"\");\n  const [userID, setUserID] = useState(\"\");\n  const [firstName, setfirstName] = useState(\"\");\n  const [lastName, setlastName] = useState(\"\");\n  const [birthDate, setBirthDate] = useState(new Date(\"2000-01-01\"));\n  const [telephone, settelephone] = useState(\"\");\n  const [address, setaddress] = useState(\"\");\n  const [postCode, setpostCode] = useState(\"\");\n  const [country, setcountry] = useState(\"\");\n  const [region, setregion] = useState(\"\");\n  const [username, setusername] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (authDetail.user) {\n      setUserID(authDetail.user.id);\n      setusername(authDetail.user.username);\n      setemail(authDetail.user.email);\n\n      if (isFirstRun.current) {\n        isFirstRun.current = false;\n        return;\n      }\n\n      dispatch(profileGetData(userID));\n    }\n  }, [authDetail, userID, dispatch]);\n  useEffect(() => {\n    if (profileData.data) {\n      setId(profileData.data.id);\n      setfirstName(profileData.data.firstName);\n      setlastName(profileData.data.lastName);\n      setBirthDate(new Date(profileData.data.birthDate));\n      settelephone(profileData.data.telephone);\n      setaddress(profileData.data.address);\n      setpostCode(profileData.data.postCode);\n      setcountry(profileData.data.country);\n      setregion(profileData.data.region);\n    }\n  }, [profileData.data]);\n\n  const handleChange = (e, name) => {\n    const user = {};\n    if (name === \"country\" || name === \"region\" || name === \"birthDate\") user[name] = e;else user[name] = e.target.value; // validations\n\n    switch (name) {\n      case \"firstName\":\n        setfirstName(user.firstName);\n        break;\n\n      case \"lastName\":\n        setlastName(user.lastName);\n        break;\n\n      case \"birthDate\":\n        setBirthDate(new Date(user.birthDate));\n        break;\n\n      case \"telephone\":\n        settelephone(user.telephone);\n        break;\n\n      case \"address\":\n        setaddress(user.address);\n        break;\n\n      case \"postCode\":\n        setpostCode(user.postCode);\n        break;\n\n      case \"country\":\n        setcountry(user.country);\n        break;\n\n      case \"region\":\n        setregion(user.region);\n        break;\n\n      case \"username\":\n        setusername(user.username);\n        break;\n\n      case \"email\":\n        setemail(user.email);\n        break;\n\n      case \"password\":\n        setpassword(user.password);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSave = async e => {\n    e.preventDefault();\n\n    if (firstName && lastName && birthDate && telephone && address && postCode && country && region) {\n      if (profileData.data) dispatch(profileUpdateData({\n        id,\n        firstName,\n        lastName,\n        birthDate,\n        telephone,\n        address,\n        postCode,\n        country,\n        region\n      }));else {\n        dispatch(profilePostData({\n          userID,\n          firstName,\n          lastName,\n          birthDate,\n          telephone,\n          address,\n          postCode,\n          country,\n          region\n        }));\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(classes.main, classes.mainRaised),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, profileData.loading ? /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(NavPills, {\n    color: \"rose\",\n    horizontal: {\n      tabsGrid: {\n        xs: 12,\n        sm: 4,\n        md: 4\n      },\n      contentGrid: {\n        xs: 12,\n        sm: 8,\n        md: 8\n      }\n    },\n    tabs: [{\n      tabButton: \"Profile Settings\",\n      tabIcon: Dashboard,\n      tabContent: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: handleSave,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 31\n        }\n      }, \"Profile Settings\"), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 31\n        }\n      }, \"First Name :\"), /*#__PURE__*/React.createElement(Input, {\n        id: \"firstName\",\n        name: \"firstName\",\n        inputProps: {\n          placeholder: \"First Name\"\n        },\n        value: firstName,\n        fullWidth: true,\n        onChange: e => handleChange(e, \"firstName\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 31\n        }\n      }, \"Last Name :\"), /*#__PURE__*/React.createElement(Input, {\n        id: \"lastName\",\n        name: \"lastName\",\n        inputProps: {\n          placeholder: \"Last Name\"\n        },\n        value: lastName,\n        fullWidth: true,\n        onChange: e => handleChange(e, \"lastName\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 31\n        }\n      }, \"Date of Birth :\"), /*#__PURE__*/React.createElement(FormControl, {\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(DateTimePicker, {\n        format: \"yyyy-MM-dd\",\n        onChange: e => handleChange(e, \"birthDate\"),\n        value: birthDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 31\n        }\n      }, \"Phone Number :\"), /*#__PURE__*/React.createElement(Input, {\n        id: \"telephone\",\n        name: \"telephone\",\n        inputProps: {\n          placeholder: \"Phone Number\"\n        },\n        value: telephone,\n        fullWidth: true,\n        onChange: e => handleChange(e, \"telephone\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 31\n        }\n      }, \"Address :\"), /*#__PURE__*/React.createElement(Input, {\n        id: \"address\",\n        name: \"address\",\n        inputProps: {\n          placeholder: \"Address\"\n        },\n        value: address,\n        fullWidth: true,\n        onChange: e => handleChange(e, \"address\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 31\n        }\n      }, \"Post Code :\"), /*#__PURE__*/React.createElement(Input, {\n        id: \"postCode\",\n        name: \"postCode\",\n        inputProps: {\n          placeholder: \"Post Code\"\n        },\n        value: postCode,\n        fullWidth: true,\n        onChange: e => handleChange(e, \"postCode\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 31\n        }\n      }, \"Country :\"), /*#__PURE__*/React.createElement(CountryDropdown, {\n        id: \"country\",\n        name: \"country\",\n        value: country,\n        onChange: e => handleChange(e, \"country\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 31\n        }\n      }, \"Region :\"), /*#__PURE__*/React.createElement(RegionDropdown, {\n        id: \"region\",\n        name: \"region\",\n        country: country,\n        value: region,\n        onChange: e => handleChange(e, \"region\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        color: \"rose\",\n        type: \"submit\",\n        round: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 31\n        }\n      }, \"Save\"), /*#__PURE__*/React.createElement(Button, {\n        round: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 31\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 31\n        }\n      })))\n    }, {\n      tabButton: \"Account Settings\",\n      tabIcon: Schedule,\n      tabContent: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: handleSave,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 31\n        }\n      }, \"Account Settings\"), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 31\n        }\n      }, \"Username :\"), /*#__PURE__*/React.createElement(Input, {\n        id: \"username\",\n        name: \"username\",\n        inputProps: {\n          placeholder: \"Username\"\n        },\n        fullWidth: true,\n        value: username,\n        onChange: e => handleChange(e, \"username\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 31\n        }\n      }, \"Email :\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        inputProps: {\n          placeholder: \"Email\"\n        },\n        value: email,\n        fullWidth: true,\n        onChange: e => handleChange(e, \"email\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 31\n        }\n      }, \"Password :\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        inputProps: {\n          placeholder: \"Password\"\n        },\n        value: password,\n        fullWidth: true,\n        onChange: e => handleChange(e, \"password\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        color: \"rose\",\n        type: \"submit\",\n        round: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 31\n        }\n      }, \"Save\"), /*#__PURE__*/React.createElement(Button, {\n        round: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 31\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 31\n        }\n      })))\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  })))))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default AccountPage;","map":{"version":3,"sources":["/home/akrem/Desktop/Plateforme-de-gestion-de-carrieres-et-de-formations/frontend/src/containers/Pages/AccountPage/AccountPage.js"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","profileGetData","profileUpdateData","profilePostData","classNames","makeStyles","styles","GridContainer","GridItem","Footer","NavPills","Dashboard","Schedule","FormControl","Button","DateTimePicker","CountryDropdown","RegionDropdown","Input","CircularProgress","useStyles","AccountPage","authDetail","state","auth","profileData","profile","dispatch","classes","id","setId","userID","setUserID","firstName","setfirstName","lastName","setlastName","birthDate","setBirthDate","Date","telephone","settelephone","address","setaddress","postCode","setpostCode","country","setcountry","region","setregion","username","setusername","email","setemail","password","setpassword","isFirstRun","user","current","data","handleChange","e","name","target","value","handleSave","preventDefault","main","mainRaised","container","loading","tabsGrid","xs","sm","md","contentGrid","tabButton","tabIcon","tabContent","placeholder"],"mappings":"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","sourcesContent":["import React, { useState, useEffect,useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  profileGetData,\n  profileUpdateData,\n  profilePostData\n} from \"../../../actions/ProfileActions\";\nimport classNames from \"classnames\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"../../../assets/jss/material-kit-react/views/accountPage.js\";\nimport GridContainer from \"../../../components/Grid/GridContainer.js\";\nimport GridItem from \"../../../components/Grid/GridItem.js\";\nimport Footer from \"../../../components/Footer/Footer.js\";\nimport NavPills from \"../../../components/NavPills/NavPills.js\";\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Schedule from \"@material-ui/icons/Schedule\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"../../../components/CustomButtons/Button.js\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport { CountryDropdown, RegionDropdown } from \"react-country-region-selector\";\nimport Input from \"@material-ui/core/Input\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles(styles);\nfunction AccountPage() {\n  const authDetail = useSelector((state) => state.auth);\n  const profileData = useSelector((state) => state.profile);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const [id, setId] = useState(\"\");\n  const [userID, setUserID] = useState(\"\");\n\n  const [firstName, setfirstName] = useState(\"\");\n  const [lastName, setlastName] = useState(\"\");\n  const [birthDate, setBirthDate] = useState(new Date(\"2000-01-01\"));\n  const [telephone, settelephone] = useState(\"\");\n  const [address, setaddress] = useState(\"\");\n  const [postCode, setpostCode] = useState(\"\");\n  const [country, setcountry] = useState(\"\");\n  const [region, setregion] = useState(\"\");\n\n  const [username, setusername] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const isFirstRun = useRef(true);\n\n  useEffect(() => {\n    if (authDetail.user) {\n      setUserID(authDetail.user.id)\n      setusername(authDetail.user.username);\n      setemail(authDetail.user.email);\n      if (isFirstRun.current) {\n        isFirstRun.current = false;\n        return;\n      }\n      dispatch(profileGetData(userID));\n    }\n  }, [authDetail,userID, dispatch]);\n\n  useEffect(() => {\n    if (profileData.data) {\n      setId(profileData.data.id)\n      setfirstName(profileData.data.firstName);\n      setlastName(profileData.data.lastName);\n      setBirthDate(new Date(profileData.data.birthDate));\n      settelephone(profileData.data.telephone);\n      setaddress(profileData.data.address);\n      setpostCode(profileData.data.postCode);\n      setcountry(profileData.data.country);\n      setregion(profileData.data.region);\n    }\n  }, [profileData.data]);\n\n  const handleChange = (e, name) => {\n    const user = {};\n    if (name === \"country\" || name === \"region\" || name === \"birthDate\")\n      user[name] = e;\n    else user[name] = e.target.value;\n    // validations\n    switch (name) {\n      case \"firstName\":\n        setfirstName(user.firstName);\n        break;\n      case \"lastName\":\n        setlastName(user.lastName);\n        break;\n      case \"birthDate\":\n        setBirthDate(new Date(user.birthDate));\n        break;\n      case \"telephone\":\n        settelephone(user.telephone);\n        break;\n      case \"address\":\n        setaddress(user.address);\n        break;\n      case \"postCode\":\n        setpostCode(user.postCode);\n        break;\n      case \"country\":\n        setcountry(user.country);\n        break;\n      case \"region\":\n        setregion(user.region);\n        break;\n      case \"username\":\n        setusername(user.username);\n        break;\n      case \"email\":\n        setemail(user.email);\n        break;\n      case \"password\":\n        setpassword(user.password);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleSave = async (e) => {\n    e.preventDefault();\n    if (\n      firstName &&\n      lastName &&\n      birthDate &&\n      telephone &&\n      address &&\n      postCode &&\n      country &&\n      region\n    )\n      {\n        if(profileData.data)\n        dispatch(\n          profileUpdateData({\n            id,\n            firstName,\n            lastName,\n            birthDate,\n            telephone,\n            address,\n            postCode,\n            country,\n            region,\n          })\n        );\n        else\n        {\n          dispatch(\n          profilePostData({userID,\n            firstName,\n            lastName,\n            birthDate,\n            telephone,\n            address,\n            postCode,\n            country,\n            region,\n          })\n        );}\n      }\n  };\n\n  return (\n    <div>\n      <div className={classNames(classes.main, classes.mainRaised)}>\n        <div>\n          <div className={classes.container}>\n            <GridContainer justify=\"center\">\n              <GridItem xs={12} sm={12}>\n                {profileData.loading ? (\n                  <CircularProgress />\n                ) : (\n                  <NavPills\n                    color=\"rose\"\n                    horizontal={{\n                      tabsGrid: { xs: 12, sm: 4, md: 4 },\n                      contentGrid: { xs: 12, sm: 8, md: 8 },\n                    }}\n                    tabs={[\n                      {\n                        tabButton: \"Profile Settings\",\n                        tabIcon: Dashboard,\n                        tabContent: (\n                          <>\n                            <form onSubmit={handleSave}>\n                              <h1>Profile Settings</h1>\n                              <h3>First Name :</h3>\n                              <Input\n                                id=\"firstName\"\n                                name=\"firstName\"\n                                inputProps={{\n                                  placeholder: \"First Name\",\n                                }}\n                                value={firstName}\n                                fullWidth\n                                onChange={(e) => handleChange(e, \"firstName\")}\n                              />\n\n                              <h3>Last Name :</h3>\n                              <Input\n                                id=\"lastName\"\n                                name=\"lastName\"\n                                inputProps={{\n                                  placeholder: \"Last Name\",\n                                }}\n                                value={lastName}\n                                fullWidth\n                                onChange={(e) => handleChange(e, \"lastName\")}\n                              />\n\n                              <h3>Date of Birth :</h3>\n\n                              <FormControl fullWidth>\n                                <DateTimePicker\n                                  format=\"yyyy-MM-dd\"\n                                  onChange={(e) => handleChange(e, \"birthDate\")}\n                                  value={birthDate}\n                                />\n                              </FormControl>\n\n                              <h3>Phone Number :</h3>\n                              <Input\n                                id=\"telephone\"\n                                name=\"telephone\"\n                                inputProps={{\n                                  placeholder: \"Phone Number\",\n                                }}\n                                value={telephone}\n                                fullWidth\n                                onChange={(e) => handleChange(e, \"telephone\")}\n                              />\n\n                              <h3>Address :</h3>\n                              <Input\n                                id=\"address\"\n                                name=\"address\"\n                                inputProps={{\n                                  placeholder: \"Address\",\n                                }}\n                                value={address}\n                                fullWidth\n                                onChange={(e) => handleChange(e, \"address\")}\n                              />\n\n                              <h3>Post Code :</h3>\n                              <Input\n                                id=\"postCode\"\n                                name=\"postCode\"\n                                inputProps={{\n                                  placeholder: \"Post Code\",\n                                }}\n                                value={postCode}\n                                fullWidth\n                                onChange={(e) => handleChange(e, \"postCode\")}\n                              />\n\n                              <h3>Country :</h3>\n                              <CountryDropdown\n                                id=\"country\"\n                                name=\"country\"\n                                value={country}\n                                onChange={(e) => handleChange(e, \"country\")}\n                              />\n\n                              <h3>Region :</h3>\n                              <RegionDropdown\n                                id=\"region\"\n                                name=\"region\"\n                                country={country}\n                                value={region}\n                                onChange={(e) => handleChange(e, \"region\")}\n                              />\n                              <br />\n                              <br />\n                              <Button color=\"rose\" type=\"submit\" round>\n                                Save\n                              </Button>\n                              <Button round>Cancel</Button>\n                              <br />\n                              <br />\n                            </form>\n                          </>\n                        ),\n                      },\n                      {\n                        tabButton: \"Account Settings\",\n                        tabIcon: Schedule,\n                        tabContent: (\n                          <>\n                            <form onSubmit={handleSave}>\n                              <h1>Account Settings</h1>\n                              <h3>Username :</h3>\n                              <Input\n                                id=\"username\"\n                                name=\"username\"\n                                inputProps={{\n                                  placeholder: \"Username\",\n                                }}\n                                fullWidth\n                                value={username}\n                                onChange={(e) => handleChange(e, \"username\")}\n                              />\n\n                              <h3>Email :</h3>\n                              <Input\n                                type=\"email\"\n                                id=\"email\"\n                                name=\"email\"\n                                inputProps={{\n                                  placeholder: \"Email\",\n                                }}\n                                value={email}\n                                fullWidth\n                                onChange={(e) => handleChange(e, \"email\")}\n                              />\n\n                              <h3>Password :</h3>\n                              <Input\n                                type=\"password\"\n                                id=\"password\"\n                                name=\"password\"\n                                inputProps={{\n                                  placeholder: \"Password\",\n                                }}\n                                value={password}\n                                fullWidth\n                                onChange={(e) => handleChange(e, \"password\")}\n                              />\n                              <br />\n                              <br />\n                              <Button color=\"rose\" type=\"submit\" round>\n                                Save\n                              </Button>\n                              <Button round>Cancel</Button>\n                              <br />\n                              <br />\n                            </form>\n                          </>\n                        ),\n                      },\n                    ]}\n                  />\n                )}\n              </GridItem>\n            </GridContainer>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default AccountPage;\n"]},"metadata":{},"sourceType":"module"}