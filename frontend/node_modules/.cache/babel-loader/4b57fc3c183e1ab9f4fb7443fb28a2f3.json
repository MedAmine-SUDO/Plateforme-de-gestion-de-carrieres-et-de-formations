{"ast":null,"code":"var _jsxFileName = \"/home/akrem/Desktop/Plateforme-de-gestion-de-carrieres-et-de-formations/frontend/src/containers/AdminDashboard/Content/UserList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAllUsers } from \"../../../actions/AuthActions\";\nimport MaterialTable from \"material-table\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { stylesContent } from \"../styles/Styles\";\nimport { tableIcons } from \"../../tableFeatures/tableIcons\";\nimport NavPills from \"../../../components/NavPills/NavPills.js\";\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Schedule from \"@material-ui/icons/Schedule\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport Check from \"@material-ui/icons/Check\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SnackbarContent from \"../../../components/Snackbar/SnackbarContent.js\";\nimport { signUp } from \"../../../actions/AuthActions\";\n\nfunction UserList(props) {\n  const dispatch = useDispatch();\n  const authDetail = useSelector(state => state.auth);\n  const [alert, setAlert] = useState(null);\n  const [empty, setEmpty] = useState(null);\n  const [roleErr, setRoleErr] = useState(null);\n  const [addSuccess, setAddSuccess] = useState(null);\n  const [state, setState] = useState({\n    columns: [{\n      title: \"ID\",\n      field: \"id\"\n    }, {\n      title: \"Username\",\n      field: \"username\"\n    }, {\n      title: \"Role\",\n      field: \"roles[0].name\"\n    }, {\n      title: \"Email\",\n      field: \"email\"\n    }, {\n      title: \"Password\",\n      field: \"password\"\n    }],\n    data: []\n  });\n  useEffect(() => {\n    dispatch(getAllUsers()).then(res => {\n      console.log(res.data);\n      if (res) setState({\n        columns: state.columns,\n        data: res.data\n      });\n      setAlert(null);\n    }).catch(err => {\n      setAlert( /*#__PURE__*/React.createElement(SnackbarContent, {\n        message: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }\n        }, \"WARNING ALERT:\"), \" Could not reach data... Refresh Page...\"),\n        close: true,\n        color: \"warning\",\n        icon: Warning,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }));\n    });\n  }, [dispatch, addSuccess]);\n\n  const addUser = newData => {\n    setEmpty(null);\n    setAddSuccess(null);\n    setAlert(null);\n    setRoleErr(null);\n\n    if (!newData.username || !newData.email || !newData.password || !newData.roles) {\n      console.log(\"empty\");\n      setEmpty( /*#__PURE__*/React.createElement(SnackbarContent, {\n        message: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }\n        }, \"WARNING ALERT:\"), \" Empty field(s)...\"),\n        close: true,\n        color: \"warning\",\n        icon: Warning,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }));\n    } else if (![\"admin\", \"candidat\", \"mentor\", \"instructor\"].includes(newData.roles[0].name)) {\n      console.log(\"Unknown role\");\n      setRoleErr( /*#__PURE__*/React.createElement(SnackbarContent, {\n        message: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }\n        }, \"ERROR ALERT:\"), \" Unknown role ([\\\"admin\\\",\\\"candidat\\\",\\\"mentor\\\",\\\"instructor\\\"])...\"),\n        close: true,\n        color: \"warning\",\n        icon: Warning,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }));\n    } else {\n      console.log(\"gonna add\");\n      let username = newData.username;\n      let email = newData.email;\n      let password = newData.password;\n      let roles = [newData.roles[0].name];\n      console.log(username, email, password, roles);\n      dispatch(signUp({\n        username,\n        email,\n        password,\n        roles\n      })).then(res => {\n        setAddSuccess( /*#__PURE__*/React.createElement(SnackbarContent, {\n          message: /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"b\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }\n          }, \"SUCCESS ALERT:\"), \" User Added...\"),\n          close: true,\n          color: \"success\",\n          icon: Check,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }\n        }));\n      }).catch(err => {\n        setAlert( /*#__PURE__*/React.createElement(SnackbarContent, {\n          message: /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"b\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }\n          }, \"WARNING ALERT:\"), \" Server ERROR...\"),\n          close: true,\n          color: \"warning\",\n          icon: Warning,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }\n        }));\n      });\n    }\n  };\n\n  if (authDetail.loading) return /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 34\n    }\n  });else return /*#__PURE__*/React.createElement(React.Fragment, null, alert, empty, roleErr, addSuccess, /*#__PURE__*/React.createElement(NavPills, {\n    color: \"adminDashboard\",\n    tabs: [{\n      tabButton: \"Users List\",\n      tabIcon: Dashboard,\n      tabContent: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MaterialTable, {\n        title: \"Users List\",\n        columns: state.columns,\n        data: state.data,\n        icons: tableIcons,\n        editable: {\n          onRowAdd: newData => new Promise(resolve => {\n            resolve();\n            addUser(newData);\n          }),\n          onRowDelete: oldData => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              setState(prevState => {\n                const data = [...prevState.data];\n                data.splice(data.indexOf(oldData), 1);\n                return { ...prevState,\n                  data\n                };\n              });\n            }, 600);\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 19\n        }\n      }))\n    }, {\n      tabButton: \"Account Settings\",\n      tabIcon: Schedule,\n      tabContent: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 19\n        }\n      }, \"blabla\"))\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }));\n}\n\nUserList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(stylesContent)(UserList);","map":{"version":3,"sources":["/home/akrem/Desktop/Plateforme-de-gestion-de-carrieres-et-de-formations/frontend/src/containers/AdminDashboard/Content/UserList.js"],"names":["React","useState","useEffect","useSelector","useDispatch","getAllUsers","MaterialTable","PropTypes","withStyles","stylesContent","tableIcons","NavPills","Dashboard","Schedule","Warning","Check","CircularProgress","SnackbarContent","signUp","UserList","props","dispatch","authDetail","state","auth","alert","setAlert","empty","setEmpty","roleErr","setRoleErr","addSuccess","setAddSuccess","setState","columns","title","field","data","then","res","console","log","catch","err","addUser","newData","username","email","password","roles","includes","name","loading","tabButton","tabIcon","tabContent","onRowAdd","Promise","resolve","onRowDelete","oldData","setTimeout","prevState","splice","indexOf","propTypes","classes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,eAAP,MAA4B,iDAA5B;AACA,SAASC,MAAT,QAAuB,8BAAvB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAMC,QAAQ,GAAGjB,WAAW,EAA5B;AACA,QAAMkB,UAAU,GAAGnB,WAAW,CAAEoB,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA9B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAAC0B,KAAD,EAAQC,QAAR,IAAoB3B,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAAC4B,OAAD,EAAUC,UAAV,IAAwB7B,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAAC8B,UAAD,EAAaC,aAAb,IAA8B/B,QAAQ,CAAC,IAAD,CAA5C;AAEA,QAAM,CAACsB,KAAD,EAAQU,QAAR,IAAoBhC,QAAQ,CAAC;AACjCiC,IAAAA,OAAO,EAAE,CACP;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KADO,EAEP;AAAED,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KAFO,EAGP;AAAED,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KAHO,EAIP;AAAED,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KAJO,EAKP;AAAED,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KALO,CADwB;AAQjCC,IAAAA,IAAI,EAAE;AAR2B,GAAD,CAAlC;AAUAnC,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,QAAQ,CAAChB,WAAW,EAAZ,CAAR,CACGiC,IADH,CACSC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACF,IAAhB;AACA,UAAIE,GAAJ,EACEN,QAAQ,CAAC;AACPC,QAAAA,OAAO,EAAEX,KAAK,CAACW,OADR;AAEPG,QAAAA,IAAI,EAAEE,GAAG,CAACF;AAFH,OAAD,CAAR;AAIFX,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KATH,EAUGgB,KAVH,CAUUC,GAAD,IAAS;AACdjB,MAAAA,QAAQ,eACN,oBAAC,eAAD;AACE,QAAA,OAAO,eACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,6CAFJ;AAME,QAAA,KAAK,MANP;AAOE,QAAA,KAAK,EAAC,SAPR;AAQE,QAAA,IAAI,EAAEZ,OARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADM,CAAR;AAYD,KAvBH;AAwBD,GAzBQ,EAyBN,CAACO,QAAD,EAAWU,UAAX,CAzBM,CAAT;;AA0BA,QAAMa,OAAO,GAAIC,OAAD,IAAa;AAC3BjB,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAI,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAN,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAI,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QACE,CAACe,OAAO,CAACC,QAAT,IACA,CAACD,OAAO,CAACE,KADT,IAEA,CAACF,OAAO,CAACG,QAFT,IAGA,CAACH,OAAO,CAACI,KAJX,EAKE;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAb,MAAAA,QAAQ,eACN,oBAAC,eAAD;AACE,QAAA,OAAO,eACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,uBAFJ;AAME,QAAA,KAAK,MANP;AAOE,QAAA,KAAK,EAAC,SAPR;AAQE,QAAA,IAAI,EAAEd,OARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADM,CAAR;AAYD,KAnBD,MAmBO,IACL,CAAC,CAAC,OAAD,EAAU,UAAV,EAAsB,QAAtB,EAAgC,YAAhC,EAA8CoC,QAA9C,CACCL,OAAO,CAACI,KAAR,CAAc,CAAd,EAAiBE,IADlB,CADI,EAIL;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAEAX,MAAAA,UAAU,eACR,oBAAC,eAAD;AACE,QAAA,OAAO,eACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,0EAFJ;AAOE,QAAA,KAAK,MAPP;AAQE,QAAA,KAAK,EAAC,SARR;AASE,QAAA,IAAI,EAAEhB,OATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADQ,CAAV;AAaD,KApBM,MAoBA;AACL0B,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAEA,UAAIK,QAAQ,GAAGD,OAAO,CAACC,QAAvB;AACA,UAAIC,KAAK,GAAGF,OAAO,CAACE,KAApB;AACA,UAAIC,QAAQ,GAAGH,OAAO,CAACG,QAAvB;AACA,UAAIC,KAAK,GAAG,CAACJ,OAAO,CAACI,KAAR,CAAc,CAAd,EAAiBE,IAAlB,CAAZ;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ,EAAsBC,KAAtB,EAA6BC,QAA7B,EAAuCC,KAAvC;AACA5B,MAAAA,QAAQ,CAACH,MAAM,CAAC;AAAE4B,QAAAA,QAAF;AAAYC,QAAAA,KAAZ;AAAmBC,QAAAA,QAAnB;AAA6BC,QAAAA;AAA7B,OAAD,CAAP,CAAR,CACGX,IADH,CACSC,GAAD,IAAS;AACbP,QAAAA,aAAa,eACX,oBAAC,eAAD;AACE,UAAA,OAAO,eACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,mBAFJ;AAME,UAAA,KAAK,MANP;AAOE,UAAA,KAAK,EAAC,SAPR;AAQE,UAAA,IAAI,EAAEjB,KARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADW,CAAb;AAYD,OAdH,EAeG2B,KAfH,CAeUC,GAAD,IAAS;AACdjB,QAAAA,QAAQ,eACN,oBAAC,eAAD;AACE,UAAA,OAAO,eACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,qBAFJ;AAME,UAAA,KAAK,MANP;AAOE,UAAA,KAAK,EAAC,SAPR;AAQE,UAAA,IAAI,EAAEZ,OARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADM,CAAR;AAYD,OA5BH;AA6BD;AACF,GAlFD;;AAmFA,MAAIQ,UAAU,CAAC8B,OAAf,EAAwB,oBAAO,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,CAAxB,KAEE,oBACE,0CACG3B,KADH,EAEGE,KAFH,EAGGE,OAHH,EAIGE,UAJH,eAKE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAC,gBADR;AAEE,IAAA,IAAI,EAAE,CACJ;AACEsB,MAAAA,SAAS,EAAE,YADb;AAEEC,MAAAA,OAAO,EAAE1C,SAFX;AAGE2C,MAAAA,UAAU,eACR,uDACE,oBAAC,aAAD;AACE,QAAA,KAAK,EAAC,YADR;AAEE,QAAA,OAAO,EAAEhC,KAAK,CAACW,OAFjB;AAGE,QAAA,IAAI,EAAEX,KAAK,CAACc,IAHd;AAIE,QAAA,KAAK,EAAE3B,UAJT;AAKE,QAAA,QAAQ,EAAE;AACR8C,UAAAA,QAAQ,EAAGX,OAAD,IACR,IAAIY,OAAJ,CAAaC,OAAD,IAAa;AACvBA,YAAAA,OAAO;AACPd,YAAAA,OAAO,CAACC,OAAD,CAAP;AACD,WAHD,CAFM;AAMRc,UAAAA,WAAW,EAAGC,OAAD,IACX,IAAIH,OAAJ,CAAaC,OAAD,IAAa;AACvBG,YAAAA,UAAU,CAAC,MAAM;AACfH,cAAAA,OAAO;AACPzB,cAAAA,QAAQ,CAAE6B,SAAD,IAAe;AACtB,sBAAMzB,IAAI,GAAG,CAAC,GAAGyB,SAAS,CAACzB,IAAd,CAAb;AACAA,gBAAAA,IAAI,CAAC0B,MAAL,CAAY1B,IAAI,CAAC2B,OAAL,CAAaJ,OAAb,CAAZ,EAAmC,CAAnC;AACA,uBAAO,EAAE,GAAGE,SAAL;AAAgBzB,kBAAAA;AAAhB,iBAAP;AACD,eAJO,CAAR;AAKD,aAPS,EAOP,GAPO,CAAV;AAQD,WATD;AAPM,SALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAJJ,KADI,EAiCJ;AACEgB,MAAAA,SAAS,EAAE,kBADb;AAEEC,MAAAA,OAAO,EAAEzC,QAFX;AAGE0C,MAAAA,UAAU,eACR,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAJJ,KAjCI,CAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAsDH;;AAEDpC,QAAQ,CAAC8C,SAAT,GAAqB;AACnBC,EAAAA,OAAO,EAAE3D,SAAS,CAAC4D,MAAV,CAAiBC;AADP,CAArB;AAIA,eAAe5D,UAAU,CAACC,aAAD,CAAV,CAA0BU,QAA1B,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAllUsers } from \"../../../actions/AuthActions\";\nimport MaterialTable from \"material-table\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { stylesContent } from \"../styles/Styles\";\nimport { tableIcons } from \"../../tableFeatures/tableIcons\";\nimport NavPills from \"../../../components/NavPills/NavPills.js\";\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Schedule from \"@material-ui/icons/Schedule\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport Check from \"@material-ui/icons/Check\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SnackbarContent from \"../../../components/Snackbar/SnackbarContent.js\";\nimport { signUp } from \"../../../actions/AuthActions\";\n\nfunction UserList(props) {\n  const dispatch = useDispatch();\n  const authDetail = useSelector((state) => state.auth);\n  const [alert, setAlert] = useState(null);\n  const [empty, setEmpty] = useState(null);\n  const [roleErr, setRoleErr] = useState(null);\n  const [addSuccess, setAddSuccess] = useState(null);\n\n  const [state, setState] = useState({\n    columns: [\n      { title: \"ID\", field: \"id\" },\n      { title: \"Username\", field: \"username\" },\n      { title: \"Role\", field: \"roles[0].name\" },\n      { title: \"Email\", field: \"email\" },\n      { title: \"Password\", field: \"password\" },\n    ],\n    data: [],\n  });\n  useEffect(() => {\n    dispatch(getAllUsers())\n      .then((res) => {\n        console.log(res.data);\n        if (res)\n          setState({\n            columns: state.columns,\n            data: res.data,\n          });\n        setAlert(null);\n      })\n      .catch((err) => {\n        setAlert(\n          <SnackbarContent\n            message={\n              <span>\n                <b>WARNING ALERT:</b> Could not reach data... Refresh Page...\n              </span>\n            }\n            close\n            color=\"warning\"\n            icon={Warning}\n          />\n        );\n      });\n  }, [dispatch ,addSuccess]);\n  const addUser = (newData) => {\n    setEmpty(null);\n    setAddSuccess(null);\n    setAlert(null);\n    setRoleErr(null);\n    if (\n      !newData.username ||\n      !newData.email ||\n      !newData.password ||\n      !newData.roles\n    ) {\n      console.log(\"empty\");\n      setEmpty(\n        <SnackbarContent\n          message={\n            <span>\n              <b>WARNING ALERT:</b> Empty field(s)...\n            </span>\n          }\n          close\n          color=\"warning\"\n          icon={Warning}\n        />\n      );\n    } else if (\n      ![\"admin\", \"candidat\", \"mentor\", \"instructor\"].includes(\n        newData.roles[0].name\n      )\n    ) {\n      console.log(\"Unknown role\");\n  \n      setRoleErr(\n        <SnackbarContent\n          message={\n            <span>\n              <b>ERROR ALERT:</b> Unknown role\n              ([\"admin\",\"candidat\",\"mentor\",\"instructor\"])...\n            </span>\n          }\n          close\n          color=\"warning\"\n          icon={Warning}\n        />\n      );\n    } else {\n      console.log(\"gonna add\");\n  \n      let username = newData.username;\n      let email = newData.email;\n      let password = newData.password;\n      let roles = [newData.roles[0].name];\n      console.log(username, email, password, roles);\n      dispatch(signUp({ username, email, password, roles }))\n        .then((res) => {\n          setAddSuccess(\n            <SnackbarContent\n              message={\n                <span>\n                  <b>SUCCESS ALERT:</b> User Added...\n                </span>\n              }\n              close\n              color=\"success\"\n              icon={Check}\n            />\n          );\n        })\n        .catch((err) => {\n          setAlert(\n            <SnackbarContent\n              message={\n                <span>\n                  <b>WARNING ALERT:</b> Server ERROR...\n                </span>\n              }\n              close\n              color=\"warning\"\n              icon={Warning}\n            />\n          );\n        });\n    }\n  };\n  if (authDetail.loading) return <CircularProgress />;\n  else\n    return (\n      <>\n        {alert}\n        {empty}\n        {roleErr}\n        {addSuccess}\n        <NavPills\n          color=\"adminDashboard\"\n          tabs={[\n            {\n              tabButton: \"Users List\",\n              tabIcon: Dashboard,\n              tabContent: (\n                <>\n                  <MaterialTable\n                    title=\"Users List\"\n                    columns={state.columns}\n                    data={state.data}\n                    icons={tableIcons}\n                    editable={{\n                      onRowAdd: (newData) =>\n                        new Promise((resolve) => {\n                          resolve();\n                          addUser(newData);\n                        }),\n                      onRowDelete: (oldData) =>\n                        new Promise((resolve) => {\n                          setTimeout(() => {\n                            resolve();\n                            setState((prevState) => {\n                              const data = [...prevState.data];\n                              data.splice(data.indexOf(oldData), 1);\n                              return { ...prevState, data };\n                            });\n                          }, 600);\n                        }),\n                    }}\n                  />\n                </>\n              ),\n            },\n            {\n              tabButton: \"Account Settings\",\n              tabIcon: Schedule,\n              tabContent: (\n                <>\n                  <h1>blabla</h1>\n                </>\n              ),\n            },\n          ]}\n        />\n      </>\n    );\n}\n\nUserList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(stylesContent)(UserList);\n"]},"metadata":{},"sourceType":"module"}