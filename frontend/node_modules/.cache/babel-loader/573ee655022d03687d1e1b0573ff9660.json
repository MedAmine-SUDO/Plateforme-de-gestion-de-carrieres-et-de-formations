{"ast":null,"code":"import apiCall from '../apiCall';\nimport Cookies from \"js-cookie\";\nimport jwtDecode from \"jwt-decode\";\nimport History from '../History';\nexport const signUp = user => async dispatch => {\n  try {\n    dispatch({\n      type: 'SIGNUP_USER_LOADING'\n    });\n    const res = await apiCall('/auth/signup', 'post', user);\n    dispatch({\n      type: 'SIGNUP_USER_SUCCESS',\n      payload: res.data\n    });\n    History.push(`/signin`);\n    return res;\n  } catch (err) {\n    console.log(err.response);\n    return dispatch({\n      type: 'SIGNUP_USER_FAILURE',\n      payload: err.response.data\n    });\n  }\n};\nexport const setCurrentUser = (Cookies, jwtDecode) => async dispatch => {\n  try {\n    dispatch({\n      type: 'SET_CURRENT_USER_LOADING'\n    });\n    const payload = jwtDecode(Cookies.get('token'));\n    dispatch({\n      type: 'SET_CURRENT_USER_SUCCESS',\n      payload\n    });\n  } catch (err) {\n    dispatch({\n      type: 'SET_CURRENT_USER_FAILURE',\n      payload: err.response.data\n    });\n  }\n};\nexport const signIn = user => async dispatch => {\n  try {\n    dispatch({\n      type: 'SIGNIN_USER_LOADING'\n    });\n    const res = await apiCall('/auth/signin', 'post', user);\n    dispatch({\n      type: 'SIGNIN_USER_SUCCESS',\n      payload: res.data\n    });\n    Cookies.set('token', res.data.accessToken);\n    dispatch(setCurrentUser(Cookies, jwtDecode));\n    return res;\n  } catch (err) {\n    return dispatch({\n      type: 'SIGNIN_USER_FAILURE',\n      payload: err.response.data\n    });\n  }\n};\nexport const signUpDone = () => async dispatch => {\n  try {\n    dispatch({\n      type: 'SIGNUPDONE_USER_SUCCESS'\n    });\n  } catch (err) {\n    return dispatch({\n      type: 'SIGNUPDONE_USER_FAILURE',\n      payload: err.response.data\n    });\n  }\n};\nexport const logoutUser = () => async dispatch => {\n  try {\n    dispatch({\n      type: 'LOGOUT_USER_LOADING'\n    });\n    dispatch({\n      type: 'LOGOUT_USER_SUCCESS'\n    });\n  } catch (err) {\n    dispatch({\n      type: 'SET_CURRENT_USER_FAILURE',\n      payload: err.response.data\n    });\n  }\n};","map":{"version":3,"sources":["/home/akrem/Desktop/frontend/src/actions/AuthActions.js"],"names":["apiCall","Cookies","jwtDecode","History","signUp","user","dispatch","type","res","payload","data","push","err","console","log","response","setCurrentUser","get","signIn","set","accessToken","signUpDone","logoutUser"],"mappings":"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","sourcesContent":["import apiCall from '../apiCall';\nimport Cookies from \"js-cookie\";\nimport jwtDecode from \"jwt-decode\";\nimport History from '../History'\n\nexport const signUp = (user) => async (dispatch) => {  \n  try {\n    dispatch({ type: 'SIGNUP_USER_LOADING' });\n    const res = await apiCall('/auth/signup', 'post', user);\n    dispatch({ type: 'SIGNUP_USER_SUCCESS', payload: res.data });\n    History.push(`/signin`)\n    return res;\n  } catch (err) {\n    console.log(err.response)\n    return dispatch({ type: 'SIGNUP_USER_FAILURE', payload: err.response.data });\n  }\n};\n\nexport const setCurrentUser = (Cookies, jwtDecode)=> async  (dispatch) => {\n  try {\n    dispatch({ type: 'SET_CURRENT_USER_LOADING' });\n    const payload = jwtDecode(Cookies.get('token'));\n    dispatch({ type: 'SET_CURRENT_USER_SUCCESS', payload });\n  } catch (err) {\n    dispatch({ type: 'SET_CURRENT_USER_FAILURE', payload: err.response.data })\n  }\n}\n\nexport const signIn = (user) => async (dispatch) => {\n  try {\n    dispatch({ type: 'SIGNIN_USER_LOADING' });\n    const res = await apiCall('/auth/signin', 'post', user);\n    dispatch({ type: 'SIGNIN_USER_SUCCESS', payload: res.data });\n    Cookies.set('token', res.data.accessToken);\n    dispatch(setCurrentUser(Cookies,jwtDecode))\n    return res;\n  } catch (err) {\n    return dispatch({ type: 'SIGNIN_USER_FAILURE', payload: err.response.data })\n  }\n};\nexport const signUpDone = () => async (dispatch ) =>{\n  try {\n    dispatch({ type: 'SIGNUPDONE_USER_SUCCESS'});\n  } catch (err) {\n    return dispatch({ type: 'SIGNUPDONE_USER_FAILURE', payload: err.response.data })\n  }\n}\nexport const logoutUser = ()=> async  (dispatch) => {\n  try {\n    dispatch({ type: 'LOGOUT_USER_LOADING' });\n    dispatch({ type: 'LOGOUT_USER_SUCCESS'});\n  } catch (err) {\n    dispatch({ type: 'SET_CURRENT_USER_FAILURE', payload: err.response.data })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}