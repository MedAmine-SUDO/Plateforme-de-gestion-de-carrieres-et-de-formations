{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.between = between;\nexports.callIfDefined = callIfDefined;\nexports.getAmPmLabels = getAmPmLabels;\n\nvar _dateFormatter = require(\"./dateFormatter\");\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n/**\n * Returns a value no smaller than min and no larger than max.\n *\n * @param {*} value Value to return.\n * @param {*} min Minimum return value.\n * @param {*} max Maximum return value.\n */\n\n\nfunction between(value, min, max) {\n  if (min && min > value) {\n    return min;\n  }\n\n  if (max && max < value) {\n    return max;\n  }\n\n  return value;\n}\n/**\n * Calls a function, if it's defined, with specified arguments\n * @param {Function} fn\n * @param {Object} args\n */\n\n\nfunction callIfDefined(fn) {\n  if (fn && typeof fn === 'function') {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    fn.apply(void 0, args);\n  }\n}\n\nvar nines = ['9', 'Ù©'];\nvar ninesRegExp = new RegExp(\"[\".concat(nines.join(''), \"]\"));\nvar amPmFormatter = (0, _dateFormatter.getFormatter)({\n  hour: 'numeric'\n});\n\nfunction getAmPmLabels(locale) {\n  var amString = amPmFormatter(locale, new Date(2017, 0, 1, 9));\n  var pmString = amPmFormatter(locale, new Date(2017, 0, 1, 21));\n\n  var _amString$split = amString.split(ninesRegExp),\n      _amString$split2 = _slicedToArray(_amString$split, 2),\n      am1 = _amString$split2[0],\n      am2 = _amString$split2[1];\n\n  var _pmString$split = pmString.split(ninesRegExp),\n      _pmString$split2 = _slicedToArray(_pmString$split, 2),\n      pm1 = _pmString$split2[0],\n      pm2 = _pmString$split2[1];\n\n  if (pm2 !== undefined) {\n    // If pm2 is undefined, nine was not found in pmString - this locale is not using 12-hour time\n    if (am1 !== pm1) {\n      return [am1, pm1].map(function (el) {\n        return el.trim();\n      });\n    }\n\n    if (am2 !== pm2) {\n      return [am2, pm2].map(function (el) {\n        return el.trim();\n      });\n    }\n  } // Fallback\n\n\n  return ['AM', 'PM'];\n}","map":{"version":3,"sources":["/home/akrem/Desktop/Plateforme-de-gestion-de-carrieres-et-de-formations/frontend/node_modules/react-datetime-picker/dist/shared/utils.js"],"names":["Object","defineProperty","exports","value","between","callIfDefined","getAmPmLabels","_dateFormatter","require","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","Symbol","iterator","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","err","isArray","min","max","fn","_len","arguments","args","_key","apply","nines","ninesRegExp","RegExp","concat","join","amPmFormatter","getFormatter","hour","locale","amString","Date","pmString","_amString$split","split","_amString$split2","am1","am2","_pmString$split","_pmString$split2","pm1","pm2","map","el","trim"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.between = between;\nexports.callIfDefined = callIfDefined;\nexports.getAmPmLabels = getAmPmLabels;\n\nvar _dateFormatter = require(\"./dateFormatter\");\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/**\n * Returns a value no smaller than min and no larger than max.\n *\n * @param {*} value Value to return.\n * @param {*} min Minimum return value.\n * @param {*} max Maximum return value.\n */\nfunction between(value, min, max) {\n  if (min && min > value) {\n    return min;\n  }\n\n  if (max && max < value) {\n    return max;\n  }\n\n  return value;\n}\n/**\n * Calls a function, if it's defined, with specified arguments\n * @param {Function} fn\n * @param {Object} args\n */\n\n\nfunction callIfDefined(fn) {\n  if (fn && typeof fn === 'function') {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    fn.apply(void 0, args);\n  }\n}\n\nvar nines = ['9', 'Ù©'];\nvar ninesRegExp = new RegExp(\"[\".concat(nines.join(''), \"]\"));\nvar amPmFormatter = (0, _dateFormatter.getFormatter)({\n  hour: 'numeric'\n});\n\nfunction getAmPmLabels(locale) {\n  var amString = amPmFormatter(locale, new Date(2017, 0, 1, 9));\n  var pmString = amPmFormatter(locale, new Date(2017, 0, 1, 21));\n\n  var _amString$split = amString.split(ninesRegExp),\n      _amString$split2 = _slicedToArray(_amString$split, 2),\n      am1 = _amString$split2[0],\n      am2 = _amString$split2[1];\n\n  var _pmString$split = pmString.split(ninesRegExp),\n      _pmString$split2 = _slicedToArray(_pmString$split, 2),\n      pm1 = _pmString$split2[0],\n      pm2 = _pmString$split2[1];\n\n  if (pm2 !== undefined) {\n    // If pm2 is undefined, nine was not found in pmString - this locale is not using 12-hour time\n    if (am1 !== pm1) {\n      return [am1, pm1].map(function (el) {\n        return el.trim();\n      });\n    }\n\n    if (am2 !== pm2) {\n      return [am2, pm2].map(function (el) {\n        return el.trim();\n      });\n    }\n  } // Fallback\n\n\n  return ['AM', 'PM'];\n}"]},"metadata":{},"sourceType":"script"}