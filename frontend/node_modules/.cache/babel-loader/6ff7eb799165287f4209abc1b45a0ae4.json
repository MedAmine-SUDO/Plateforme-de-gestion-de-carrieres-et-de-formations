{"ast":null,"code":"var _jsxFileName = \"/home/medamine/Desktop/Plateforme-de-gestion-de-carrieres-et-de-formations/frontend/src/containers/Pages/TestPage/Sections/QuestionTable.js\";\nimport React, { useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { useDispatch } from \"react-redux\";\nimport { tableIcons } from \"../../../tableFeatures/tableIcons\";\nimport { testNiveauPostQuestion, testNiveauGetQuestions } from \"../../../../actions/TestNiveauActions\";\nexport default function QuestionTable() {\n  const [state, setState] = React.useState({\n    columns: [{\n      title: \"Question number\",\n      field: \"questionNbr\",\n      type: \"numeric\"\n    }, {\n      title: \"Description\",\n      field: \"questionContent\"\n    }, {\n      title: \"First Answer\",\n      field: \"firstAnswer\"\n    }, {\n      title: \"Second Answer\",\n      field: \"secondAnswer\"\n    }, {\n      title: \"Third Answer\",\n      field: \"thirdAnswer\"\n    }, {\n      title: \"Fourth Answer\",\n      field: \"fourthAnswer\"\n    }, {\n      title: \"Difficulty\",\n      field: \"difficulty\",\n      lookup: {\n        1: \"BASIC\",\n        2: \"INTERMEDIATE\",\n        3: \"HARD\",\n        4: \"PROFESSIONAL\"\n      }\n    }, {\n      title: \"Correct Answer\",\n      field: \"correctAnswer\",\n      lookup: {\n        1: \"First Answer\",\n        2: \"Second Answer\",\n        3: \"Third Answer\",\n        4: \"Fourth Answer\"\n      }\n    }],\n    data: []\n  });\n  const dispatch = useDispatch();\n\n  const handleRowAdd = async newData => {\n    let questionToAdd = {\n      questionNbr: \"\",\n      questionContent: \"\",\n      answers: [{\n        answerContent: \"\"\n      }, {\n        answerCotnent: \"\"\n      }, {\n        answerContent: \"\"\n      }, {\n        answerContent: \"\"\n      }],\n      difficulty: \"\"\n    };\n    questionToAdd.questionNbr = newData.questionNbr;\n    questionToAdd.questionContent = newData.questionContent;\n\n    switch (newData.difficulty) {\n      case \"1\":\n        questionToAdd.difficulty = \"BASIC\";\n        break;\n\n      case \"2\":\n        questionToAdd.difficulty = \"INTERMEDIATE\";\n        break;\n\n      case \"3\":\n        questionToAdd.difficulty = \"HARD\";\n        break;\n\n      case \"4\":\n        questionToAdd.difficulty = \"PROFESSIONAL\";\n        break;\n\n      default:\n        break;\n    }\n\n    questionToAdd.answers[0].answerContent = newData.firstAnswer;\n    questionToAdd.answers[1].answerContent = newData.secondAnswer;\n    questionToAdd.answers[2].answerContent = newData.thirdAnswer;\n    questionToAdd.answers[3].answerContent = newData.fourthAnswer;\n    dispatch(testNiveauPostQuestion(questionToAdd));\n    setState(prevState => {\n      const data = [...prevState.data];\n      data.push(newData);\n      return { ...prevState,\n        data\n      };\n    });\n  };\n\n  useEffect(() => {\n    dispatch(testNiveauGetQuestions()).then(res => {\n      res.data.map(question => {\n        let newQuestion = {\n          questionNbr: \"\",\n          questionContent: \"\",\n          firstAnswer: \"\",\n          secondAnswer: \"\",\n          thirdAnswer: \"\",\n          fourthAnswer: \"\",\n          difficulty: \"\"\n        };\n\n        switch (question.difficulty) {\n          case \"BASIC\":\n            question.difficulty = 1;\n            break;\n\n          case \"INTERMEDIATE\":\n            question.difficulty = 2;\n            break;\n\n          case \"HARD\":\n            question.difficulty = 3;\n            break;\n\n          case \"PROFESSIONAL\":\n            question.difficulty = 4;\n            break;\n\n          default:\n            break;\n        }\n\n        newQuestion.questionNbr = question.questionNbr;\n        newQuestion.questionContent = question.questionContent;\n        newQuestion.difficulty = question.difficulty;\n        newQuestion.firstAnswer = question.answers[0].answerContent;\n        newQuestion.secondAnswer = question.answers[1].answerContent;\n        newQuestion.thirdAnswer = question.answers[2].answerContent;\n        newQuestion.fourthAnswer = question.answers[3].answerContent;\n        setState(prevState => {\n          const data = [...prevState.data];\n          data.push(newQuestion);\n          return { ...prevState,\n            data\n          };\n        });\n      });\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Questions\",\n    columns: state.columns,\n    data: state.data,\n    icons: tableIcons,\n    editable: {\n      onRowAdd: newData => handleRowAdd(newData),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/home/medamine/Desktop/Plateforme-de-gestion-de-carrieres-et-de-formations/frontend/src/containers/Pages/TestPage/Sections/QuestionTable.js"],"names":["React","useEffect","MaterialTable","useDispatch","tableIcons","testNiveauPostQuestion","testNiveauGetQuestions","QuestionTable","state","setState","useState","columns","title","field","type","lookup","data","dispatch","handleRowAdd","newData","questionToAdd","questionNbr","questionContent","answers","answerContent","answerCotnent","difficulty","firstAnswer","secondAnswer","thirdAnswer","fourthAnswer","prevState","push","then","res","map","question","newQuestion","onRowAdd","onRowUpdate","oldData","Promise","resolve","setTimeout","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { useDispatch } from \"react-redux\";\nimport { tableIcons } from \"../../../tableFeatures/tableIcons\";\n\nimport {\n  testNiveauPostQuestion,\n  testNiveauGetQuestions,\n} from \"../../../../actions/TestNiveauActions\";\n\nexport default function QuestionTable() {\n  const [state, setState] = React.useState({\n    columns: [\n      { title: \"Question number\", field: \"questionNbr\", type: \"numeric\" },\n      { title: \"Description\", field: \"questionContent\" },\n      { title: \"First Answer\", field: \"firstAnswer\" },\n      { title: \"Second Answer\", field: \"secondAnswer\" },\n      { title: \"Third Answer\", field: \"thirdAnswer\" },\n      { title: \"Fourth Answer\", field: \"fourthAnswer\" },\n      {\n        title: \"Difficulty\",\n        field: \"difficulty\",\n        lookup: { 1: \"BASIC\", 2: \"INTERMEDIATE\", 3: \"HARD\", 4: \"PROFESSIONAL\" },\n      },\n      {\n        title: \"Correct Answer\",\n        field: \"correctAnswer\",\n        lookup: {\n          1: \"First Answer\",\n          2: \"Second Answer\",\n          3: \"Third Answer\",\n          4: \"Fourth Answer\",\n        },\n      },\n    ],\n    data: [],\n  });\n\n  const dispatch = useDispatch();\n\n  const handleRowAdd = async (newData) => {\n    let questionToAdd = {\n      questionNbr: \"\",\n      questionContent: \"\",\n      answers: [\n        { answerContent: \"\" },\n        { answerCotnent: \"\" },\n        { answerContent: \"\" },\n        { answerContent: \"\" },\n      ],\n      difficulty: \"\",\n    };\n\n    questionToAdd.questionNbr = newData.questionNbr;\n    questionToAdd.questionContent = newData.questionContent;\n    switch (newData.difficulty) {\n      case \"1\":\n        questionToAdd.difficulty = \"BASIC\";\n        break;\n      case \"2\":\n        questionToAdd.difficulty = \"INTERMEDIATE\";\n        break;\n      case \"3\":\n        questionToAdd.difficulty = \"HARD\";\n        break;\n      case \"4\":\n        questionToAdd.difficulty = \"PROFESSIONAL\";\n        break;\n      default:\n        break;\n    }\n\n    questionToAdd.answers[0].answerContent = newData.firstAnswer;\n    questionToAdd.answers[1].answerContent = newData.secondAnswer;\n    questionToAdd.answers[2].answerContent = newData.thirdAnswer;\n    questionToAdd.answers[3].answerContent = newData.fourthAnswer;\n\n    dispatch(testNiveauPostQuestion(questionToAdd));\n\n    setState((prevState) => {\n      const data = [...prevState.data];\n      data.push(newData);\n      return { ...prevState, data };\n    });\n  };\n\n  useEffect(() => {\n    dispatch(testNiveauGetQuestions()).then((res) => {\n      res.data.map(question => {\n        let newQuestion = {\n          questionNbr: \"\",\n          questionContent: \"\",\n          firstAnswer: \"\",\n          secondAnswer: \"\",\n          thirdAnswer: \"\",\n          fourthAnswer: \"\",\n          difficulty: \"\",\n        };\n\n        switch (question.difficulty) {\n          case \"BASIC\":\n            question.difficulty = 1;\n            break;\n          case \"INTERMEDIATE\":\n            question.difficulty = 2;\n            break;\n          case \"HARD\":\n            question.difficulty = 3;\n            break;\n          case \"PROFESSIONAL\":\n            question.difficulty = 4;\n            break;\n          default:\n            break;\n        }\n\n        newQuestion.questionNbr = question.questionNbr;\n        newQuestion.questionContent = question.questionContent;\n        newQuestion.difficulty = question.difficulty;\n        newQuestion.firstAnswer = question.answers[0].answerContent;\n        newQuestion.secondAnswer = question.answers[1].answerContent;\n        newQuestion.thirdAnswer = question.answers[2].answerContent;\n        newQuestion.fourthAnswer = question.answers[3].answerContent;\n\n        setState((prevState) => {\n          const data = [...prevState.data];\n          data.push(newQuestion);\n          return { ...prevState, data };\n        });\n      })\n\n    });\n  }, []);\n\n  return (\n    <MaterialTable\n      title=\"Questions\"\n      columns={state.columns}\n      data={state.data}\n      icons={tableIcons}\n      editable={{\n        onRowAdd: (newData) => handleRowAdd(newData),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              if (oldData) {\n                setState((prevState) => {\n                  const data = [...prevState.data];\n                  data[data.indexOf(oldData)] = newData;\n                  return { ...prevState, data };\n                });\n              }\n            }, 600);\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              setState((prevState) => {\n                const data = [...prevState.data];\n                data.splice(data.indexOf(oldData), 1);\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n      }}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}