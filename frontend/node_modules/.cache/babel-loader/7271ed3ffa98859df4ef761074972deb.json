{"ast":null,"code":"import apiCall from '../apiCall';\nimport Cookies from \"js-cookie\";\nexport const signUp = user => async dispatch => {\n  try {\n    dispatch({\n      type: 'SIGNUP_USER_LOADING'\n    });\n    const res = await apiCall('/auth/signup', 'post', user);\n    dispatch({\n      type: 'SIGNUP_USER_SUCCESS',\n      payload: res.data\n    });\n    Cookies.set('token', res.data.token);\n    history.push('/user/shit');\n    return res;\n  } catch (err) {\n    return dispatch({\n      type: 'SIGNUP_USER_FAILURE',\n      payload: err.response.data\n    });\n  }\n};\nexport const setCurrentUser = (Cookies, jwtDecode) => async dispatch => {\n  try {\n    dispatch({\n      type: 'SET_CURRENT_USER_LOADING'\n    });\n    const payload = jwtDecode(Cookies.get('token'));\n    dispatch({\n      type: 'SET_CURRENT_USER_SUCCESS',\n      payload\n    });\n  } catch (err) {\n    dispatch({\n      type: 'SET_CURRENT_USER_FAILURE',\n      payload: err\n    });\n  }\n};\nexport const signIn = user => async dispatch => {\n  try {\n    dispatch({\n      type: 'SIGNIN_USER_LOADING'\n    });\n    const res = await apiCall('/auth/signin', 'post', user);\n    dispatch({\n      type: 'SIGNIN_USER_SUCCESS',\n      payload: res.data\n    });\n    return res;\n  } catch (err) {\n    return dispatch({\n      type: 'SIGNIN_USER_FAILURE',\n      payload: err.response.data\n    });\n  }\n};","map":{"version":3,"sources":["/home/akrem/Desktop/frontend/src/actions/AuthActions.js"],"names":["apiCall","Cookies","signUp","user","dispatch","type","res","payload","data","set","token","history","push","err","response","setCurrentUser","jwtDecode","get","signIn"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,YAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,MAAMC,MAAM,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;AAElD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,UAAMC,GAAG,GAAG,MAAMN,OAAO,CAAC,cAAD,EAAiB,MAAjB,EAAyBG,IAAzB,CAAzB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,qBAAR;AAA+BE,MAAAA,OAAO,EAAED,GAAG,CAACE;AAA5C,KAAD,CAAR;AACAP,IAAAA,OAAO,CAACQ,GAAR,CAAY,OAAZ,EAAqBH,GAAG,CAACE,IAAJ,CAASE,KAA9B;AACAC,IAAAA,OAAO,CAACC,IAAR,CAAa,YAAb;AACA,WAAON,GAAP;AACD,GAPD,CAOE,OAAOO,GAAP,EAAY;AACZ,WAAOT,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,qBAAR;AAA+BE,MAAAA,OAAO,EAAEM,GAAG,CAACC,QAAJ,CAAaN;AAArD,KAAD,CAAf;AACD;AACF,CAZM;AAcP,OAAO,MAAMO,cAAc,GAAG,CAACd,OAAD,EAAUe,SAAV,KAAuB,MAAQZ,QAAR,IAAqB;AACxE,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,UAAME,OAAO,GAAGS,SAAS,CAACf,OAAO,CAACgB,GAAR,CAAY,OAAZ,CAAD,CAAzB;AACAb,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,0BAAR;AAAoCE,MAAAA;AAApC,KAAD,CAAR;AACD,GAJD,CAIE,OAAOM,GAAP,EAAY;AACZT,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,0BAAR;AAAoCE,MAAAA,OAAO,EAAEM;AAA7C,KAAD,CAAR;AACD;AACF,CARM;AAUP,OAAO,MAAMK,MAAM,GAAIf,IAAD,IAAU,MAAOC,QAAP,IAAoB;AAClD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,UAAMC,GAAG,GAAG,MAAMN,OAAO,CAAC,cAAD,EAAiB,MAAjB,EAAyBG,IAAzB,CAAzB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,qBAAR;AAA+BE,MAAAA,OAAO,EAAED,GAAG,CAACE;AAA5C,KAAD,CAAR;AACA,WAAOF,GAAP;AACD,GALD,CAKE,OAAOO,GAAP,EAAY;AACZ,WAAOT,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,qBAAR;AAA+BE,MAAAA,OAAO,EAAEM,GAAG,CAACC,QAAJ,CAAaN;AAArD,KAAD,CAAf;AACD;AACF,CATM","sourcesContent":["import apiCall from '../apiCall';\nimport Cookies from \"js-cookie\";\n\nexport const signUp = (user) => async (dispatch) => {\n  \n  try {\n    dispatch({ type: 'SIGNUP_USER_LOADING' });\n    const res = await apiCall('/auth/signup', 'post', user);\n    dispatch({ type: 'SIGNUP_USER_SUCCESS', payload: res.data });\n    Cookies.set('token', res.data.token);\n    history.push('/user/shit');\n    return res;\n  } catch (err) {\n    return dispatch({ type: 'SIGNUP_USER_FAILURE', payload: err.response.data });\n  }\n};\n\nexport const setCurrentUser = (Cookies, jwtDecode)=> async  (dispatch) => {\n  try {\n    dispatch({ type: 'SET_CURRENT_USER_LOADING' });\n    const payload = jwtDecode(Cookies.get('token'));\n    dispatch({ type: 'SET_CURRENT_USER_SUCCESS', payload });\n  } catch (err) {\n    dispatch({ type: 'SET_CURRENT_USER_FAILURE', payload: err })\n  }\n}\n\nexport const signIn = (user) => async (dispatch) => {\n  try {\n    dispatch({ type: 'SIGNIN_USER_LOADING' });\n    const res = await apiCall('/auth/signin', 'post', user);\n    dispatch({ type: 'SIGNIN_USER_SUCCESS', payload: res.data });\n    return res;\n  } catch (err) {\n    return dispatch({ type: 'SIGNIN_USER_FAILURE', payload: err.response.data })\n  }\n};\n"]},"metadata":{},"sourceType":"module"}