{"ast":null,"code":"var _jsxFileName = \"/home/medamine/Desktop/Plateforme-de-gestion-de-carrieres-et-de-formations/frontend/src/containers/auth/SignUp.jsx\";\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { signUp } from \"../../actions/AuthActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { useStyles, Copyright } from \"./Style\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst SignUp = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const authDetail = useSelector(state => state.auth);\n  const [username, setusername] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [confPassword, setconfPassword] = useState(\"\");\n  const [roles] = useState([\"candidat\"]);\n  const [nameErr, setnameErr] = useState(\"\");\n  const [emailErr, setemailErr] = useState(\"\");\n  const [passwordErr, setpasswordErr] = useState(\"\");\n  const [confPasswordErr, setconfPasswordErr] = useState(\"\");\n  React.useEffect(() => {\n    if (authDetail.signUpSuccess) {\n      document.getElementById(\"username\").value = \"\";\n      document.getElementById(\"email\").value = \"\";\n      document.getElementById(\"password\").value = \"\";\n      document.getElementById(\"confPassword\").value = \"\";\n      setusername(\"\");\n      setemail(\"\");\n      setpassword(\"\");\n      setconfPassword(\"\");\n    }\n  }, [authDetail.signUpSuccess]);\n\n  const handleChange = (e, name) => {\n    const user = {};\n    const emailRegEx = RegExp(/^[a-zA-Z0-9]+@(?:[a-zA-Z0-9]+\\.)+[A-Za-z]+$/);\n    user[name] = e.target.value; // validations\n\n    switch (name) {\n      case \"username\":\n        setusername(user.username);\n        user.username.length < 3 ? setnameErr(\"Name must be at least 3 characters!\") : setnameErr(\"\");\n        break;\n\n      case \"email\":\n        setemail(user.email);\n        !emailRegEx.test(user.email) ? setemailErr(\"Invalid Email!\") : setemailErr(\"\");\n        break;\n\n      case \"password\":\n        setpassword(user.password);\n        user.password.length < 8 ? setpasswordErr(\"Password must be at least 8 characters!\") : setpasswordErr(\"\");\n        break;\n\n      case \"confPassword\":\n        setconfPassword(user.confPassword);\n        user.confPassword !== password ? setconfPasswordErr(\"Passwords do not match!\") : setconfPasswordErr(\"\");\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSignUp = async e => {\n    e.preventDefault();\n\n    if (username && email && password && confPassword && !nameErr && !emailErr && !passwordErr && !confPasswordErr) {\n      await dispatch(signUp({\n        username,\n        email,\n        password,\n        roles\n      }));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"Sign up\"), authDetail.signUpErr && /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.titleErr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, authDetail.signUpErr), authDetail.signUpSuccess && /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.titleSucc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, authDetail.signUpSuccess), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    onSubmit: handleSignUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    autoComplete: \"username\",\n    name: \"username\",\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"username\",\n    label: \"Username\",\n    autoFocus: true,\n    onChange: e => handleChange(e, \"username\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }), nameErr && /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, nameErr), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email Address\",\n    name: \"email\",\n    autoComplete: \"email\",\n    onChange: e => handleChange(e, \"email\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }), emailErr && /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, emailErr)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    onChange: e => handleChange(e, \"password\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }), passwordErr && /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, passwordErr)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"confPassword\",\n    label: \"Confirm Password\",\n    type: \"password\",\n    id: \"confPassword\",\n    autoComplete: \"current-password\",\n    onChange: e => handleChange(e, \"confPassword\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }), confPasswordErr && /*#__PURE__*/React.createElement(\"small\", {\n    className: classes.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, confPasswordErr)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      value: \"allowExtraEmails\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 26\n      }\n    }),\n    label: \"I want to receive inspiration, marketing promotions and updates via email.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, \"Sign Up\"), authDetail.loading && /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 34\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/signin\",\n    variant: \"body2\",\n    className: classes.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 15\n    }\n  }, \"Already have an account? Sign in\"))))), /*#__PURE__*/React.createElement(Box, {\n    mt: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Copyright, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/home/medamine/Desktop/Plateforme-de-gestion-de-carrieres-et-de-formations/frontend/src/containers/auth/SignUp.jsx"],"names":["React","useState","useSelector","useDispatch","NavLink","signUp","Avatar","Button","TextField","FormControlLabel","Checkbox","Grid","Box","LockOutlinedIcon","Typography","Container","useStyles","Copyright","CircularProgress","SignUp","classes","dispatch","authDetail","state","auth","username","setusername","email","setemail","password","setpassword","confPassword","setconfPassword","roles","nameErr","setnameErr","emailErr","setemailErr","passwordErr","setpasswordErr","confPasswordErr","setconfPasswordErr","useEffect","signUpSuccess","document","getElementById","value","handleChange","e","name","user","emailRegEx","RegExp","target","length","test","handleSignUp","preventDefault","paper","avatar","signUpErr","titleErr","titleSucc","form","errorText","submit","loading","link"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { signUp } from \"../../actions/AuthActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { useStyles, Copyright } from \"./Style\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst SignUp = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const authDetail = useSelector((state) => state.auth);\n  const [username, setusername] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [confPassword, setconfPassword] = useState(\"\");\n  const [roles] = useState([\"candidat\"]);\n  const [nameErr, setnameErr] = useState(\"\");\n  const [emailErr, setemailErr] = useState(\"\");\n  const [passwordErr, setpasswordErr] = useState(\"\");\n  const [confPasswordErr, setconfPasswordErr] = useState(\"\");\n  React.useEffect(() => {\n    if(authDetail.signUpSuccess){\n      document.getElementById(\"username\").value = \"\";\n      document.getElementById(\"email\").value = \"\";\n      document.getElementById(\"password\").value = \"\";\n      document.getElementById(\"confPassword\").value = \"\";\n      setusername(\"\");\n      setemail(\"\");\n      setpassword(\"\");\n      setconfPassword(\"\");\n    }\n  }, [authDetail.signUpSuccess]);\n  const handleChange = (e, name) => {\n    const user = {};\n    const emailRegEx = RegExp(\n      /^[a-zA-Z0-9]+@(?:[a-zA-Z0-9]+\\.)+[A-Za-z]+$/\n\n    );\n    user[name] = e.target.value;\n    // validations\n    switch (name) {\n      case \"username\":\n        setusername(user.username);\n        user.username.length < 3\n          ? setnameErr(\"Name must be at least 3 characters!\")\n          : setnameErr(\"\");\n        break;\n      case \"email\":\n        setemail(user.email);\n        !emailRegEx.test(user.email)\n          ? setemailErr(\"Invalid Email!\")\n          : setemailErr(\"\");\n        break;\n      case \"password\":\n        setpassword(user.password);\n        user.password.length < 8\n          ? setpasswordErr(\"Password must be at least 8 characters!\")\n          : setpasswordErr(\"\");\n        break;\n      case \"confPassword\":\n        setconfPassword(user.confPassword);\n        user.confPassword !== password\n          ? setconfPasswordErr(\"Passwords do not match!\")\n          : setconfPasswordErr(\"\");\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSignUp = async (e) => {\n    e.preventDefault();\n    if (\n      username &&\n      email &&\n      password &&\n      confPassword &&\n      !nameErr &&\n      !emailErr &&\n      !passwordErr &&\n      !confPasswordErr\n    ) {\n      await dispatch(signUp({ username, email, password, roles }));\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <br /><br /><br />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        {authDetail.signUpErr && (\n          <Typography variant=\"h6\" className={classes.titleErr}>\n            {authDetail.signUpErr}\n          </Typography>\n        )}\n        {authDetail.signUpSuccess && (\n          <Typography variant=\"h6\" className={classes.titleSucc}>\n            {authDetail.signUpSuccess}\n          </Typography>\n        )}\n        <form className={classes.form} noValidate onSubmit={handleSignUp}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"username\"\n                name=\"username\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                autoFocus\n                onChange={(e) => handleChange(e, \"username\")}\n              />\n              {nameErr && (\n                <small className={classes.errorText}>{nameErr}</small>\n              )}\n              <br></br>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                onChange={(e) => handleChange(e, \"email\")}\n              />\n              {emailErr && (\n                <small className={classes.errorText}>{emailErr}</small>\n              )}\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange={(e) => handleChange(e, \"password\")}\n              />\n              {passwordErr && (\n                <small className={classes.errorText}>{passwordErr}</small>\n              )}\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"confPassword\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                id=\"confPassword\"\n                autoComplete=\"current-password\"\n                onChange={(e) => handleChange(e, \"confPassword\")}\n              />\n              {confPasswordErr && (\n                <small className={classes.errorText}>{confPasswordErr}</small>\n              )}\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          {authDetail.loading && <CircularProgress />}\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <NavLink to=\"/signin\" variant=\"body2\" className={classes.link}>\n                Already have an account? Sign in\n              </NavLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n};\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}