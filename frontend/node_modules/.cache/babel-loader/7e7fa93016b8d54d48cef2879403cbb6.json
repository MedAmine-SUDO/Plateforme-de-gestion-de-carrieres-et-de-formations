{"ast":null,"code":"var _jsxFileName = \"/home/akrem/Desktop/frontend/src/containers/auth/SignIn.jsx\";\nimport React, { useState } from 'react';\nimport { useSelector } from \"react-redux\";\nimport classnames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst SignIn = ({\n  signIn\n}) => {\n  const state = useSelector(state => state.auth);\n  const [email, setemail] = useState('');\n  const [password, setpassword] = useState('');\n  const [emailErr, setemailErr] = useState('');\n  const [passwordErr, setpasswordErr] = useState('');\n\n  const handleChange = (e, name) => {\n    const user = {};\n    const emailRegEx = RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n    user[name] = e.target.value; // validations\n\n    switch (name) {\n      case 'email':\n        setemail(user.email);\n        !emailRegEx.test(user.email) ? setemailErr('Invalid Email!') : setemailErr('');\n        break;\n\n      case 'password':\n        setpassword(user.password);\n        user.password.length < 8 ? setpasswordErr('Password must be at least 8 characters!') : setpasswordErr('');\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSignIn = async e => {\n    e.preventDefault(); //if (email && password && !emailErr && !passwordErr) {\n\n    await signIn({\n      email,\n      password\n    }); // }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Sign In\"), state.signInErr && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-danger text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, state.signInErr)), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"mt-4\",\n    onSubmit: handleSignIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Enter Email Address\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    className: classnames(\"form-control\", {\n      'is-invalid': emailErr,\n      'is-valid': !emailErr && email.length\n    }),\n    id: \"email\",\n    placeholder: \"Email Address\",\n    onChange: e => handleChange(e, 'email'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), emailErr && /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 26\n    }\n  }, emailErr)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Enter Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    className: classnames(\"form-control\", {\n      'is-invalid': passwordErr,\n      'is-valid': !passwordErr && password.length\n    }),\n    id: \"password\",\n    placeholder: \"Password\",\n    onChange: e => handleChange(e, 'password'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), passwordErr && /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, passwordErr)), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Sign In\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"float-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"Don't yet have an account? \", /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 38\n    }\n  }, \"Sign Up\")));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/home/akrem/Desktop/frontend/src/containers/auth/SignIn.jsx"],"names":["React","useState","useSelector","classnames","NavLink","SignIn","signIn","state","auth","email","setemail","password","setpassword","emailErr","setemailErr","passwordErr","setpasswordErr","handleChange","e","name","user","emailRegEx","RegExp","target","value","test","length","handleSignIn","preventDefault","signInErr"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from \"react-redux\";\nimport classnames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\n\nconst SignIn = ({ signIn }) => {\n  const state = useSelector((state) => state.auth);\n  const [email, setemail] = useState('');\n  const [password, setpassword] = useState('');\n  const [emailErr, setemailErr] = useState('');\n  const [passwordErr, setpasswordErr] = useState('');\n\n  const handleChange = (e, name) => {\n    const user = {};\n    const emailRegEx = RegExp(\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    );\n    user[name] = e.target.value;\n    // validations\n    switch (name) {\n      case 'email':\n        setemail(user.email);\n        !emailRegEx.test(user.email) ? setemailErr('Invalid Email!') : setemailErr('');\n        break;\n      case 'password':\n        setpassword(user.password);\n        user.password.length < 8 ? setpasswordErr('Password must be at least 8 characters!') : setpasswordErr('');\n        break;\n      default:\n        break;\n    }\n  }\n\n  const handleSignIn = async (e) => {\n    e.preventDefault();\n    //if (email && password && !emailErr && !passwordErr) {\n      await signIn({ email, password });\n   // }\n  }\n\n  return (\n    <div>\n        <h2 className=\"text-center\">Sign In</h2>\n        {state.signInErr && <div className=\"alert alert-danger text-center\">\n          <span className=\"text-danger text-capitalize\">{state.signInErr}</span>\n        </div>}\n        <form className=\"mt-4\" onSubmit={handleSignIn}>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Enter Email Address</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              className={classnames(\n                \"form-control\",\n                { 'is-invalid': emailErr, 'is-valid': !emailErr && email.length }\n              )}\n              id=\"email\"\n              placeholder=\"Email Address\"\n              onChange={(e) => handleChange(e, 'email')}\n            />\n            {emailErr && <small className=\"text-danger\">{emailErr}</small>}\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Enter Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className={classnames(\n                \"form-control\",\n                { 'is-invalid': passwordErr, 'is-valid': !passwordErr && password.length }\n              )}\n              id=\"password\"\n              placeholder=\"Password\"\n              onChange={(e) => handleChange(e, 'password')}\n            />\n            {passwordErr && <small className=\"text-danger\">{passwordErr}</small>}\n          </div>\n          <input type=\"submit\" className=\"btn btn-primary\" value=\"Sign In\" />\n        </form>\n        <p className=\"float-left\">\n          Don't yet have an account? <NavLink to=\"/signup\">Sign Up</NavLink>\n        </p>\n      </div>\n  )\n}\n\nexport default SignIn\n"]},"metadata":{},"sourceType":"module"}