{"ast":null,"code":"var _jsxFileName = \"/home/medamine/Desktop/Plateforme-de-gestion-de-carrieres-et-de-formations/frontend/src/containers/Pages/TestPage/Sections/QuestionTable.js\";\nimport React, { forwardRef, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { useDispatch } from \"react-redux\"; //import { tableIcons } from \"../../../tableFeatures/tableIcons\";\n\nimport { testNiveauPostQuestion, testNiveauGetQuestions, testNiveauDeleteQuestion } from \"../../../../actions/TestNiveauActions\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nconst tableIcons = {\n  Add: forwardRef((props, ref) => /*#__PURE__*/React.createElement(AddBox, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 35\n    }\n  }))),\n  Check: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Check, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 37\n    }\n  }))),\n  Clear: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 37\n    }\n  }))),\n  Delete: forwardRef((props, ref) => /*#__PURE__*/React.createElement(DeleteOutline, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 38\n    }\n  }))),\n  DetailPanel: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }))),\n  Edit: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 36\n    }\n  }))),\n  Export: forwardRef((props, ref) => /*#__PURE__*/React.createElement(SaveAlt, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 38\n    }\n  }))),\n  Filter: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FilterList, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 38\n    }\n  }))),\n  FirstPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 41\n    }\n  }))),\n  LastPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 40\n    }\n  }))),\n  NextPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 40\n    }\n  }))),\n  PreviousPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }))),\n  ResetSearch: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 43\n    }\n  }))),\n  Search: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 38\n    }\n  }))),\n  SortArrow: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ArrowDownward, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 41\n    }\n  }))),\n  ThirdStateCheck: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Remove, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 47\n    }\n  }))),\n  ViewColumn: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ViewColumn, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 42\n    }\n  })))\n};\nexport default function QuestionTable() {\n  const [state, setState] = React.useState({\n    columns: [{\n      title: \"Question number\",\n      field: \"questionNbr\",\n      type: \"numeric\"\n    }, {\n      title: \"Description\",\n      field: \"questionContent\"\n    }, {\n      title: \"First Answer\",\n      field: \"firstAnswer\"\n    }, {\n      title: \"Second Answer\",\n      field: \"secondAnswer\"\n    }, {\n      title: \"Third Answer\",\n      field: \"thirdAnswer\"\n    }, {\n      title: \"Fourth Answer\",\n      field: \"fourthAnswer\"\n    }, {\n      title: \"Difficulty\",\n      field: \"difficulty\",\n      lookup: {\n        1: \"BASIC\",\n        2: \"INTERMEDIATE\",\n        3: \"HARD\",\n        4: \"PROFESSIONAL\"\n      }\n    }, {\n      title: \"Correct Answer\",\n      field: \"correctAnswer\",\n      lookup: {\n        1: \"First Answer\",\n        2: \"Second Answer\",\n        3: \"Third Answer\",\n        4: \"Fourth Answer\"\n      }\n    }],\n    data: []\n  });\n  const dispatch = useDispatch();\n\n  const handleRowAdd = (newData, resolve) => {\n    let questionToAdd = {\n      questionNbr: \"\",\n      questionContent: \"\",\n      answers: [{\n        answerContent: \"\"\n      }, {\n        answerCotnent: \"\"\n      }, {\n        answerContent: \"\"\n      }, {\n        answerContent: \"\"\n      }],\n      difficulty: \"\"\n    };\n    console.log(newData.questionNbr);\n    questionToAdd.questionNbr = newData.questionNbr;\n    questionToAdd.questionContent = newData.questionContent;\n\n    switch (newData.difficulty) {\n      case \"1\":\n        questionToAdd.difficulty = \"BASIC\";\n        break;\n\n      case \"2\":\n        questionToAdd.difficulty = \"INTERMEDIATE\";\n        break;\n\n      case \"3\":\n        questionToAdd.difficulty = \"HARD\";\n        break;\n\n      case \"4\":\n        questionToAdd.difficulty = \"PROFESSIONAL\";\n        break;\n\n      default:\n        break;\n    }\n\n    questionToAdd.answers[0].answerContent = newData.firstAnswer;\n    questionToAdd.answers[1].answerContent = newData.secondAnswer;\n    questionToAdd.answers[2].answerContent = newData.thirdAnswer;\n    questionToAdd.answers[3].answerContent = newData.fourthAnswer;\n    dispatch(testNiveauPostQuestion(questionToAdd)).then(res => {\n      resolve();\n      setState(prevState => {\n        const data = [...prevState.data];\n        data.push(newData);\n        return { ...prevState,\n          data\n        };\n      });\n    });\n  };\n\n  const handleRowDelete = (oldData, resolve) => {\n    dispatch(testNiveauDeleteQuestion(oldData.id)).then(res => {\n      resolve();\n      setState(prevState => {\n        const data = [...prevState.data];\n        data.splice(data.indexOf(oldData), 1);\n        return { ...prevState,\n          data\n        };\n      });\n    });\n  };\n\n  useEffect(() => {\n    dispatch(testNiveauGetQuestions()).then(res => {\n      res.data.map(question => {\n        let newQuestion = {\n          id: \"\",\n          questionNbr: \"\",\n          questionContent: \"\",\n          firstAnswer: \"\",\n          secondAnswer: \"\",\n          thirdAnswer: \"\",\n          fourthAnswer: \"\",\n          difficulty: \"\"\n        };\n\n        switch (question.difficulty) {\n          case \"BASIC\":\n            question.difficulty = 1;\n            break;\n\n          case \"INTERMEDIATE\":\n            question.difficulty = 2;\n            break;\n\n          case \"HARD\":\n            question.difficulty = 3;\n            break;\n\n          case \"PROFESSIONAL\":\n            question.difficulty = 4;\n            break;\n\n          default:\n            break;\n        }\n\n        newQuestion.id = question.id;\n        newQuestion.questionNbr = question.questionNbr;\n        newQuestion.questionContent = question.questionContent;\n        newQuestion.difficulty = question.difficulty;\n        newQuestion.firstAnswer = question.answers[0].answerContent;\n        newQuestion.secondAnswer = question.answers[1].answerContent;\n        newQuestion.thirdAnswer = question.answers[2].answerContent;\n        newQuestion.fourthAnswer = question.answers[3].answerContent;\n        setState(prevState => {\n          const data = [...prevState.data];\n          data.push(newQuestion);\n          return { ...prevState,\n            data\n          };\n        });\n      });\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Questions\",\n    columns: state.columns,\n    data: state.data,\n    icons: tableIcons,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        handleRowAdd(newData, resolve);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        handleRowDelete(oldData, resolve);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/home/medamine/Desktop/Plateforme-de-gestion-de-carrieres-et-de-formations/frontend/src/containers/Pages/TestPage/Sections/QuestionTable.js"],"names":["React","forwardRef","useEffect","MaterialTable","useDispatch","testNiveauPostQuestion","testNiveauGetQuestions","testNiveauDeleteQuestion","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","tableIcons","Add","props","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","QuestionTable","state","setState","useState","columns","title","field","type","lookup","data","dispatch","handleRowAdd","newData","resolve","questionToAdd","questionNbr","questionContent","answers","answerContent","answerCotnent","difficulty","console","log","firstAnswer","secondAnswer","thirdAnswer","fourthAnswer","then","res","prevState","push","handleRowDelete","oldData","id","splice","indexOf","map","question","newQuestion","onRowAdd","Promise","onRowUpdate","setTimeout","onRowDelete"],"mappings":"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","sourcesContent":["import React, { forwardRef, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { useDispatch } from \"react-redux\";\n//import { tableIcons } from \"../../../tableFeatures/tableIcons\";\n\nimport {\n  testNiveauPostQuestion,\n  testNiveauGetQuestions,\n  testNiveauDeleteQuestion,\n} from \"../../../../actions/TestNiveauActions\";\n\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nexport default function QuestionTable() {\n  const [state, setState] = React.useState({\n    columns: [\n      { title: \"Question number\", field: \"questionNbr\", type: \"numeric\" },\n      { title: \"Description\", field: \"questionContent\" },\n      { title: \"First Answer\", field: \"firstAnswer\" },\n      { title: \"Second Answer\", field: \"secondAnswer\" },\n      { title: \"Third Answer\", field: \"thirdAnswer\" },\n      { title: \"Fourth Answer\", field: \"fourthAnswer\" },\n      {\n        title: \"Difficulty\",\n        field: \"difficulty\",\n        lookup: { 1: \"BASIC\", 2: \"INTERMEDIATE\", 3: \"HARD\", 4: \"PROFESSIONAL\" },\n      },\n      {\n        title: \"Correct Answer\",\n        field: \"correctAnswer\",\n        lookup: {\n          1: \"First Answer\",\n          2: \"Second Answer\",\n          3: \"Third Answer\",\n          4: \"Fourth Answer\",\n        },\n      },\n    ],\n    data: [],\n  });\n\n  const dispatch = useDispatch();\n\n  const handleRowAdd = (newData, resolve) => {\n    let questionToAdd = {\n      questionNbr: \"\",\n      questionContent: \"\",\n      answers: [\n        { answerContent: \"\" },\n        { answerCotnent: \"\" },\n        { answerContent: \"\" },\n        { answerContent: \"\" },\n      ],\n      difficulty: \"\",\n    };\n    console.log(newData.questionNbr);\n    questionToAdd.questionNbr = newData.questionNbr;\n    questionToAdd.questionContent = newData.questionContent;\n\n    switch (newData.difficulty) {\n      case \"1\":\n        questionToAdd.difficulty = \"BASIC\";\n        break;\n      case \"2\":\n        questionToAdd.difficulty = \"INTERMEDIATE\";\n        break;\n      case \"3\":\n        questionToAdd.difficulty = \"HARD\";\n        break;\n      case \"4\":\n        questionToAdd.difficulty = \"PROFESSIONAL\";\n        break;\n      default:\n        break;\n    }\n\n    questionToAdd.answers[0].answerContent = newData.firstAnswer;\n    questionToAdd.answers[1].answerContent = newData.secondAnswer;\n    questionToAdd.answers[2].answerContent = newData.thirdAnswer;\n    questionToAdd.answers[3].answerContent = newData.fourthAnswer;\n\n    dispatch(testNiveauPostQuestion(questionToAdd)).then(res =>{\n      resolve();\n      setState((prevState) => {\n        const data = [...prevState.data];\n        data.push(newData);\n        return { ...prevState, data };\n      })\n    })\n\n    \n  };\n\n  const handleRowDelete = (oldData, resolve) => {\n    dispatch(testNiveauDeleteQuestion(oldData.id)).then(res => {\n        resolve();\n        setState((prevState) => {\n          const data = [...prevState.data];\n          data.splice(data.indexOf(oldData),1);\n          return { ...prevState, data};\n        })        \n      })\n  };\n\n  useEffect(() => {\n    dispatch(testNiveauGetQuestions()).then((res) => {\n      res.data.map(question => {\n        let newQuestion = {\n          id:\"\",\n          questionNbr: \"\",\n          questionContent: \"\",\n          firstAnswer: \"\",\n          secondAnswer: \"\",\n          thirdAnswer: \"\",\n          fourthAnswer: \"\",\n          difficulty: \"\",\n        };\n\n        switch (question.difficulty) {\n          case \"BASIC\":\n            question.difficulty = 1;\n            break;\n          case \"INTERMEDIATE\":\n            question.difficulty = 2;\n            break;\n          case \"HARD\":\n            question.difficulty = 3;\n            break;\n          case \"PROFESSIONAL\":\n            question.difficulty = 4;\n            break;\n          default:\n            break;\n        }\n\n        newQuestion.id = question.id;\n        newQuestion.questionNbr = question.questionNbr;\n        newQuestion.questionContent = question.questionContent;\n        newQuestion.difficulty = question.difficulty;\n        newQuestion.firstAnswer = question.answers[0].answerContent;\n        newQuestion.secondAnswer = question.answers[1].answerContent;\n        newQuestion.thirdAnswer = question.answers[2].answerContent;\n        newQuestion.fourthAnswer = question.answers[3].answerContent;\n\n        setState((prevState) => {\n          const data = [...prevState.data];\n          data.push(newQuestion);\n          return { ...prevState, data };\n        });\n      })\n\n    });\n  }, []);\n\n  return (\n    <MaterialTable\n      title=\"Questions\"\n      columns={state.columns}\n      data={state.data}\n      icons={tableIcons}\n      editable={{\n        onRowAdd: (newData) => \n        new Promise((resolve) => {\n          handleRowAdd(newData, resolve)\n        }),\n\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              if (oldData) {\n                setState((prevState) => {\n                  const data = [...prevState.data];\n                  data[data.indexOf(oldData)] = newData;\n                  return { ...prevState, data };\n                });\n              }\n            }, 600);\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve) => {\n              handleRowDelete(oldData, resolve)\n          }),\n      }}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}