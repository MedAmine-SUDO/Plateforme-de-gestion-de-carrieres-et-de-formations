{"ast":null,"code":"import apiCall from '../apiCall';\nimport Cookies from \"js-cookie\";\nimport jwtDecode from \"jwt-decode\";\nexport const signUp = user => async dispatch => {\n  try {\n    dispatch({\n      type: 'AUTH_LOADING'\n    });\n    const res = await apiCall('/auth/signup', 'post', user);\n    dispatch({\n      type: 'SIGNUP_USER_SUCCESS',\n      payload: res.data\n    });\n    return res;\n  } catch (err) {\n    dispatch({\n      type: 'AUTH_END_LOADING'\n    });\n    return dispatch({\n      type: 'SIGNUP_USER_FAILURE',\n      payload: err.response.data\n    });\n  }\n};\nexport const setCurrentUser = (Cookies, jwtDecode) => async dispatch => {\n  try {\n    dispatch({\n      type: 'AUTH_LOADING'\n    });\n    const payload = jwtDecode(Cookies.get('token'));\n    dispatch({\n      type: 'SET_CURRENT_USER_SUCCESS',\n      payload\n    });\n  } catch (err) {\n    dispatch({\n      type: 'AUTH_END_LOADING'\n    });\n    dispatch({\n      type: 'SET_CURRENT_USER_FAILURE',\n      payload: err.response.data\n    });\n  }\n};\nexport const signIn = user => async dispatch => {\n  try {\n    dispatch({\n      type: 'AUTH_LOADING'\n    });\n    const res = await apiCall('/auth/signin', 'post', user);\n    dispatch({\n      type: 'SIGNIN_USER_SUCCESS',\n      payload: res.data\n    });\n    Cookies.set('token', res.data.accessToken);\n    dispatch(setCurrentUser(Cookies, jwtDecode));\n    return res;\n  } catch (err) {\n    dispatch({\n      type: 'AUTH_END_LOADING'\n    });\n    return dispatch({\n      type: 'SIGNIN_USER_FAILURE',\n      payload: err.response.data\n    });\n  }\n};\nexport const logoutUser = () => async dispatch => {\n  try {\n    dispatch({\n      type: 'AUTH_LOADING'\n    });\n    dispatch({\n      type: 'LOGOUT_USER_SUCCESS'\n    });\n  } catch (err) {\n    dispatch({\n      type: 'AUTH_END_LOADING'\n    });\n    dispatch({\n      type: 'SET_CURRENT_USER_FAILURE',\n      payload: err.response.data\n    });\n  }\n};","map":{"version":3,"sources":["/home/akrem/Desktop/frontend/src/actions/AuthActions.js"],"names":["apiCall","Cookies","jwtDecode","signUp","user","dispatch","type","res","payload","data","err","response","setCurrentUser","get","signIn","set","accessToken","logoutUser"],"mappings":"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","sourcesContent":["import apiCall from '../apiCall';\nimport Cookies from \"js-cookie\";\nimport jwtDecode from \"jwt-decode\";\n\nexport const signUp = (user) => async (dispatch) => {  \n  try {\n    dispatch({ type: 'AUTH_LOADING' });\n    const res = await apiCall('/auth/signup', 'post', user);\n    dispatch({ type: 'SIGNUP_USER_SUCCESS', payload: res.data });\n    return res;\n  } catch (err) {\n    dispatch({ type: 'AUTH_END_LOADING' });\n    return dispatch({ type: 'SIGNUP_USER_FAILURE', payload: err.response.data });\n  }\n};\n\nexport const setCurrentUser = (Cookies, jwtDecode)=> async  (dispatch) => {\n  try {\n    dispatch({ type: 'AUTH_LOADING' });\n    const payload = jwtDecode(Cookies.get('token'));\n    dispatch({ type: 'SET_CURRENT_USER_SUCCESS', payload });\n  } catch (err) {\n    dispatch({ type: 'AUTH_END_LOADING' });\n    dispatch({ type: 'SET_CURRENT_USER_FAILURE', payload: err.response.data })\n  }\n}\n\nexport const signIn = (user) => async (dispatch) => {\n  try {\n    dispatch({ type: 'AUTH_LOADING' });\n    const res = await apiCall('/auth/signin', 'post', user);\n    dispatch({ type: 'SIGNIN_USER_SUCCESS', payload: res.data });\n    Cookies.set('token', res.data.accessToken);\n    dispatch(setCurrentUser(Cookies,jwtDecode))\n    return res;\n  } catch (err) {\n    dispatch({ type: 'AUTH_END_LOADING' });\n    return dispatch({ type: 'SIGNIN_USER_FAILURE', payload: err.response.data })\n  }\n};\nexport const logoutUser = ()=> async  (dispatch) => {\n  try {\n    dispatch({ type: 'AUTH_LOADING' });\n    dispatch({ type: 'LOGOUT_USER_SUCCESS'});\n  } catch (err) {\n    dispatch({ type: 'AUTH_END_LOADING' });\n    dispatch({ type: 'SET_CURRENT_USER_FAILURE', payload: err.response.data })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}