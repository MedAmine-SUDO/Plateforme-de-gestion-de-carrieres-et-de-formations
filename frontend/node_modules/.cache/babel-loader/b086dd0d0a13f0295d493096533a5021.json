{"ast":null,"code":"var _jsxFileName = \"/home/akrem/Desktop/frontend/src/containers/auth/SignUp.jsx\";\nimport React, { useState } from 'react';\nimport { useSelector } from \"react-redux\";\nimport classnames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport { AuthFormWrapper } from './Styles';\n\nconst SignUp = ({\n  signUp\n}) => {\n  const state = useSelector(state => state.auth);\n  const [name, setname] = useState('');\n  const [email, setemail] = useState('');\n  const [password, setpassword] = useState('');\n  const [confPassword, setconfPassword] = useState('');\n  const [nameErr, setnameErr] = useState('');\n  const [emailErr, setemailErr] = useState('');\n  const [passwordErr, setpasswordErr] = useState('');\n  const [confPasswordErr, setconfPasswordErr] = useState('');\n\n  const handleChange = (e, name) => {\n    const user = {};\n    const emailRegEx = RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n    user[name] = e.target.value; // validations\n\n    switch (name) {\n      case 'name':\n        setname(user.name);\n        user.name.length < 3 ? setnameErr('Name must be at least 3 characters!') : setnameErr('');\n        break;\n\n      case 'email':\n        setemail(user.email);\n        !emailRegEx.test(user.email) ? setemailErr('Invalid Email!') : setemailErr('');\n        break;\n\n      case 'password':\n        setpassword(user.password);\n        user.password.length < 8 ? setpasswordErr('Password must be at least 8 characters!') : setpasswordErr('');\n        break;\n\n      case 'confPassword':\n        setconfPassword(user.confPassword);\n        user.confPassword !== password ? setconfPasswordErr('Passwords do not match!') : setconfPasswordErr('');\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSignUp = async e => {\n    e.preventDefault();\n\n    if (name && email && password && confPassword && !nameErr && !emailErr && !passwordErr && !confPasswordErr) {\n      await signUp({\n        name,\n        email,\n        password\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Create an Account\"), state.signUpErr && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-danger text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, state.signUpErr)), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"mt-4\",\n    onSubmit: handleSignUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Enter Full Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    className: classnames(\"form-control\", {\n      'is-invalid': nameErr,\n      'is-valid': !nameErr && name.length\n    }),\n    id: \"name\",\n    placeholder: \"Full Name\",\n    onChange: e => handleChange(e, 'name'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), nameErr && /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, nameErr)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Enter Email Address\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    className: classnames(\"form-control\", {\n      'is-invalid': emailErr,\n      'is-valid': !emailErr && email.length\n    }),\n    id: \"email\",\n    placeholder: \"Email Address\",\n    onChange: e => handleChange(e, 'email'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), emailErr && /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 26\n    }\n  }, emailErr)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Enter Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    className: classnames(\"form-control\", {\n      'is-invalid': passwordErr,\n      'is-valid': !passwordErr && password.length\n    }),\n    id: \"password\",\n    placeholder: \"Password\",\n    onChange: e => handleChange(e, 'password'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), passwordErr && /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, passwordErr)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Confirm Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"confPassword\",\n    className: classnames(\"form-control\", {\n      'is-invalid': confPasswordErr,\n      'is-valid': !confPasswordErr && confPassword.length\n    }),\n    id: \"confPassword\",\n    placeholder: \"confPassword\",\n    onChange: e => handleChange(e, 'confPassword'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), confPasswordErr && /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 33\n    }\n  }, confPasswordErr)), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Sign Up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"float-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, \"Already have an account? \", /*#__PURE__*/React.createElement(NavLink, {\n    to: \"signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 36\n    }\n  }, \"Sign In\")));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/home/akrem/Desktop/frontend/src/containers/auth/SignUp.jsx"],"names":["React","useState","useSelector","classnames","NavLink","AuthFormWrapper","SignUp","signUp","state","auth","name","setname","email","setemail","password","setpassword","confPassword","setconfPassword","nameErr","setnameErr","emailErr","setemailErr","passwordErr","setpasswordErr","confPasswordErr","setconfPasswordErr","handleChange","e","user","emailRegEx","RegExp","target","value","length","test","handleSignUp","preventDefault","signUpErr"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from \"react-redux\";\nimport classnames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport { AuthFormWrapper } from './Styles';\n\nconst SignUp = ({ signUp }) => {\n  const state = useSelector((state) => state.auth);\n  const [name, setname] = useState('');\n  const [email, setemail] = useState('');\n  const [password, setpassword] = useState('');\n  const [confPassword, setconfPassword] = useState('');\n  const [nameErr, setnameErr] = useState('');\n  const [emailErr, setemailErr] = useState('');\n  const [passwordErr, setpasswordErr] = useState('');\n  const [confPasswordErr, setconfPasswordErr] = useState('');\n\n  const handleChange = (e, name) => {\n    const user = {};\n    const emailRegEx = RegExp(\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    );\n    user[name] = e.target.value;\n    // validations\n    switch (name) {\n      case 'name':\n        setname(user.name);\n        user.name.length < 3 ? setnameErr('Name must be at least 3 characters!') : setnameErr('');\n        break;\n      case 'email':\n        setemail(user.email);\n        !emailRegEx.test(user.email) ? setemailErr('Invalid Email!') : setemailErr('');\n        break;\n      case 'password':\n        setpassword(user.password);\n        user.password.length < 8 ? setpasswordErr('Password must be at least 8 characters!') : setpasswordErr('');\n        break;\n      case 'confPassword':\n        setconfPassword(user.confPassword);\n        user.confPassword !== password ? setconfPasswordErr('Passwords do not match!') : setconfPasswordErr('');\n        break;\n      default:\n        break;\n    }\n  }\n\n  const handleSignUp = async (e) => {\n    e.preventDefault();\n    if (name && email && password && confPassword && !nameErr && !emailErr && !passwordErr && !confPasswordErr) {\n      await signUp({ name, email, password });\n    }\n  }\n  \n  return (\n    <div>\n        <h2 className=\"text-center\">Create an Account</h2>\n        {state.signUpErr && <div className=\"alert alert-danger text-center\">\n          <span className=\"text-danger text-capitalize\">{state.signUpErr}</span>\n          </div>}\n        <form className=\"mt-4\" onSubmit={handleSignUp}>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Enter Full Name</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              className={classnames(\n                \"form-control\",\n                { 'is-invalid': nameErr, 'is-valid': !nameErr && name.length }\n              )}\n              id=\"name\"\n              placeholder=\"Full Name\"\n              onChange={(e) => handleChange(e, 'name')}\n            />\n            {nameErr && <small className=\"text-danger\">{nameErr}</small>}\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Enter Email Address</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              className={classnames(\n                \"form-control\",\n                { 'is-invalid': emailErr, 'is-valid': !emailErr && email.length }\n              )}\n              id=\"email\"\n              placeholder=\"Email Address\"\n              onChange={(e) => handleChange(e, 'email')}\n            />\n            {emailErr && <small className=\"text-danger\">{emailErr}</small>}\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Enter Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className={classnames(\n                \"form-control\",\n                { 'is-invalid': passwordErr, 'is-valid': !passwordErr && password.length }\n              )}\n              id=\"password\"\n              placeholder=\"Password\"\n              onChange={(e) => handleChange(e, 'password')}\n            />\n            {passwordErr && <small className=\"text-danger\">{passwordErr}</small>}\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"Confirm Password\">Confirm Password</label>\n            <input\n              type=\"password\" \n              name=\"confPassword\"\n              className={classnames(\n                \"form-control\",\n                { 'is-invalid': confPasswordErr, 'is-valid': !confPasswordErr && confPassword.length }\n              )}\n              id=\"confPassword\"\n              placeholder=\"confPassword\"\n              onChange={(e) => handleChange(e, 'confPassword')}\n            />\n            {confPasswordErr && <small className=\"text-danger\">{confPasswordErr}</small>}\n          </div>\n          <input type=\"submit\" className=\"btn btn-primary\" value=\"Sign Up\"/>\n        </form>\n        <p className=\"float-left\">\n          Already have an account? <NavLink to=\"signin\">Sign In</NavLink>\n        </p>\n      </div>\n  )\n}\n\nexport default SignUp\n"]},"metadata":{},"sourceType":"module"}