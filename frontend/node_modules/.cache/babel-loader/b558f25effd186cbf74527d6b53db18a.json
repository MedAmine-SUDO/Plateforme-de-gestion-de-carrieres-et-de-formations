{"ast":null,"code":"import * as cookie from 'cookie';\nimport { parseCookies, readCookie, hasDocumentCookie } from './utils'; // We can't please Rollup and TypeScript at the same time\n// Only way to make both of them work\n\nvar objectAssign = require('object-assign');\n\nvar Cookies =\n/** @class */\nfunction () {\n  function Cookies(cookies) {\n    this.changeListeners = [];\n    this.TESTING_ONETWO = 2;\n    this.cookies = parseCookies(cookies);\n    this.HAS_DOCUMENT_COOKIE = hasDocumentCookie();\n  }\n\n  Cookies.prototype._updateBrowserValues = function () {\n    if (!this.HAS_DOCUMENT_COOKIE) {\n      return;\n    }\n\n    this.cookies = cookie.parse(document.cookie);\n  };\n\n  Cookies.prototype._emitChange = function (params) {\n    for (var i = 0; i < this.changeListeners.length; ++i) {\n      this.changeListeners[i](params);\n    }\n  };\n\n  Cookies.prototype.get = function (name, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this._updateBrowserValues();\n\n    return readCookie(this.cookies[name], options);\n  };\n\n  Cookies.prototype.getAll = function (options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this._updateBrowserValues();\n\n    var result = {};\n\n    for (var name_1 in this.cookies) {\n      result[name_1] = readCookie(this.cookies[name_1], options);\n    }\n\n    return result;\n  };\n\n  Cookies.prototype.set = function (name, value, options) {\n    var _a;\n\n    if (typeof value === 'object') {\n      value = JSON.stringify(value);\n    }\n\n    this.cookies = objectAssign({}, this.cookies, (_a = {}, _a[name] = value, _a));\n\n    if (this.HAS_DOCUMENT_COOKIE) {\n      document.cookie = cookie.serialize(name, value, options);\n    }\n\n    this._emitChange({\n      name: name,\n      value: value,\n      options: options\n    });\n  };\n\n  Cookies.prototype.remove = function (name, options) {\n    var finalOptions = options = objectAssign({}, options, {\n      expires: new Date(1970, 1, 1, 0, 0, 1),\n      maxAge: 0\n    });\n    this.cookies = objectAssign({}, this.cookies);\n    delete this.cookies[name];\n\n    if (this.HAS_DOCUMENT_COOKIE) {\n      document.cookie = cookie.serialize(name, '', finalOptions);\n    }\n\n    this._emitChange({\n      name: name,\n      value: undefined,\n      options: options\n    });\n  };\n\n  Cookies.prototype.addChangeListener = function (callback) {\n    this.changeListeners.push(callback);\n  };\n\n  Cookies.prototype.removeChangeListener = function (callback) {\n    var idx = this.changeListeners.indexOf(callback);\n\n    if (idx >= 0) {\n      this.changeListeners.splice(idx, 1);\n    }\n  };\n\n  return Cookies;\n}();\n\nexport default Cookies;","map":{"version":3,"sources":["/home/akrem/Desktop/Plateforme-de-gestion-de-carrieres-et-de-formations/frontend/node_modules/universal-cookie/es6/Cookies.js"],"names":["cookie","parseCookies","readCookie","hasDocumentCookie","objectAssign","require","Cookies","cookies","changeListeners","TESTING_ONETWO","HAS_DOCUMENT_COOKIE","prototype","_updateBrowserValues","parse","document","_emitChange","params","i","length","get","name","options","getAll","result","name_1","set","value","_a","JSON","stringify","serialize","remove","finalOptions","expires","Date","maxAge","undefined","addChangeListener","callback","push","removeChangeListener","idx","indexOf","splice"],"mappings":"AAAA,OAAO,KAAKA,MAAZ,MAAwB,QAAxB;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,iBAAnC,QAA4D,SAA5D,C,CACA;AACA;;AACA,IAAIC,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAIC,OAAO;AAAG;AAAe,YAAY;AACrC,WAASA,OAAT,CAAiBC,OAAjB,EAA0B;AACtB,SAAKC,eAAL,GAAuB,EAAvB;AACA,SAAKC,cAAL,GAAsB,CAAtB;AACA,SAAKF,OAAL,GAAeN,YAAY,CAACM,OAAD,CAA3B;AACA,SAAKG,mBAAL,GAA2BP,iBAAiB,EAA5C;AACH;;AACDG,EAAAA,OAAO,CAACK,SAAR,CAAkBC,oBAAlB,GAAyC,YAAY;AACjD,QAAI,CAAC,KAAKF,mBAAV,EAA+B;AAC3B;AACH;;AACD,SAAKH,OAAL,GAAeP,MAAM,CAACa,KAAP,CAAaC,QAAQ,CAACd,MAAtB,CAAf;AACH,GALD;;AAMAM,EAAAA,OAAO,CAACK,SAAR,CAAkBI,WAAlB,GAAgC,UAAUC,MAAV,EAAkB;AAC9C,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKT,eAAL,CAAqBU,MAAzC,EAAiD,EAAED,CAAnD,EAAsD;AAClD,WAAKT,eAAL,CAAqBS,CAArB,EAAwBD,MAAxB;AACH;AACJ,GAJD;;AAKAV,EAAAA,OAAO,CAACK,SAAR,CAAkBQ,GAAlB,GAAwB,UAAUC,IAAV,EAAgBC,OAAhB,EAAyB;AAC7C,QAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,MAAAA,OAAO,GAAG,EAAV;AAAe;;AACzC,SAAKT,oBAAL;;AACA,WAAOV,UAAU,CAAC,KAAKK,OAAL,CAAaa,IAAb,CAAD,EAAqBC,OAArB,CAAjB;AACH,GAJD;;AAKAf,EAAAA,OAAO,CAACK,SAAR,CAAkBW,MAAlB,GAA2B,UAAUD,OAAV,EAAmB;AAC1C,QAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,MAAAA,OAAO,GAAG,EAAV;AAAe;;AACzC,SAAKT,oBAAL;;AACA,QAAIW,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIC,MAAT,IAAmB,KAAKjB,OAAxB,EAAiC;AAC7BgB,MAAAA,MAAM,CAACC,MAAD,CAAN,GAAiBtB,UAAU,CAAC,KAAKK,OAAL,CAAaiB,MAAb,CAAD,EAAuBH,OAAvB,CAA3B;AACH;;AACD,WAAOE,MAAP;AACH,GARD;;AASAjB,EAAAA,OAAO,CAACK,SAAR,CAAkBc,GAAlB,GAAwB,UAAUL,IAAV,EAAgBM,KAAhB,EAAuBL,OAAvB,EAAgC;AACpD,QAAIM,EAAJ;;AACA,QAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B;AAC3BA,MAAAA,KAAK,GAAGE,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAR;AACH;;AACD,SAAKnB,OAAL,GAAeH,YAAY,CAAC,EAAD,EAAK,KAAKG,OAAV,GAAoBoB,EAAE,GAAG,EAAL,EAASA,EAAE,CAACP,IAAD,CAAF,GAAWM,KAApB,EAA2BC,EAA/C,EAA3B;;AACA,QAAI,KAAKjB,mBAAT,EAA8B;AAC1BI,MAAAA,QAAQ,CAACd,MAAT,GAAkBA,MAAM,CAAC8B,SAAP,CAAiBV,IAAjB,EAAuBM,KAAvB,EAA8BL,OAA9B,CAAlB;AACH;;AACD,SAAKN,WAAL,CAAiB;AAAEK,MAAAA,IAAI,EAAEA,IAAR;AAAcM,MAAAA,KAAK,EAAEA,KAArB;AAA4BL,MAAAA,OAAO,EAAEA;AAArC,KAAjB;AACH,GAVD;;AAWAf,EAAAA,OAAO,CAACK,SAAR,CAAkBoB,MAAlB,GAA2B,UAAUX,IAAV,EAAgBC,OAAhB,EAAyB;AAChD,QAAIW,YAAY,GAAIX,OAAO,GAAGjB,YAAY,CAAC,EAAD,EAAKiB,OAAL,EAAc;AACpDY,MAAAA,OAAO,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,CAD2C;AAEpDC,MAAAA,MAAM,EAAE;AAF4C,KAAd,CAA1C;AAIA,SAAK5B,OAAL,GAAeH,YAAY,CAAC,EAAD,EAAK,KAAKG,OAAV,CAA3B;AACA,WAAO,KAAKA,OAAL,CAAaa,IAAb,CAAP;;AACA,QAAI,KAAKV,mBAAT,EAA8B;AAC1BI,MAAAA,QAAQ,CAACd,MAAT,GAAkBA,MAAM,CAAC8B,SAAP,CAAiBV,IAAjB,EAAuB,EAAvB,EAA2BY,YAA3B,CAAlB;AACH;;AACD,SAAKjB,WAAL,CAAiB;AAAEK,MAAAA,IAAI,EAAEA,IAAR;AAAcM,MAAAA,KAAK,EAAEU,SAArB;AAAgCf,MAAAA,OAAO,EAAEA;AAAzC,KAAjB;AACH,GAXD;;AAYAf,EAAAA,OAAO,CAACK,SAAR,CAAkB0B,iBAAlB,GAAsC,UAAUC,QAAV,EAAoB;AACtD,SAAK9B,eAAL,CAAqB+B,IAArB,CAA0BD,QAA1B;AACH,GAFD;;AAGAhC,EAAAA,OAAO,CAACK,SAAR,CAAkB6B,oBAAlB,GAAyC,UAAUF,QAAV,EAAoB;AACzD,QAAIG,GAAG,GAAG,KAAKjC,eAAL,CAAqBkC,OAArB,CAA6BJ,QAA7B,CAAV;;AACA,QAAIG,GAAG,IAAI,CAAX,EAAc;AACV,WAAKjC,eAAL,CAAqBmC,MAArB,CAA4BF,GAA5B,EAAiC,CAAjC;AACH;AACJ,GALD;;AAMA,SAAOnC,OAAP;AACH,CAjE4B,EAA7B;;AAkEA,eAAeA,OAAf","sourcesContent":["import * as cookie from 'cookie';\nimport { parseCookies, readCookie, hasDocumentCookie } from './utils';\n// We can't please Rollup and TypeScript at the same time\n// Only way to make both of them work\nvar objectAssign = require('object-assign');\nvar Cookies = /** @class */ (function () {\n    function Cookies(cookies) {\n        this.changeListeners = [];\n        this.TESTING_ONETWO = 2;\n        this.cookies = parseCookies(cookies);\n        this.HAS_DOCUMENT_COOKIE = hasDocumentCookie();\n    }\n    Cookies.prototype._updateBrowserValues = function () {\n        if (!this.HAS_DOCUMENT_COOKIE) {\n            return;\n        }\n        this.cookies = cookie.parse(document.cookie);\n    };\n    Cookies.prototype._emitChange = function (params) {\n        for (var i = 0; i < this.changeListeners.length; ++i) {\n            this.changeListeners[i](params);\n        }\n    };\n    Cookies.prototype.get = function (name, options) {\n        if (options === void 0) { options = {}; }\n        this._updateBrowserValues();\n        return readCookie(this.cookies[name], options);\n    };\n    Cookies.prototype.getAll = function (options) {\n        if (options === void 0) { options = {}; }\n        this._updateBrowserValues();\n        var result = {};\n        for (var name_1 in this.cookies) {\n            result[name_1] = readCookie(this.cookies[name_1], options);\n        }\n        return result;\n    };\n    Cookies.prototype.set = function (name, value, options) {\n        var _a;\n        if (typeof value === 'object') {\n            value = JSON.stringify(value);\n        }\n        this.cookies = objectAssign({}, this.cookies, (_a = {}, _a[name] = value, _a));\n        if (this.HAS_DOCUMENT_COOKIE) {\n            document.cookie = cookie.serialize(name, value, options);\n        }\n        this._emitChange({ name: name, value: value, options: options });\n    };\n    Cookies.prototype.remove = function (name, options) {\n        var finalOptions = (options = objectAssign({}, options, {\n            expires: new Date(1970, 1, 1, 0, 0, 1),\n            maxAge: 0\n        }));\n        this.cookies = objectAssign({}, this.cookies);\n        delete this.cookies[name];\n        if (this.HAS_DOCUMENT_COOKIE) {\n            document.cookie = cookie.serialize(name, '', finalOptions);\n        }\n        this._emitChange({ name: name, value: undefined, options: options });\n    };\n    Cookies.prototype.addChangeListener = function (callback) {\n        this.changeListeners.push(callback);\n    };\n    Cookies.prototype.removeChangeListener = function (callback) {\n        var idx = this.changeListeners.indexOf(callback);\n        if (idx >= 0) {\n            this.changeListeners.splice(idx, 1);\n        }\n    };\n    return Cookies;\n}());\nexport default Cookies;\n"]},"metadata":{},"sourceType":"module"}