{"ast":null,"code":"var _jsxFileName = \"/home/akrem/Desktop/Plateforme-de-gestion-de-carrieres-et-de-formations/frontend/src/containers/AdminDashboard/Content/UserList.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAllUsers } from \"../../../actions/AuthActions\";\nimport MaterialTable from \"material-table\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { stylesContent } from \"../styles/Styles\";\nimport { tableIcons } from \"../../tableFeatures/tableIcons\";\nimport NavPills from \"../../../components/NavPills/NavPills.js\";\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Schedule from \"@material-ui/icons/Schedule\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nfunction UserList(props) {\n  const dispatch = useDispatch();\n  const authDetail = useSelector(state => state.auth);\n  const [state, setState] = useState({\n    columns: [{\n      title: \"ID\",\n      field: \"id\"\n    }, {\n      title: \"Username\",\n      field: \"username\"\n    }, {\n      title: \"Role\",\n      field: \"roles.map(item=>{  return item.name })\"\n    }, {\n      title: \"Email\",\n      field: \"email\"\n    }, {\n      title: \"Password\",\n      field: \"password\"\n    }],\n    data: []\n  });\n  useEffect(() => {\n    dispatch(getAllUsers()).then(res => {\n      console.log(res.data);\n      if (res) setState({\n        columns: state.columns,\n        data: res.data\n      });\n    });\n  }, []);\n  if (authDetail.loading) return /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 34\n    }\n  });else return /*#__PURE__*/React.createElement(NavPills, {\n    color: \"adminDashboard\",\n    tabs: [{\n      tabButton: \"Users List\",\n      tabIcon: Dashboard,\n      tabContent: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MaterialTable, {\n        title: \"Users List\",\n        columns: state.columns,\n        data: state.data,\n        icons: tableIcons,\n        editable: {\n          onRowAdd: newData => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              setState(prevState => {\n                const data = [...prevState.data];\n                data.push(newData);\n                return { ...prevState,\n                  data\n                };\n              });\n            }, 600);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n\n              if (oldData) {\n                setState(prevState => {\n                  const data = [...prevState.data];\n                  data[data.indexOf(oldData)] = newData;\n                  return { ...prevState,\n                    data\n                  };\n                });\n              }\n            }, 600);\n          }),\n          onRowDelete: oldData => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              setState(prevState => {\n                const data = [...prevState.data];\n                data.splice(data.indexOf(oldData), 1);\n                return { ...prevState,\n                  data\n                };\n              });\n            }, 600);\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }))\n    }, {\n      tabButton: \"Account Settings\",\n      tabIcon: Schedule,\n      tabContent: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }, \"blabla\"))\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  });\n}\n\nUserList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(stylesContent)(UserList);","map":{"version":3,"sources":["/home/akrem/Desktop/Plateforme-de-gestion-de-carrieres-et-de-formations/frontend/src/containers/AdminDashboard/Content/UserList.js"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","getAllUsers","MaterialTable","PropTypes","withStyles","stylesContent","tableIcons","NavPills","Dashboard","Schedule","CircularProgress","UserList","props","dispatch","authDetail","state","auth","setState","columns","title","field","data","then","res","console","log","loading","tabButton","tabIcon","tabContent","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice","propTypes","classes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAllUsers } from \"../../../actions/AuthActions\";\nimport MaterialTable from \"material-table\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { stylesContent } from \"../styles/Styles\";\nimport { tableIcons } from \"../../tableFeatures/tableIcons\";\nimport NavPills from \"../../../components/NavPills/NavPills.js\";\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Schedule from \"@material-ui/icons/Schedule\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nfunction UserList(props) {\n  const dispatch = useDispatch();\n  const authDetail = useSelector((state) => state.auth);\n  const [state, setState] = useState({\n    columns: [\n      { title: \"ID\", field: \"id\" },\n      { title: \"Username\", field: \"username\" },\n      { title: \"Role\", field: \"roles.map(item=>{  return item.name })\" },\n      { title: \"Email\", field: \"email\" },\n      { title: \"Password\", field: \"password\" },\n    ],\n    data: [],\n  });\n  useEffect(() => {\n    dispatch(getAllUsers()).then((res) => {\n      console.log(res.data)\n      if(res)\n      setState(\n        {\n          columns:state.columns,\n          data:res.data\n        }\n      );\n    });\n  }, []);\n  if (authDetail.loading) return <CircularProgress />;\n  else\n    return (\n      <NavPills\n        color=\"adminDashboard\"\n        tabs={[\n          {\n            tabButton: \"Users List\",\n            tabIcon: Dashboard,\n            tabContent: (\n              <>\n                <MaterialTable\n                  title=\"Users List\"\n                  columns={state.columns}\n                  data={state.data}\n                  icons={tableIcons}\n                  editable={{\n                    onRowAdd: (newData) =>\n                      new Promise((resolve) => {\n                        setTimeout(() => {\n                          resolve();\n                          setState((prevState) => {\n                            const data = [...prevState.data];\n                            data.push(newData);\n                            return { ...prevState, data };\n                          });\n                        }, 600);\n                      }),\n                    onRowUpdate: (newData, oldData) =>\n                      new Promise((resolve) => {\n                        setTimeout(() => {\n                          resolve();\n                          if (oldData) {\n                            setState((prevState) => {\n                              const data = [...prevState.data];\n                              data[data.indexOf(oldData)] = newData;\n                              return { ...prevState, data };\n                            });\n                          }\n                        }, 600);\n                      }),\n                    onRowDelete: (oldData) =>\n                      new Promise((resolve) => {\n                        setTimeout(() => {\n                          resolve();\n                          setState((prevState) => {\n                            const data = [...prevState.data];\n                            data.splice(data.indexOf(oldData), 1);\n                            return { ...prevState, data };\n                          });\n                        }, 600);\n                      }),\n                  }}\n                />\n              </>\n            ),\n          },\n          {\n            tabButton: \"Account Settings\",\n            tabIcon: Schedule,\n            tabContent: (\n              <>\n                <h1>blabla</h1>\n              </>\n            ),\n          },\n        ]}\n      />\n    );\n}\n\nUserList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(stylesContent)(UserList);\n"]},"metadata":{},"sourceType":"module"}