{"ast":null,"code":"import apiCall from '../apiCall';\nexport const signUp = dispatch => async user => {\n  try {\n    console.log(user);\n    dispatch({\n      type: 'SIGNUP_USER_LOADING'\n    });\n    const res = await axios.post(\"http://localhost:8081/api/auth/signup\", user);\n    dispatch({\n      type: 'SIGNUP_USER_SUCCESS',\n      payload: res.data\n    });\n    return res;\n  } catch (err) {\n    return dispatch({\n      type: 'SIGNUP_USER_FAILURE',\n      payload: err.response.data\n    });\n  }\n};\nexport const setCurrentUser = dispatch => (Cookies, jwtDecode) => {\n  try {\n    dispatch({\n      type: 'SET_CURRENT_USER_LOADING'\n    });\n    const payload = jwtDecode(Cookies.get('token'));\n    dispatch({\n      type: 'SET_CURRENT_USER_SUCCESS',\n      payload\n    });\n  } catch (err) {\n    dispatch({\n      type: 'SET_CURRENT_USER_FAILURE',\n      payload: err\n    });\n  }\n};\nexport const signIn = dispatch => async user => {\n  try {\n    dispatch({\n      type: 'SIGNIN_USER_LOADING'\n    });\n    const res = await apiCall('/auth/signin', 'post', user);\n    dispatch({\n      type: 'SIGNIN_USER_SUCCESS',\n      payload: res.data\n    });\n    return res;\n  } catch (err) {\n    return dispatch({\n      type: 'SIGNIN_USER_FAILURE',\n      payload: err.response.data\n    });\n  }\n};","map":{"version":3,"sources":["/home/akrem/Desktop/frontend/src/actions/AuthActions.js"],"names":["apiCall","signUp","dispatch","user","console","log","type","res","axios","post","payload","data","err","response","setCurrentUser","Cookies","jwtDecode","get","signIn"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,YAApB;AAEA,OAAO,MAAMC,MAAM,GAAIC,QAAD,IAAc,MAAOC,IAAP,IAAgB;AAClD,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAD,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,UAAMC,GAAG,GAAI,MAAMC,KAAK,CAACC,IAAN,CAAW,uCAAX,EAAmDN,IAAnD,CAAnB;AACAD,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,qBAAR;AAA+BI,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAA5C,KAAD,CAAR;AACA,WAAOJ,GAAP;AACD,GAND,CAME,OAAOK,GAAP,EAAY;AACZ,WAAOV,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,qBAAR;AAA+BI,MAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF;AAArD,KAAD,CAAf;AACD;AACF,CAVM;AAYP,OAAO,MAAMG,cAAc,GAAIZ,QAAD,IAAc,CAACa,OAAD,EAAUC,SAAV,KAAwB;AAClE,MAAI;AACFd,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,UAAMI,OAAO,GAAGM,SAAS,CAACD,OAAO,CAACE,GAAR,CAAY,OAAZ,CAAD,CAAzB;AACAf,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,0BAAR;AAAoCI,MAAAA;AAApC,KAAD,CAAR;AACD,GAJD,CAIE,OAAOE,GAAP,EAAY;AACZV,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,0BAAR;AAAoCI,MAAAA,OAAO,EAAEE;AAA7C,KAAD,CAAR;AACD;AACF,CARM;AAUP,OAAO,MAAMM,MAAM,GAAIhB,QAAD,IAAc,MAAOC,IAAP,IAAgB;AAClD,MAAI;AACFD,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,UAAMC,GAAG,GAAG,MAAMP,OAAO,CAAC,cAAD,EAAiB,MAAjB,EAAyBG,IAAzB,CAAzB;AACAD,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,qBAAR;AAA+BI,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAA5C,KAAD,CAAR;AACA,WAAOJ,GAAP;AACD,GALD,CAKE,OAAOK,GAAP,EAAY;AACZ,WAAOV,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,qBAAR;AAA+BI,MAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF;AAArD,KAAD,CAAf;AACD;AACF,CATM","sourcesContent":["import apiCall from '../apiCall';\n\nexport const signUp = (dispatch) => async (user) => {\n  try {\n    console.log(user)\n    dispatch({ type: 'SIGNUP_USER_LOADING' });\n    const res =  await axios.post(\"http://localhost:8081/api/auth/signup\",user);\n    dispatch({ type: 'SIGNUP_USER_SUCCESS', payload: res.data });\n    return res;\n  } catch (err) {\n    return dispatch({ type: 'SIGNUP_USER_FAILURE', payload: err.response.data });\n  }\n};\n\nexport const setCurrentUser = (dispatch) => (Cookies, jwtDecode) => {\n  try {\n    dispatch({ type: 'SET_CURRENT_USER_LOADING' });\n    const payload = jwtDecode(Cookies.get('token'));\n    dispatch({ type: 'SET_CURRENT_USER_SUCCESS', payload });\n  } catch (err) {\n    dispatch({ type: 'SET_CURRENT_USER_FAILURE', payload: err })\n  }\n}\n\nexport const signIn = (dispatch) => async (user) => {\n  try {\n    dispatch({ type: 'SIGNIN_USER_LOADING' });\n    const res = await apiCall('/auth/signin', 'post', user);\n    dispatch({ type: 'SIGNIN_USER_SUCCESS', payload: res.data });\n    return res;\n  } catch (err) {\n    return dispatch({ type: 'SIGNIN_USER_FAILURE', payload: err.response.data })\n  }\n};\n"]},"metadata":{},"sourceType":"module"}