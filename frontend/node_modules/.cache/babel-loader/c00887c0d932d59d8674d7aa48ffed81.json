{"ast":null,"code":"var _jsxFileName = \"/home/akrem/Desktop/Plateforme-de-gestion-de-carrieres-et-de-formations/frontend/src/containers/AdminDashboard/Content/UserList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAllUsers } from \"../../../actions/AuthActions\";\nimport MaterialTable from \"material-table\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { stylesContent } from \"../styles/Styles\";\nimport { tableIcons } from \"../../tableFeatures/tableIcons\";\nimport NavPills from \"../../../components/NavPills/NavPills.js\";\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Schedule from \"@material-ui/icons/Schedule\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport Check from \"@material-ui/icons/Check\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SnackbarContent from \"../../../components/Snackbar/SnackbarContent.js\";\nimport { signUp } from \"../../../actions/AuthActions\";\n\nconst addUser = newData => {\n  setEmpty(null);\n  setAddSuccess(null);\n  setAlert(null);\n  setRoleErr(null);\n\n  if (!newData.username || !newData.email || !newData.password || !newData.roles) {\n    console.log(\"empty\");\n    setEmpty( /*#__PURE__*/React.createElement(SnackbarContent, {\n      message: /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, \"WARNING ALERT:\"), \" Empty field(s)...\"),\n      close: true,\n      color: \"warning\",\n      icon: Warning,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }));\n  } else if (![\"admin\", \"candidat\", \"mentor\", \"instructor\"].includes(newData.roles[0].name)) {\n    console.log(\"Unknown role\");\n    setRoleErr( /*#__PURE__*/React.createElement(SnackbarContent, {\n      message: /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, \"ERROR ALERT:\"), \" Unknown role ([\\\"admin\\\",\\\"candidat\\\",\\\"mentor\\\",\\\"instructor\\\"])...\"),\n      close: true,\n      color: \"warning\",\n      icon: Warning,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }));\n  } else {\n    console.log(\"gonna add\");\n    let username = newData.username;\n    let email = newData.email;\n    let password = newData.password;\n    let roles = [newData.roles[0].name];\n    console.log(username, email, password, roles);\n    dispatch(signUp({\n      username,\n      email,\n      password,\n      roles\n    })).then(res => {\n      setAddSuccess( /*#__PURE__*/React.createElement(SnackbarContent, {\n        message: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }\n        }, \"SUCCESS ALERT:\"), \" User Added...\"),\n        close: true,\n        color: \"success\",\n        icon: Check,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }));\n    }).catch(err => {\n      setAlert( /*#__PURE__*/React.createElement(SnackbarContent, {\n        message: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }\n        }, \"WARNING ALERT:\"), \" Server ERROR...\"),\n        close: true,\n        color: \"warning\",\n        icon: Warning,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }));\n    });\n  }\n};\n\nfunction UserList(props) {\n  const dispatch = useDispatch();\n  const authDetail = useSelector(state => state.auth);\n  const [alert, setAlert] = useState(null);\n  const [empty, setEmpty] = useState(null);\n  const [roleErr, setRoleErr] = useState(null);\n  const [addSuccess, setAddSuccess] = useState(null);\n  const [state, setState] = useState({\n    columns: [{\n      title: \"ID\",\n      field: \"id\"\n    }, {\n      title: \"Username\",\n      field: \"username\"\n    }, {\n      title: \"Role\",\n      field: \"roles[0].name\"\n    }, {\n      title: \"Email\",\n      field: \"email\"\n    }, {\n      title: \"Password\",\n      field: \"password\"\n    }],\n    data: []\n  });\n  useEffect(() => {\n    dispatch(getAllUsers()).then(res => {\n      console.log(res.data);\n      if (res) setState({\n        columns: state.columns,\n        data: res.data\n      });\n      setAlert(null);\n    }).catch(err => {\n      setAlert( /*#__PURE__*/React.createElement(SnackbarContent, {\n        message: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }\n        }, \"WARNING ALERT:\"), \" Could not reach data... Refresh Page...\"),\n        close: true,\n        color: \"warning\",\n        icon: Warning,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }\n      }));\n    });\n  }, [dispatch]);\n  if (authDetail.loading) return /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 34\n    }\n  });else return /*#__PURE__*/React.createElement(React.Fragment, null, alert, empty, roleErr, addSuccess, /*#__PURE__*/React.createElement(NavPills, {\n    color: \"adminDashboard\",\n    tabs: [{\n      tabButton: \"Users List\",\n      tabIcon: Dashboard,\n      tabContent: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MaterialTable, {\n        title: \"Users List\",\n        columns: state.columns,\n        data: state.data,\n        icons: tableIcons,\n        editable: {\n          onRowAdd: newData => new Promise(resolve => {\n            resolve();\n            addUser(newData);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n\n              if (oldData) {\n                setState(prevState => {\n                  const data = [...prevState.data];\n                  data[data.indexOf(oldData)] = newData;\n                  return { ...prevState,\n                    data\n                  };\n                });\n              }\n            }, 600);\n          }),\n          onRowDelete: oldData => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              setState(prevState => {\n                const data = [...prevState.data];\n                data.splice(data.indexOf(oldData), 1);\n                return { ...prevState,\n                  data\n                };\n              });\n            }, 600);\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 19\n        }\n      }))\n    }, {\n      tabButton: \"Account Settings\",\n      tabIcon: Schedule,\n      tabContent: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 19\n        }\n      }, \"blabla\"))\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }));\n}\n\nUserList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(stylesContent)(UserList);","map":{"version":3,"sources":["/home/akrem/Desktop/Plateforme-de-gestion-de-carrieres-et-de-formations/frontend/src/containers/AdminDashboard/Content/UserList.js"],"names":["React","useState","useEffect","useSelector","useDispatch","getAllUsers","MaterialTable","PropTypes","withStyles","stylesContent","tableIcons","NavPills","Dashboard","Schedule","Warning","Check","CircularProgress","SnackbarContent","signUp","addUser","newData","setEmpty","setAddSuccess","setAlert","setRoleErr","username","email","password","roles","console","log","includes","name","dispatch","then","res","catch","err","UserList","props","authDetail","state","auth","alert","empty","roleErr","addSuccess","setState","columns","title","field","data","loading","tabButton","tabIcon","tabContent","onRowAdd","Promise","resolve","onRowUpdate","oldData","setTimeout","prevState","indexOf","onRowDelete","splice","propTypes","classes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAllUsers } from \"../../../actions/AuthActions\";\nimport MaterialTable from \"material-table\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { stylesContent } from \"../styles/Styles\";\nimport { tableIcons } from \"../../tableFeatures/tableIcons\";\nimport NavPills from \"../../../components/NavPills/NavPills.js\";\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Schedule from \"@material-ui/icons/Schedule\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport Check from \"@material-ui/icons/Check\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SnackbarContent from \"../../../components/Snackbar/SnackbarContent.js\";\nimport { signUp } from \"../../../actions/AuthActions\";\nconst addUser = (newData) => {\n  setEmpty(null);\n  setAddSuccess(null);\n  setAlert(null);\n  setRoleErr(null);\n  if (\n    !newData.username ||\n    !newData.email ||\n    !newData.password ||\n    !newData.roles\n  ) {\n    console.log(\"empty\");\n    setEmpty(\n      <SnackbarContent\n        message={\n          <span>\n            <b>WARNING ALERT:</b> Empty field(s)...\n          </span>\n        }\n        close\n        color=\"warning\"\n        icon={Warning}\n      />\n    );\n  } else if (\n    ![\"admin\", \"candidat\", \"mentor\", \"instructor\"].includes(\n      newData.roles[0].name\n    )\n  ) {\n    console.log(\"Unknown role\");\n\n    setRoleErr(\n      <SnackbarContent\n        message={\n          <span>\n            <b>ERROR ALERT:</b> Unknown role\n            ([\"admin\",\"candidat\",\"mentor\",\"instructor\"])...\n          </span>\n        }\n        close\n        color=\"warning\"\n        icon={Warning}\n      />\n    );\n  } else {\n    console.log(\"gonna add\");\n\n    let username = newData.username;\n    let email = newData.email;\n    let password = newData.password;\n    let roles = [newData.roles[0].name];\n    console.log(username, email, password, roles);\n    dispatch(signUp({ username, email, password, roles }))\n      .then((res) => {\n        setAddSuccess(\n          <SnackbarContent\n            message={\n              <span>\n                <b>SUCCESS ALERT:</b> User Added...\n              </span>\n            }\n            close\n            color=\"success\"\n            icon={Check}\n          />\n        );\n      })\n      .catch((err) => {\n        setAlert(\n          <SnackbarContent\n            message={\n              <span>\n                <b>WARNING ALERT:</b> Server ERROR...\n              </span>\n            }\n            close\n            color=\"warning\"\n            icon={Warning}\n          />\n        );\n      });\n  }\n};\nfunction UserList(props) {\n  const dispatch = useDispatch();\n  const authDetail = useSelector((state) => state.auth);\n  const [alert, setAlert] = useState(null);\n  const [empty, setEmpty] = useState(null);\n  const [roleErr, setRoleErr] = useState(null);\n  const [addSuccess, setAddSuccess] = useState(null);\n\n  const [state, setState] = useState({\n    columns: [\n      { title: \"ID\", field: \"id\" },\n      { title: \"Username\", field: \"username\" },\n      { title: \"Role\", field: \"roles[0].name\" },\n      { title: \"Email\", field: \"email\" },\n      { title: \"Password\", field: \"password\" },\n    ],\n    data: [],\n  });\n  useEffect(() => {\n    dispatch(getAllUsers())\n      .then((res) => {\n        console.log(res.data);\n        if (res)\n          setState({\n            columns: state.columns,\n            data: res.data,\n          });\n        setAlert(null);\n      })\n      .catch((err) => {\n        setAlert(\n          <SnackbarContent\n            message={\n              <span>\n                <b>WARNING ALERT:</b> Could not reach data... Refresh Page...\n              </span>\n            }\n            close\n            color=\"warning\"\n            icon={Warning}\n          />\n        );\n      });\n  }, [dispatch]);\n  if (authDetail.loading) return <CircularProgress />;\n  else\n    return (\n      <>\n        {alert}\n        {empty}\n        {roleErr}\n        {addSuccess}\n        <NavPills\n          color=\"adminDashboard\"\n          tabs={[\n            {\n              tabButton: \"Users List\",\n              tabIcon: Dashboard,\n              tabContent: (\n                <>\n                  <MaterialTable\n                    title=\"Users List\"\n                    columns={state.columns}\n                    data={state.data}\n                    icons={tableIcons}\n                    editable={{\n                      onRowAdd: (newData) =>\n                        new Promise((resolve) => {\n                          resolve();\n                          addUser(newData);\n                        }),\n                      onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve) => {\n                          setTimeout(() => {\n                            resolve();\n                            if (oldData) {\n                              setState((prevState) => {\n                                const data = [...prevState.data];\n                                data[data.indexOf(oldData)] = newData;\n                                return { ...prevState, data };\n                              });\n                            }\n                          }, 600);\n                        }),\n                      onRowDelete: (oldData) =>\n                        new Promise((resolve) => {\n                          setTimeout(() => {\n                            resolve();\n                            setState((prevState) => {\n                              const data = [...prevState.data];\n                              data.splice(data.indexOf(oldData), 1);\n                              return { ...prevState, data };\n                            });\n                          }, 600);\n                        }),\n                    }}\n                  />\n                </>\n              ),\n            },\n            {\n              tabButton: \"Account Settings\",\n              tabIcon: Schedule,\n              tabContent: (\n                <>\n                  <h1>blabla</h1>\n                </>\n              ),\n            },\n          ]}\n        />\n      </>\n    );\n}\n\nUserList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(stylesContent)(UserList);\n"]},"metadata":{},"sourceType":"module"}