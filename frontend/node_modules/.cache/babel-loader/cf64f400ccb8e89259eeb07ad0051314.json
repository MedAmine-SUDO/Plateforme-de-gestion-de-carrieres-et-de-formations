{"ast":null,"code":"var _jsxFileName = \"/home/akrem/Desktop/Plateforme-de-gestion-de-carrieres-et-de-formations/frontend/src/containers/AdminDashboard/Content/UserList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAllUsers } from \"../../../actions/AuthActions\";\nimport MaterialTable from \"material-table\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { stylesContent } from \"../styles/Styles\";\nimport { tableIcons } from \"../../tableFeatures/tableIcons\";\nimport NavPills from \"../../../components/NavPills/NavPills.js\";\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Schedule from \"@material-ui/icons/Schedule\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport Check from \"@material-ui/icons/Check\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SnackbarContent from \"../../../components/Snackbar/SnackbarContent.js\";\nimport { signUp } from \"../../../actions/AuthActions\";\n\nfunction UserList(props) {\n  const dispatch = useDispatch();\n  const authDetail = useSelector(state => state.auth);\n  const [alert, setAlert] = useState(null);\n  const [state, setState] = useState({\n    columns: [{\n      title: \"ID\",\n      field: \"id\"\n    }, {\n      title: \"Username\",\n      field: \"username\"\n    }, {\n      title: \"Role\",\n      field: \"roles[0].name\"\n    }, {\n      title: \"Email\",\n      field: \"email\"\n    }, {\n      title: \"Password\",\n      field: \"password\"\n    }],\n    data: []\n  });\n  useEffect(() => {\n    dispatch(getAllUsers()).then(res => {\n      console.log(res.data);\n      if (res) setState({\n        columns: state.columns,\n        data: res.data\n      });\n      setAlert(null);\n    }).catch(err => {\n      setAlert( /*#__PURE__*/React.createElement(SnackbarContent, {\n        message: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }\n        }, \"WARNING ALERT:\"), \" Could not reach data... Refresh Page...\"),\n        close: true,\n        color: \"warning\",\n        icon: Warning,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }));\n    });\n  }, [dispatch]);\n  if (authDetail.loading) return /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 34\n    }\n  });else return /*#__PURE__*/React.createElement(React.Fragment, null, alert, /*#__PURE__*/React.createElement(NavPills, {\n    color: \"adminDashboard\",\n    tabs: [{\n      tabButton: \"Users List\",\n      tabIcon: Dashboard,\n      tabContent: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MaterialTable, {\n        title: \"Users List\",\n        columns: state.columns,\n        data: state.data,\n        icons: tableIcons,\n        editable: {\n          onRowAdd: newData => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n\n              if (!newData.username && !newData.email && !newData.password && !newData.roles) {\n                console.log(\"empty\");\n                setAlert( /*#__PURE__*/React.createElement(SnackbarContent, {\n                  message: /*#__PURE__*/React.createElement(\"span\", {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 37\n                    }\n                  }, /*#__PURE__*/React.createElement(\"b\", {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 39\n                    }\n                  }, \"WARNING ALERT:\"), \" Empty field(s)...\"),\n                  close: true,\n                  color: \"warning\",\n                  icon: Warning,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 33\n                  }\n                }));\n              } else if (!newData.roles[0] in [\"admin\", \"candidat\", \"mentor\", \"instructor\"]) {\n                console.log(\"Unknown role\");\n                setAlert( /*#__PURE__*/React.createElement(SnackbarContent, {\n                  message: /*#__PURE__*/React.createElement(\"span\", {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 37\n                    }\n                  }, /*#__PURE__*/React.createElement(\"b\", {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 39\n                    }\n                  }, \"ERROR ALERT:\"), \" Unknown role ([\\\"admin\\\",\\\"candidat\\\",\\\"mentor\\\",\\\"instructor\\\"])...\"),\n                  close: true,\n                  color: \"waring\",\n                  icon: Warning,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 33\n                  }\n                }));\n              } else {\n                console.log(\"gonna add\");\n                let username = newData.username;\n                let email = newData.email;\n                let password = newData.password;\n                let roles = newData.roles;\n                dispatch(signUp({\n                  username,\n                  email,\n                  password,\n                  roles\n                })).then(res => {\n                  setAlert( /*#__PURE__*/React.createElement(SnackbarContent, {\n                    message: /*#__PURE__*/React.createElement(\"span\", {\n                      __self: this,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 133,\n                        columnNumber: 41\n                      }\n                    }, /*#__PURE__*/React.createElement(\"b\", {\n                      __self: this,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 134,\n                        columnNumber: 43\n                      }\n                    }, \"SUCCESS ALERT:\"), \" User Added...\"),\n                    close: true,\n                    color: \"success\",\n                    icon: Check,\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 37\n                    }\n                  }));\n                }).catch(err => {\n                  setAlert( /*#__PURE__*/React.createElement(SnackbarContent, {\n                    message: /*#__PURE__*/React.createElement(\"span\", {\n                      __self: this,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 147,\n                        columnNumber: 41\n                      }\n                    }, /*#__PURE__*/React.createElement(\"b\", {\n                      __self: this,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 148,\n                        columnNumber: 43\n                      }\n                    }, \"WARNING ALERT:\"), \" Server ERROR...\"),\n                    close: true,\n                    color: \"warning\",\n                    icon: Warning,\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 145,\n                      columnNumber: 37\n                    }\n                  }));\n                });\n              }\n            }, 600);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n\n              if (oldData) {\n                setState(prevState => {\n                  const data = [...prevState.data];\n                  data[data.indexOf(oldData)] = newData;\n                  return { ...prevState,\n                    data\n                  };\n                });\n              }\n            }, 600);\n          }),\n          onRowDelete: oldData => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              setState(prevState => {\n                const data = [...prevState.data];\n                data.splice(data.indexOf(oldData), 1);\n                return { ...prevState,\n                  data\n                };\n              });\n            }, 600);\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 19\n        }\n      }))\n    }, {\n      tabButton: \"Account Settings\",\n      tabIcon: Schedule,\n      tabContent: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 19\n        }\n      }, \"blabla\"))\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }));\n}\n\nUserList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(stylesContent)(UserList);","map":{"version":3,"sources":["/home/akrem/Desktop/Plateforme-de-gestion-de-carrieres-et-de-formations/frontend/src/containers/AdminDashboard/Content/UserList.js"],"names":["React","useState","useEffect","useSelector","useDispatch","getAllUsers","MaterialTable","PropTypes","withStyles","stylesContent","tableIcons","NavPills","Dashboard","Schedule","Warning","Check","CircularProgress","SnackbarContent","signUp","UserList","props","dispatch","authDetail","state","auth","alert","setAlert","setState","columns","title","field","data","then","res","console","log","catch","err","loading","tabButton","tabIcon","tabContent","onRowAdd","newData","Promise","resolve","setTimeout","username","email","password","roles","onRowUpdate","oldData","prevState","indexOf","onRowDelete","splice","propTypes","classes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAllUsers } from \"../../../actions/AuthActions\";\nimport MaterialTable from \"material-table\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { stylesContent } from \"../styles/Styles\";\nimport { tableIcons } from \"../../tableFeatures/tableIcons\";\nimport NavPills from \"../../../components/NavPills/NavPills.js\";\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Schedule from \"@material-ui/icons/Schedule\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport Check from \"@material-ui/icons/Check\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SnackbarContent from \"../../../components/Snackbar/SnackbarContent.js\";\nimport { signUp } from \"../../../actions/AuthActions\";\n\nfunction UserList(props) {\n  const dispatch = useDispatch();\n  const authDetail = useSelector((state) => state.auth);\n  const [alert, setAlert] = useState(null);\n  const [state, setState] = useState({\n    columns: [\n      { title: \"ID\", field: \"id\" },\n      { title: \"Username\", field: \"username\" },\n      { title: \"Role\", field: \"roles[0].name\" },\n      { title: \"Email\", field: \"email\" },\n      { title: \"Password\", field: \"password\" },\n    ],\n    data: [],\n  });\n  useEffect(() => {\n    dispatch(getAllUsers())\n      .then((res) => {\n        console.log(res.data);\n        if (res)\n          setState({\n            columns: state.columns,\n            data: res.data,\n          });\n        setAlert(null);\n      })\n      .catch((err) => {\n        setAlert(\n          <SnackbarContent\n            message={\n              <span>\n                <b>WARNING ALERT:</b> Could not reach data... Refresh Page...\n              </span>\n            }\n            close\n            color=\"warning\"\n            icon={Warning}\n          />\n        );\n      });\n  }, [dispatch]);\n  if (authDetail.loading) return <CircularProgress />;\n  else\n    return (\n      <>\n        {alert}\n        <NavPills\n          color=\"adminDashboard\"\n          tabs={[\n            {\n              tabButton: \"Users List\",\n              tabIcon: Dashboard,\n              tabContent: (\n                <>\n                  <MaterialTable\n                    title=\"Users List\"\n                    columns={state.columns}\n                    data={state.data}\n                    icons={tableIcons}\n                    editable={{\n                      onRowAdd: (newData) =>\n                        new Promise((resolve) => {\n                          setTimeout(() => {\n                            resolve();\n                            if (\n                              !newData.username &&\n                              !newData.email &&\n                              !newData.password &&\n                              !newData.roles\n                            ) {\n                              console.log(\"empty\");\n                              setAlert(\n                                <SnackbarContent\n                                  message={\n                                    <span>\n                                      <b>WARNING ALERT:</b> Empty field(s)...\n                                    </span>\n                                  }\n                                  close\n                                  color=\"warning\"\n                                  icon={Warning}\n                                />\n                              );\n                            } else if (\n                              !newData.roles[0] in\n                              [\"admin\", \"candidat\", \"mentor\", \"instructor\"]\n                            ) {\n                              console.log(\"Unknown role\");\n\n                              setAlert(\n                                <SnackbarContent\n                                  message={\n                                    <span>\n                                      <b>ERROR ALERT:</b> Unknown role\n                                      ([\"admin\",\"candidat\",\"mentor\",\"instructor\"])...\n                                    </span>\n                                  }\n                                  close\n                                  color=\"waring\"\n                                  icon={Warning}\n                                />\n                              );\n                            } else {\n                              console.log(\"gonna add\");\n\n                              let username = newData.username;\n                              let email = newData.email;\n                              let password = newData.password;\n                              let roles = newData.roles;\n                              dispatch(\n                                signUp({ username, email, password, roles })\n                              )\n                                .then((res) => {\n                                  setAlert(\n                                    <SnackbarContent\n                                      message={\n                                        <span>\n                                          <b>SUCCESS ALERT:</b> User Added...\n                                        </span>\n                                      }\n                                      close\n                                      color=\"success\"\n                                      icon={Check}\n                                    />\n                                  );\n                                })\n                                .catch((err) => {\n                                  setAlert(\n                                    <SnackbarContent\n                                      message={\n                                        <span>\n                                          <b>WARNING ALERT:</b> Server ERROR...\n                                        </span>\n                                      }\n                                      close\n                                      color=\"warning\"\n                                      icon={Warning}\n                                    />\n                                  );\n                                });\n                            }\n                          }, 600);\n                        }),\n                      onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve) => {\n                          setTimeout(() => {\n                            resolve();\n                            if (oldData) {\n                              setState((prevState) => {\n                                const data = [...prevState.data];\n                                data[data.indexOf(oldData)] = newData;\n                                return { ...prevState, data };\n                              });\n                            }\n                          }, 600);\n                        }),\n                      onRowDelete: (oldData) =>\n                        new Promise((resolve) => {\n                          setTimeout(() => {\n                            resolve();\n                            setState((prevState) => {\n                              const data = [...prevState.data];\n                              data.splice(data.indexOf(oldData), 1);\n                              return { ...prevState, data };\n                            });\n                          }, 600);\n                        }),\n                    }}\n                  />\n                </>\n              ),\n            },\n            {\n              tabButton: \"Account Settings\",\n              tabIcon: Schedule,\n              tabContent: (\n                <>\n                  <h1>blabla</h1>\n                </>\n              ),\n            },\n          ]}\n        />\n      </>\n    );\n}\n\nUserList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(stylesContent)(UserList);\n"]},"metadata":{},"sourceType":"module"}