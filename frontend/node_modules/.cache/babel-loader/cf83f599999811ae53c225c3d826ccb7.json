{"ast":null,"code":"var _jsxFileName = \"/home/medamine/Desktop/Plateforme-de-gestion-de-carrieres-et-de-formations/frontend/src/containers/AdminDashboard/Content/TestList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { stylesContent } from \"../styles/Styles\";\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nconst useStyles = makeStyles(() => ({\n  div: {\n    color: \"black\",\n    fontFamily: \"Helvetica\",\n    fontSize: \"40px\",\n    textAlign: \"center\",\n    position: \"absolute\",\n    top: \"50%\"\n  }\n}));\n\nfunction TestList(props) {\n  const classes = useStyles();\n  const [state] = React.useState({\n    hover: false\n  });\n\n  const toggleHover = () => {\n    this.setState({\n      hover: !this.state.hover\n    });\n  };\n\n  let linkStyle;\n\n  if (this.state.hover) {\n    linkStyle = {\n      backgroundColor: 'red'\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"div\",\n    style: {\n      backgroundColor: '#cfe8fc',\n      height: '100vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.div,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"Test de niveau\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: ({\n      backgroundColor: '#f5f5f5',\n      height: '100vh'\n    }, {\n      linkStyle\n    }),\n    onMouseOver: this.toggleHover,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.div,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Test de profile d'apprentissage\"))));\n}\n\nTestList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(stylesContent)(TestList);","map":{"version":3,"sources":["/home/medamine/Desktop/Plateforme-de-gestion-de-carrieres-et-de-formations/frontend/src/containers/AdminDashboard/Content/TestList.js"],"names":["React","PropTypes","withStyles","makeStyles","stylesContent","Typography","Grid","useStyles","div","color","fontFamily","fontSize","textAlign","position","top","TestList","props","classes","state","useState","hover","toggleHover","setState","linkStyle","backgroundColor","height","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,0BAAvC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAC,OAAO;AAClCK,EAAAA,GAAG,EAAE;AACHC,IAAAA,KAAK,EAAE,OADJ;AAEHC,IAAAA,UAAU,EAAE,WAFT;AAGHC,IAAAA,QAAQ,EAAE,MAHP;AAIHC,IAAAA,SAAS,EAAE,QAJR;AAKHC,IAAAA,QAAQ,EAAE,UALP;AAMHC,IAAAA,GAAG,EAAE;AANF;AAD6B,CAAP,CAAD,CAA5B;;AAaA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AACA,QAAM,CAACW,KAAD,IAAUlB,KAAK,CAACmB,QAAN,CAAe;AAC7BC,IAAAA,KAAK,EAAE;AADsB,GAAf,CAAhB;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACxB,SAAKC,QAAL,CAAc;AAAEF,MAAAA,KAAK,EAAE,CAAC,KAAKF,KAAL,CAAWE;AAArB,KAAd;AACD,GAFD;;AAIA,MAAIG,SAAJ;;AACA,MAAI,KAAKL,KAAL,CAAWE,KAAf,EAAsB;AACpBG,IAAAA,SAAS,GAAG;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAAZ;AACD;;AAED,sBAEE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,KAAtB;AAA4B,IAAA,KAAK,EAAE;AAAEA,MAAAA,eAAe,EAAE,SAAnB;AAA8BC,MAAAA,MAAM,EAAE;AAAtC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAER,OAAO,CAACT,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,CADF,eASE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,GAAE;AAAEgB,MAAAA,eAAe,EAAE,SAAnB;AAA8BC,MAAAA,MAAM,EAAE;AAAtC,OAAiD;AAAEF,MAAAA;AAAF,KAAnD,CAAjB;AAAmF,IAAA,WAAW,EAAE,KAAKF,WAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACT,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,CADF,CATF,CAFF;AAwBD;;AAEDO,QAAQ,CAACW,SAAT,GAAqB;AACnBT,EAAAA,OAAO,EAAEhB,SAAS,CAAC0B,MAAV,CAAiBC;AADP,CAArB;AAIA,eAAe1B,UAAU,CAACE,aAAD,CAAV,CAA0BW,QAA1B,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { stylesContent } from \"../styles/Styles\"\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles(() => ({\n  div: {\n    color: \"black\",\n    fontFamily: \"Helvetica\",\n    fontSize: \"40px\",\n    textAlign: \"center\",\n    position: \"absolute\",\n    top: \"50%\"\n  }\n\n\n}));\n\nfunction TestList(props) {\n  const classes = useStyles();\n  const [state] = React.useState({\n    hover: false\n  })\n\n  const toggleHover = () => {\n    this.setState({ hover: !this.state.hover })\n  };\n\n  let linkStyle;\n  if (this.state.hover) {\n    linkStyle = { backgroundColor: 'red' }\n  }\n\n  return (\n\n    <Grid container >\n      <Grid item xs={6}>\n        <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', height: '100vh' }}>\n          <div className={classes.div}>\n            Test de niveau\n          </div>\n        </Typography>\n      </Grid>\n\n      <Grid item xs={6}>\n        <Typography style={{ backgroundColor: '#f5f5f5', height: '100vh' }, { linkStyle }} onMouseOver={this.toggleHover}>\n          <div className={classes.div}>\n            Test de profile d'apprentissage\n          </div>\n        </Typography>\n      </Grid>\n\n      {/* <TestPage /> */}\n\n    </Grid>\n\n  );\n}\n\nTestList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(stylesContent)(TestList);\n"]},"metadata":{},"sourceType":"module"}