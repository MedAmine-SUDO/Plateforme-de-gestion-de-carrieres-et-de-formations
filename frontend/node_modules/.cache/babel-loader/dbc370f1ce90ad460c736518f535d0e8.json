{"ast":null,"code":"var _jsxFileName = \"/home/medamine/Desktop/Plateforme-de-gestion-de-carrieres-et-de-formations/frontend/src/containers/AdminDashboard/Content/UserList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAllUsers, signUp, deleteUser } from \"../../../actions/AuthActions\";\nimport MaterialTable from \"material-table\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { stylesContent } from \"../styles/Styles\";\nimport { tableIcons } from \"../../tableFeatures/tableIcons\";\nimport NavPills from \"../../../components/NavPills/NavPills.js\";\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Schedule from \"@material-ui/icons/Schedule\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport Check from \"@material-ui/icons/Check\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SnackbarContent from \"../../../components/Snackbar/SnackbarContent.js\";\n\nfunction UserList() {\n  const dispatch = useDispatch();\n  const authDetail = useSelector(state => state.auth);\n  const [alert, setAlert] = useState(null);\n  const [alertAdd, setalertAdd] = useState(null);\n  const [alertDelete, setalertDelete] = useState(null);\n  const [state, setState] = useState({\n    columns: [{\n      title: \"ID\",\n      field: \"id\"\n    }, {\n      title: \"Username\",\n      field: \"username\"\n    }, {\n      title: \"Role\",\n      field: \"roles[0].name\"\n    }, {\n      title: \"Email\",\n      field: \"email\"\n    }, {\n      title: \"Password\",\n      field: \"password\"\n    }],\n    data: []\n  });\n  useEffect(() => {\n    dispatch(getAllUsers()).then(res => {\n      if (res) {\n        setState({\n          columns: state.columns,\n          data: res.data\n        });\n        setAlert(null);\n      } else setAlert( /*#__PURE__*/React.createElement(SnackbarContent, {\n        message: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }\n        }, \"WARNING ALERT:\"), \" Could not reach data... Refresh Page...\"),\n        close: true,\n        color: \"warning\",\n        icon: Warning,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }));\n    });\n  }, [dispatch, state.columns]);\n\n  const addUser = newData => {\n    setAlert(null);\n    setalertDelete(null);\n\n    if (!newData.username || !newData.email || !newData.password || !newData.roles) {\n      setalertAdd( /*#__PURE__*/React.createElement(SnackbarContent, {\n        message: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }\n        }, \"WARNING ALERT:\"), \" Empty field(s)...\"),\n        close: true,\n        color: \"warning\",\n        icon: Warning,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }));\n    } else if (![\"admin\", \"candidat\", \"mentor\", \"instructor\"].includes(newData.roles[0].name)) {\n      setalertAdd( /*#__PURE__*/React.createElement(SnackbarContent, {\n        message: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }\n        }, \"ERROR ALERT:\"), \" Unknown role ([\\\"admin\\\",\\\"candidat\\\",\\\"mentor\\\",\\\"instructor\\\"])...\"),\n        close: true,\n        color: \"warning\",\n        icon: Warning,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }));\n    } else {\n      let username = newData.username;\n      let email = newData.email;\n      let password = newData.password;\n      let roles = [newData.roles[0].name];\n      dispatch(signUp({\n        username,\n        email,\n        password,\n        roles\n      })).then(res => {\n        if (res.type === \"SIGNUP_USER_FAILURE\") setalertAdd( /*#__PURE__*/React.createElement(SnackbarContent, {\n          message: /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"b\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }\n          }, \"WARNING ALERT:\"), \" Bad Request...\"),\n          close: true,\n          color: \"warning\",\n          icon: Warning,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }\n        }));else setalertAdd( /*#__PURE__*/React.createElement(SnackbarContent, {\n          message: /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"b\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 21\n            }\n          }, \"SUCCESS ALERT:\"), \" User Added...\"),\n          close: true,\n          color: \"success\",\n          icon: Check,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }\n        }));\n      }).catch(err => {\n        setalertAdd( /*#__PURE__*/React.createElement(SnackbarContent, {\n          message: /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"b\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }\n          }, \"WARNING ALERT:\"), \" Server ERROR...\"),\n          close: true,\n          color: \"warning\",\n          icon: Warning,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }\n        }));\n      });\n    }\n  };\n\n  const deleteOneUser = oldData => {\n    dispatch(deleteUser(oldData.id)).then(res => {\n      setAlert(null);\n      setalertAdd(null);\n      if (res) setalertDelete( /*#__PURE__*/React.createElement(SnackbarContent, {\n        message: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }\n        }, \"SUCCESS ALERT:\"), \" User Deleted...\"),\n        close: true,\n        color: \"success\",\n        icon: Check,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }\n      }));else setalertDelete( /*#__PURE__*/React.createElement(SnackbarContent, {\n        message: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }\n        }, \"WARNING ALERT:\"), \" Server ERROR...\"),\n        close: true,\n        color: \"warning\",\n        icon: Warning,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }\n      }));\n    });\n  };\n\n  if (authDetail.loading) return /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 34\n    }\n  });else return /*#__PURE__*/React.createElement(React.Fragment, null, alert, alertAdd, alertDelete, /*#__PURE__*/React.createElement(NavPills, {\n    color: \"adminDashboard\",\n    tabs: [{\n      tabButton: \"Users List\",\n      tabIcon: Dashboard,\n      tabContent: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MaterialTable, {\n        title: \"Users List\",\n        columns: state.columns,\n        data: state.data,\n        icons: tableIcons,\n        editable: {\n          onRowAdd: newData => new Promise(resolve => {\n            resolve();\n            addUser(newData);\n          }),\n          onRowDelete: oldData => new Promise(resolve => {\n            resolve();\n            deleteOneUser(oldData);\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 19\n        }\n      }))\n    }, {\n      tabButton: \"Users Settings\",\n      tabIcon: Schedule,\n      tabContent: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 19\n        }\n      }, \"Empty\"))\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }));\n}\n\nUserList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(stylesContent)(UserList);","map":{"version":3,"sources":["/home/medamine/Desktop/Plateforme-de-gestion-de-carrieres-et-de-formations/frontend/src/containers/AdminDashboard/Content/UserList.js"],"names":["React","useState","useEffect","useSelector","useDispatch","getAllUsers","signUp","deleteUser","MaterialTable","PropTypes","withStyles","stylesContent","tableIcons","NavPills","Dashboard","Schedule","Warning","Check","CircularProgress","SnackbarContent","UserList","dispatch","authDetail","state","auth","alert","setAlert","alertAdd","setalertAdd","alertDelete","setalertDelete","setState","columns","title","field","data","then","res","addUser","newData","username","email","password","roles","includes","name","type","catch","err","deleteOneUser","oldData","id","loading","tabButton","tabIcon","tabContent","onRowAdd","Promise","resolve","onRowDelete","propTypes","classes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAllUsers, signUp, deleteUser } from \"../../../actions/AuthActions\";\nimport MaterialTable from \"material-table\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { stylesContent } from \"../styles/Styles\";\nimport { tableIcons } from \"../../tableFeatures/tableIcons\";\nimport NavPills from \"../../../components/NavPills/NavPills.js\";\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Schedule from \"@material-ui/icons/Schedule\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport Check from \"@material-ui/icons/Check\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SnackbarContent from \"../../../components/Snackbar/SnackbarContent.js\";\n\nfunction UserList() {\n  const dispatch = useDispatch();\n  const authDetail = useSelector((state) => state.auth);\n  const [alert, setAlert] = useState(null);\n  const [alertAdd, setalertAdd] = useState(null);\n  const [alertDelete, setalertDelete] = useState(null);\n\n  const [state, setState] = useState({\n    columns: [\n      { title: \"ID\", field: \"id\" },\n      { title: \"Username\", field: \"username\" },\n      { title: \"Role\", field: \"roles[0].name\" },\n      { title: \"Email\", field: \"email\" },\n      { title: \"Password\", field: \"password\" },\n    ],\n    data: [],\n  });\n  useEffect(() => {\n    dispatch(getAllUsers()).then((res) => {\n      if (res) {\n        setState({\n          columns: state.columns,\n          data: res.data,\n        });\n        setAlert(null);\n      } else\n        setAlert(\n          <SnackbarContent\n            message={\n              <span>\n                <b>WARNING ALERT:</b> Could not reach data... Refresh Page...\n              </span>\n            }\n            close\n            color=\"warning\"\n            icon={Warning}\n          />\n        );\n    });\n  }, [dispatch, state.columns]);\n  const addUser = (newData) => {\n    setAlert(null);\n    setalertDelete(null)\n    if (\n      !newData.username ||\n      !newData.email ||\n      !newData.password ||\n      !newData.roles\n    ) {\n      setalertAdd(\n        <SnackbarContent\n          message={\n            <span>\n              <b>WARNING ALERT:</b> Empty field(s)...\n            </span>\n          }\n          close\n          color=\"warning\"\n          icon={Warning}\n        />\n      );\n    } else if (\n      ![\"admin\", \"candidat\", \"mentor\", \"instructor\"].includes(\n        newData.roles[0].name\n      )\n    ) {\n      setalertAdd(\n        <SnackbarContent\n          message={\n            <span>\n              <b>ERROR ALERT:</b> Unknown role\n              ([\"admin\",\"candidat\",\"mentor\",\"instructor\"])...\n            </span>\n          }\n          close\n          color=\"warning\"\n          icon={Warning}\n        />\n      );\n    } else {\n      let username = newData.username;\n      let email = newData.email;\n      let password = newData.password;\n      let roles = [newData.roles[0].name];\n      dispatch(signUp({ username, email, password, roles }))\n        .then((res) => {\n          if (res.type === \"SIGNUP_USER_FAILURE\")\n          setalertAdd(\n              <SnackbarContent\n                message={\n                  <span>\n                    <b>WARNING ALERT:</b> Bad Request...\n                  </span>\n                }\n                close\n                color=\"warning\"\n                icon={Warning}\n              />\n            );\n          else\n          setalertAdd(\n              <SnackbarContent\n                message={\n                  <span>\n                    <b>SUCCESS ALERT:</b> User Added...\n                  </span>\n                }\n                close\n                color=\"success\"\n                icon={Check}\n              />\n            );\n        })\n        .catch((err) => {\n          setalertAdd(\n            <SnackbarContent\n              message={\n                <span>\n                  <b>WARNING ALERT:</b> Server ERROR...\n                </span>\n              }\n              close\n              color=\"warning\"\n              icon={Warning}\n            />\n          );\n        });\n    }\n  };\n  const deleteOneUser = (oldData) => {\n    dispatch(deleteUser(oldData.id)).then((res) => {\n      setAlert(null);\n      setalertAdd(null)\n      if (res)\n      setalertDelete(\n          <SnackbarContent\n            message={\n              <span>\n                <b>SUCCESS ALERT:</b> User Deleted...\n              </span>\n            }\n            close\n            color=\"success\"\n            icon={Check}\n          />\n        );\n      else\n      setalertDelete(\n          <SnackbarContent\n            message={\n              <span>\n                <b>WARNING ALERT:</b> Server ERROR...\n              </span>\n            }\n            close\n            color=\"warning\"\n            icon={Warning}\n          />\n        );\n    });\n  };\n  if (authDetail.loading) return <CircularProgress />;\n  else\n    return (\n      <>\n        {alert}\n        {alertAdd}\n        {alertDelete}\n        <NavPills\n          color=\"adminDashboard\"\n          tabs={[\n            {\n              tabButton: \"Users List\",\n              tabIcon: Dashboard,\n              tabContent: (\n                <>\n                  <MaterialTable\n                    title=\"Users List\"\n                    columns={state.columns}\n                    data={state.data}\n                    icons={tableIcons}\n                    editable={{\n                      onRowAdd: (newData) =>\n                        new Promise((resolve) => {\n                          resolve();\n                          addUser(newData);\n                        }),\n                      onRowDelete: (oldData) =>\n                        new Promise((resolve) => {\n                          resolve();\n                          deleteOneUser(oldData);\n                        }),\n                    }}\n                  />\n                </>\n              ),\n            },\n            {\n              tabButton: \"Users Settings\",\n              tabIcon: Schedule,\n              tabContent: (\n                <>\n                  <h1>Empty</h1>\n                </>\n              ),\n            },\n          ]}\n        />\n      </>\n    );\n}\n\nUserList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(stylesContent)(UserList);\n"]},"metadata":{},"sourceType":"module"}