{"ast":null,"code":"var _jsxFileName = \"/home/akrem/Desktop/frontend/src/containers/UserList.js\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport _ from \"lodash\";\n\nconst UserList = () => {\n  const dispatch = useDispatch();\n  const userList = useSelector(state => state.UserList);\n\n  const ShowData = () => {\n    if (!_.isEmpty(userList.data)) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 16\n        }\n      }, \"have data\");\n    }\n\n    if (userList.loading) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 16\n        }\n      }, \"Loading...\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default UserList;","map":{"version":3,"sources":["/home/akrem/Desktop/frontend/src/containers/UserList.js"],"names":["React","useDispatch","useSelector","_","UserList","dispatch","userList","state","ShowData","isEmpty","data","loading"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,CAAP,MAAc,QAAd;;AACA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,QAAQ,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACH,QAAlB,CAA5B;;AAEA,QAAMI,QAAQ,GAAG,MAAM;AACrB,QAAI,CAACL,CAAC,CAACM,OAAF,CAAUH,QAAQ,CAACI,IAAnB,CAAL,EAA+B;AAC3B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACH;;AACD,QAAIJ,QAAQ,CAACK,OAAb,EAAqB;AACjB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;AACF,GAPD;;AAQA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAbD;;AAeA,eAAeP,QAAf","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport _ from \"lodash\";\nconst UserList = () => {\n  const dispatch = useDispatch();\n  const userList = useSelector((state) => state.UserList);\n\n  const ShowData = () => {\n    if (!_.isEmpty(userList.data)) {\n        return <p>have data</p>\n    }\n    if (userList.loading){\n        return <p>Loading...</p>\n    }\n  };\n  return <div></div>;\n};\n\nexport default UserList;\n"]},"metadata":{},"sourceType":"module"}